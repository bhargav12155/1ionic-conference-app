{"version":3,"file":"src_app_pages_digital-feedback_digital-feedback_module_ts.js","mappings":"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","sources":["./src/app/pages/digital-feedback/digital-feedback-routing.module.ts","./src/app/pages/digital-feedback/digital-feedback.module.ts","./src/app/pages/digital-feedback/digital-feedback.page.ts","./src/app/pages/digital-feedback/digital-feedback.page.html","./src/app/providers/digital-feedback.service.ts"],"sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { DigitalFeedbackPage } from \"./digital-feedback.page\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: DigitalFeedbackPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DigitalFeedbackPageRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { DigitalFeedbackPageRoutingModule } from \"./digital-feedback-routing.module\";\nimport { DigitalFeedbackPage } from \"./digital-feedback.page\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DigitalFeedbackPageRoutingModule,\n  ],\n  declarations: [DigitalFeedbackPage],\n})\nexport class DigitalFeedbackPageModule {}\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport {\n  DigitalFeedbackService,\n  DigitalFeedbackSubmission,\n} from \"../../providers/digital-feedback.service\";\n\n@Component({\n  selector: \"app-digital-feedback\",\n  templateUrl: \"./digital-feedback.page.html\",\n  styleUrls: [\"./digital-feedback.page.scss\"],\n})\nexport class DigitalFeedbackPage implements OnInit, OnDestroy {\n  submissions: DigitalFeedbackSubmission[] = [];\n  search = \"\";\n  sortColumn: string = \"timestamp\";\n  sortDirection: \"asc\" | \"desc\" = \"desc\";\n  pageSize = 10;\n  currentPage = 1;\n  timeFilter: \"all\" | \"24h\" | \"7d\" | \"30d\" = \"all\";\n  experienceFilter: \"all\" | \"excellent\" | \"good\" | \"average\" | \"poor\" = \"all\";\n  startDateTime: string | null = null;\n  endDateTime: string | null = null;\n  status = \"\";\n  loading = false;\n  private timer: any;\n  Math = Math; // Make Math available in template\n  errorMessage: string | null = null;\n\n  constructor(private digitalFeedbackService: DigitalFeedbackService) {}\n\n  ngOnInit() {\n    this.refresh();\n    this.timer = setInterval(() => this.refresh(false), 60 * 1000);\n  }\n\n  ngOnDestroy() {\n    if (this.timer) clearInterval(this.timer);\n  }\n\n  async refresh(showLoading: boolean = true) {\n    this.loading = showLoading;\n    if (showLoading) this.status = \"Loading digital feedback data...\";\n    else this.status = \"Syncing latest data...\";\n\n    try {\n      const remote = await this.digitalFeedbackService.fetchFromServer();\n      this.digitalFeedbackService.mergeRemote(remote);\n      this.submissions = this.digitalFeedbackService.getAll();\n\n      // Update status with clear distinction between total and filtered\n      const totalRecords = this.submissions.length;\n      const filteredCount = this.filtered.length;\n\n      if (filteredCount === totalRecords) {\n        this.status = `Successfully loaded ${totalRecords} records`;\n      } else {\n        this.status = `Loaded ${totalRecords} total records • Showing ${filteredCount} matching your filters`;\n      }\n    } catch (error) {\n      const cachedCount = this.submissions.length;\n      const filteredCount = this.filtered.length;\n\n      this.errorMessage =\n        error instanceof Error ? error.message : \"Failed to load data\";\n\n      if (filteredCount === cachedCount) {\n        this.status = `Failed to sync. Showing ${cachedCount} cached records`;\n      } else {\n        this.status = `Failed to sync. Showing ${filteredCount} of ${cachedCount} cached records`;\n      }\n    } finally {\n      this.loading = false;\n      setTimeout(() => this.updateStatusForFilters(), 100);\n    }\n  }\n\n  // Force refresh by clearing cache first\n  async forceRefresh() {\n    this.loading = true;\n    this.status = \"Force refreshing from server...\";\n\n    try {\n      this.submissions = await this.digitalFeedbackService.forceRefresh();\n\n      const totalRecords = this.submissions.length;\n      const filteredCount = this.filtered.length;\n\n      if (filteredCount === totalRecords) {\n        this.status = `Force refreshed ${totalRecords} records from server`;\n      } else {\n        this.status = `Force refreshed ${totalRecords} total records • Showing ${filteredCount} matching your filters`;\n      }\n    } catch (error) {\n      this.status = \"Failed to force refresh from server\";\n      console.error(\"Force refresh failed:\", error);\n    } finally {\n      this.loading = false;\n      setTimeout(() => this.updateStatusForFilters(), 100);\n    }\n  }\n\n  // Handle ion-refresher events\n  async onRefresh(event: any) {\n    await this.refresh(false);\n    event.target.complete();\n  }\n\n  // Handle manual refresh button clicks\n  async doRefresh() {\n    await this.forceRefresh();\n  }\n\n  // Analytics getters\n  get excellentCount(): number {\n    return this.filtered.filter(\n      (f) => f.digitalFeedback?.overallExperience === \"excellent\"\n    ).length;\n  }\n\n  get todayCount(): number {\n    const today = new Date().toDateString();\n    return this.filtered.filter(\n      (f) => new Date(f.timestamp).toDateString() === today\n    ).length;\n  }\n\n    // Check if any filters are active\n  get hasSelectedFilter(): boolean {\n    return this.search.trim() !== '' || \n           this.timeFilter !== 'all' || \n           this.experienceFilter !== 'all' ||\n           this.startDateTime !== null ||\n           this.endDateTime !== null;\n  }\n\n  // Analytics getters\n  get totalSubmissions(): number {\n    return this.submissions.length;\n  }\n\n  get thisMonthCount(): number {\n    const now = new Date();\n    const startOfMonth = new Date(now.getFullYear(), now.getMonth(), 1);\n    return this.submissions.filter(s => new Date(s.timestamp) >= startOfMonth).length;\n  }\n\n  get averageRating(): string {\n    const ratings = this.submissions\n      .map(s => s.digitalFeedback?.overallExperience)\n      .filter(r => r && r !== '');\n    \n    if (ratings.length === 0) return 'N/A';\n    \n    // Map ratings to numbers for calculation\n    const ratingValues: { [key: string]: number } = {\n      'excellent': 5,\n      'good': 4,\n      'average': 3,\n      'poor': 2,\n      'very poor': 1\n    };\n    \n    const values = ratings.map(r => ratingValues[r?.toLowerCase()] || 3);\n    const avg = values.reduce((a, b) => a + b, 0) / values.length;\n    return avg.toFixed(1);\n  }\n\n  get uniqueEmailsCount(): number {\n    const emails = this.submissions\n      .map(s => s.contact?.email)\n      .filter(email => email && email.trim() !== '');\n    return new Set(emails).size;\n  }\n\n  get displayedSubmissions(): DigitalFeedbackSubmission[] {\n    return this.filtered;\n  }\n\n  get paginatedSubmissions(): DigitalFeedbackSubmission[] {\n    return this.paginated;\n  }\n\n  // Helper methods for template\n  trackBySubmission(index: number, submission: DigitalFeedbackSubmission): string {\n    return submission.id || submission.sessionId || index.toString();\n  }\n\n  getRatingColor(rating?: string): string {\n    if (!rating) return 'medium';\n    \n    switch (rating.toLowerCase()) {\n      case 'excellent': return 'success';\n      case 'good': return 'primary';\n      case 'average': return 'warning';\n      case 'poor':\n      case 'very poor': return 'danger';\n      default: return 'medium';\n    }\n  }\n\n  // Card expansion management\n  expandedCards = new Set<string>();\n\n  toggleCard(submission: DigitalFeedbackSubmission) {\n    const id = submission.id || submission.sessionId;\n    if (this.expandedCards.has(id)) {\n      this.expandedCards.delete(id);\n    } else {\n      this.expandedCards.add(id);\n    }\n  }\n\n  // Data formatting helpers\n  getDeviceInfo(device: any): string {\n    if (!device) return 'N/A';\n    const parts = [];\n    if (device.platform) parts.push(device.platform);\n    if (device.userAgent) {\n      const match = device.userAgent.match(/\\([^)]+\\)/);\n      if (match) parts.push(match[0]);\n    }\n    return parts.length > 0 ? parts.join(' ') : 'N/A';\n  }\n\n  getNetworkInfo(network: any): string {\n    if (!network) return 'N/A';\n    const parts = [];\n    if (network.ip) parts.push(`IP: ${network.ip}`);\n    if (network.geo?.country) parts.push(`Country: ${network.geo.country}`);\n    if (network.geo?.city) parts.push(`City: ${network.geo.city}`);\n    return parts.length > 0 ? parts.join(', ') : 'N/A';\n  }\n\n  getLocationInfo(location: any): string {\n    if (!location) return 'N/A';\n    const parts = [];\n    if (location.coordinates?.latitude && location.coordinates?.longitude) {\n      parts.push(`${location.coordinates.latitude.toFixed(4)}, ${location.coordinates.longitude.toFixed(4)}`);\n    }\n    if (location.timezone) parts.push(`TZ: ${location.timezone}`);\n    return parts.length > 0 ? parts.join(', ') : 'N/A';\n  }\n\n  // Search and filter methods\n  handleSearch(event: any) {\n    this.search = event.detail.value || '';\n    this.currentPage = 1; // Reset to first page when searching\n  }\n\n  toggleExperienceFilter(experience: \"excellent\" | \"good\" | \"average\" | \"poor\") {\n    if (this.experienceFilter === experience) {\n      this.experienceFilter = 'all';\n    } else {\n      this.experienceFilter = experience;\n    }\n    this.currentPage = 1; // Reset to first page when filtering\n  }\n\n  onPageSizeChange() {\n    this.currentPage = 1; // Reset to first page when changing page size\n  }\n\n  // Pagination methods (using existing totalPages getter)\n  nextPage() {\n    if (this.currentPage < this.totalPages) {\n      this.currentPage++;\n    }\n  }\n\n  previousPage() {\n    if (this.currentPage > 1) {\n      this.currentPage--;\n    }\n  }\n\n  // UI Helper methods\n  updateStatusForFilters() {\n    if (!this.submissions.length) return;\n\n    const totalRecords = this.submissions.length;\n    const filteredCount = this.filtered.length;\n\n    if (filteredCount === totalRecords) {\n      this.status = `Showing all ${totalRecords} records`;\n    } else {\n      this.status = `Loaded ${totalRecords} total records • Showing ${filteredCount} matching your filters`;\n    }\n  }\n\n  onSearchChange(event: any) {\n    this.search = event.detail.value;\n    this.currentPage = 1;\n    this.updateStatusForFilters();\n  }\n\n  onDateRangeChange() {\n    if (this.startDateTime && this.endDateTime) {\n      const startMs = new Date(this.startDateTime).getTime();\n      const endMs = new Date(this.endDateTime).getTime();\n\n      if (endMs < startMs) {\n        const temp = this.startDateTime;\n        this.startDateTime = this.endDateTime;\n        this.endDateTime = temp;\n      }\n    }\n    this.currentPage = 1;\n    this.updateStatusForFilters();\n  }\n\n  // Check if any filters are active\n  hasActiveFilters(): boolean {\n    return (\n      this.search.trim() !== \"\" ||\n      this.timeFilter !== \"all\" ||\n      this.experienceFilter !== \"all\" ||\n      this.hasCustomRange()\n    );\n  }\n\n  // Clear all filters\n  clearAllFilters() {\n    this.search = \"\";\n    this.timeFilter = \"all\";\n    this.experienceFilter = \"all\";\n    this.startDateTime = null;\n    this.endDateTime = null;\n    this.currentPage = 1;\n    this.updateStatusForFilters();\n  }\n\n  // Check if date range is valid\n  get isDateRangeValid(): boolean {\n    if (!this.startDateTime || !this.endDateTime) return true;\n    return (\n      new Date(this.startDateTime).getTime() <=\n      new Date(this.endDateTime).getTime()\n    );\n  }\n\n  // Get current filter info for display\n  get filterInfo(): string {\n    if (this.hasCustomRange()) {\n      const start = this.startDateTime\n        ? new Date(this.startDateTime).toLocaleString()\n        : \"Start\";\n      const end = this.endDateTime\n        ? new Date(this.endDateTime).toLocaleString()\n        : \"End\";\n      const valid = this.isDateRangeValid\n        ? \"\"\n        : \" (Invalid Range - Auto-corrected)\";\n      return `Custom range: ${start} to ${end}${valid}`;\n    }\n    if (this.timeFilter !== \"all\") {\n      return `Showing: ${this.timeFilter\n        .replace(\"h\", \" hours\")\n        .replace(\"d\", \" days\")}`;\n    }\n    return \"Showing: All records\";\n  }\n\n  hasCustomRange(): boolean {\n    return !!(this.startDateTime || this.endDateTime);\n  }\n\n  // Filtering & sorting helpers\n  get filtered(): DigitalFeedbackSubmission[] {\n    let data = [...this.submissions];\n    const now = Date.now();\n\n    // Search filter\n    if (this.search.trim()) {\n      const searchLower = this.search.toLowerCase();\n      data = data.filter(\n        (d) =>\n          d.contact?.name?.toLowerCase().includes(searchLower) ||\n          d.contact?.email?.toLowerCase().includes(searchLower) ||\n          d.digitalFeedback?.overallExperience\n            ?.toLowerCase()\n            .includes(searchLower) ||\n          d.digitalFeedback?.websiteCrmImprovements\n            ?.toLowerCase()\n            .includes(searchLower) ||\n          d.digitalFeedback?.likesDislikesDigital\n            ?.toLowerCase()\n            .includes(searchLower) ||\n          d.digitalFeedback?.priorityImprovements\n            ?.toLowerCase()\n            .includes(searchLower) ||\n          d.digitalFeedback?.additionalComments\n            ?.toLowerCase()\n            .includes(searchLower)\n      );\n    }\n\n    // Experience filter\n    if (this.experienceFilter !== \"all\") {\n      data = data.filter(\n        (d) => d.digitalFeedback?.overallExperience === this.experienceFilter\n      );\n    }\n\n    // Relative time filter only if no custom range\n    if (!this.hasCustomRange() && this.timeFilter !== \"all\") {\n      const cutoffMap: any = {\n        \"24h\": 24 * 3600 * 1000,\n        \"7d\": 7 * 24 * 3600 * 1000,\n        \"30d\": 30 * 24 * 3600 * 1000,\n      };\n      const cutoff = now - cutoffMap[this.timeFilter];\n      data = data.filter((d) => new Date(d.timestamp).getTime() >= cutoff);\n    }\n\n    // Custom date/time range filter\n    if (this.hasCustomRange()) {\n      let startMs = this.startDateTime\n        ? new Date(this.startDateTime).getTime()\n        : -Infinity;\n      let endMs = this.endDateTime\n        ? new Date(this.endDateTime).getTime()\n        : Infinity;\n\n      if (startMs > endMs && startMs !== -Infinity && endMs !== Infinity) {\n        [startMs, endMs] = [endMs, startMs];\n      }\n\n      data = data.filter((d) => {\n        const timestamp = new Date(d.timestamp).getTime();\n        return timestamp >= startMs && timestamp <= endMs;\n      });\n    }\n\n    // Sort\n    data.sort((a, b) => {\n      let aVal: any, bVal: any;\n\n      if (this.sortColumn === \"timestamp\") {\n        aVal = new Date(a.timestamp).getTime();\n        bVal = new Date(b.timestamp).getTime();\n      } else if (this.sortColumn === \"contact.name\") {\n        aVal = a.contact?.name || \"\";\n        bVal = b.contact?.name || \"\";\n      } else if (this.sortColumn === \"digitalFeedback.overallExperience\") {\n        aVal = a.digitalFeedback?.overallExperience || \"\";\n        bVal = b.digitalFeedback?.overallExperience || \"\";\n      } else {\n        return 0;\n      }\n\n      if (aVal < bVal) return this.sortDirection === \"asc\" ? -1 : 1;\n      if (aVal > bVal) return this.sortDirection === \"asc\" ? 1 : -1;\n      return 0;\n    });\n\n    return data;\n  }\n\n  get paginated(): DigitalFeedbackSubmission[] {\n    const start = (this.currentPage - 1) * this.pageSize;\n    return this.filtered.slice(start, start + this.pageSize);\n  }\n\n  get totalPages(): number {\n    return Math.ceil(this.filtered.length / this.pageSize);\n  }\n\n  setSort(column: string) {\n    if (this.sortColumn === column) {\n      this.sortDirection = this.sortDirection === \"asc\" ? \"desc\" : \"asc\";\n    } else {\n      this.sortColumn = column;\n      this.sortDirection = \"desc\";\n    }\n  }\n\n  changePage(page: number) {\n    if (page >= 1 && page <= this.totalPages) {\n      this.currentPage = page;\n    }\n  }\n\n  getPageNumbers(): number[] {\n    const pages = [];\n    const start = Math.max(1, this.currentPage - 2);\n    const end = Math.min(this.totalPages, this.currentPage + 2);\n    for (let i = start; i <= end; i++) {\n      pages.push(i);\n    }\n    return pages;\n  }\n\n  // Helper methods\n  formatDate(timestamp: string): string {\n    return new Date(timestamp).toLocaleDateString();\n  }\n\n  formatTime(timestamp: string): string {\n    return new Date(timestamp).toLocaleTimeString();\n  }\n\n  getInitials(name: string): string {\n    return name\n      .split(\" \")\n      .map((n) => n[0])\n      .join(\"\")\n      .toUpperCase()\n      .substring(0, 2);\n  }\n\n  getStatusColor(): string {\n    if (this.status.includes(\"Failed\")) return \"danger\";\n    if (this.status.includes(\"Force refreshed\")) return \"success\";\n    if (this.status.includes(\"Successfully\")) return \"success\";\n    return \"primary\";\n  }\n\n  getStatusIcon(): string {\n    if (this.status.includes(\"Failed\")) return \"warning\";\n    if (this.status.includes(\"Force refreshed\")) return \"checkmark-circle\";\n    if (this.status.includes(\"Successfully\")) return \"checkmark-circle\";\n    return \"information-circle\";\n  }\n\n  trackByFn(index: number, item: DigitalFeedbackSubmission): string {\n    return item.id || item.timestamp + item.sessionId;\n  }\n\n  // Export functions\n  exportCSV() {\n    const headers = [\n      \"Date\",\n      \"Time\",\n      \"Name\",\n      \"Email\",\n      \"Phone\",\n      \"Overall Experience\",\n      \"Website/CRM Improvements\",\n      \"Likes/Dislikes\",\n      \"Priority Improvements\",\n      \"Additional Comments\",\n      \"Device Platform\",\n      \"IP Address\",\n      \"Location\",\n    ];\n\n    const rows = [headers];\n\n    this.filtered.forEach((r) => {\n      rows.push([\n        this.formatDate(r.timestamp),\n        this.formatTime(r.timestamp),\n        r.contact?.name || \"\",\n        r.contact?.email || \"\",\n        r.contact?.phone || \"\",\n        r.digitalFeedback?.overallExperience || \"\",\n        r.digitalFeedback?.websiteCrmImprovements || \"\",\n        r.digitalFeedback?.likesDislikesDigital || \"\",\n        r.digitalFeedback?.priorityImprovements || \"\",\n        r.digitalFeedback?.additionalComments || \"\",\n        r.device?.platform || \"\",\n        r.network?.ip || \"\",\n        r.location?.coordinates\n          ? `${r.location.coordinates.latitude}, ${r.location.coordinates.longitude}`\n          : \"\",\n      ]);\n    });\n\n    const csv = rows\n      .map((r) => r.map((c) => '\"' + c.replace(/\"/g, '\"\"') + '\"').join(\",\"))\n      .join(\"\\n\");\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"digital-feedback.csv\";\n    a.click();\n    URL.revokeObjectURL(url);\n  }\n\n  exportPrint() {\n    const printContents =\n      document.getElementById(\"digitalFeedbackTable\")?.outerHTML || \"\";\n    const w = window.open(\"\", \"\", \"height=700,width=900\");\n    if (!w) return;\n    w.document.write(\"<html><head><title>Digital Feedback</title>\");\n    w.document.write(\n      \"<style>table{width:100%;border-collapse:collapse;}th,td{border:1px solid #ccc;padding:4px;font-size:12px;}th{background:#eee;}</style>\"\n    );\n    w.document.write(\"</head><body>\");\n    w.document.write(printContents);\n    w.document.write(\"</body></html>\");\n    w.document.close();\n    w.print();\n  }\n}\n","<ion-header [translucent]=\"true\">\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-menu-button></ion-menu-button>\n            <ion-back-button defaultHref=\"/\"></ion-back-button>\n        </ion-buttons>\n        <ion-title>Digital Feedback</ion-title>\n        <ion-buttons slot=\"end\">\n            <ion-button [disabled]=\"!hasActiveFilters()\" (click)=\"clearAllFilters()\">\n                <ion-icon name=\"filter-outline\"></ion-icon>\n            </ion-button>\n        </ion-buttons>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\" class=\"digital-feedback-content\">\n    <ion-header collapse=\"condense\">\n        <ion-toolbar>\n            <ion-title size=\"large\">Digital Feedback</ion-title>\n        </ion-toolbar>\n    </ion-header>\n\n    <!-- Loading State -->\n    <div *ngIf=\"loading\" class=\"loading-container\">\n        <ion-spinner name=\"circular\"></ion-spinner>\n        <p>Loading digital feedback data...</p>\n    </div>\n\n    <!-- Error State -->\n    <div *ngIf=\"errorMessage && !loading\" class=\"error-container\">\n        <ion-icon name=\"warning-outline\" color=\"danger\"></ion-icon>\n        <h3>Error Loading Data</h3>\n        <p>{{ errorMessage }}</p>\n        <ion-button fill=\"outline\" (click)=\"doRefresh()\">\n            <ion-icon name=\"refresh-outline\" slot=\"start\"></ion-icon>\n            Try Again\n        </ion-button>\n    </div>\n\n    <!-- Analytics Cards -->\n    <div *ngIf=\"!loading && !errorMessage\" class=\"analytics-section\">\n        <div class=\"analytics-grid\">\n            <div class=\"analytics-card\">\n                <div class=\"card-header\">\n                    <h3>Total Submissions</h3>\n                    <ion-icon name=\"document-text-outline\"></ion-icon>\n                </div>\n                <div class=\"card-value\">{{ totalSubmissions }}</div>\n            </div>\n\n            <div class=\"analytics-card\">\n                <div class=\"card-header\">\n                    <h3>This Month</h3>\n                    <ion-icon name=\"calendar-outline\"></ion-icon>\n                </div>\n                <div class=\"card-value\">{{ thisMonthCount }}</div>\n            </div>\n\n            <div class=\"analytics-card\">\n                <div class=\"card-header\">\n                    <h3>Avg Rating</h3>\n                    <ion-icon name=\"star-outline\"></ion-icon>\n                </div>\n                <div class=\"card-value\">{{ averageRating }}</div>\n            </div>\n\n            <div class=\"analytics-card\">\n                <div class=\"card-header\">\n                    <h3>Unique Users</h3>\n                    <ion-icon name=\"people-outline\"></ion-icon>\n                </div>\n                <div class=\"card-value\">{{ uniqueEmailsCount }}</div>\n            </div>\n        </div>\n    </div>\n\n    <!-- Controls Section -->\n    <div *ngIf=\"!loading && !errorMessage\" class=\"controls-section\">\n        <!-- Search Bar -->\n        <ion-searchbar [(ngModel)]=\"search\" (ionInput)=\"handleSearch($event)\"\n            placeholder=\"Search by name, email, or comments...\" debounce=\"300\" show-clear-button=\"focus\">\n        </ion-searchbar>\n\n        <!-- Filter Chips -->\n        <div class=\"filter-chips\">\n            <ion-chip [color]=\"experienceFilter === 'excellent' ? 'success' : 'medium'\"\n                (click)=\"toggleExperienceFilter('excellent')\">\n                <ion-icon name=\"star\"></ion-icon>\n                <ion-label>Excellent</ion-label>\n            </ion-chip>\n            <ion-chip [color]=\"experienceFilter === 'good' ? 'primary' : 'medium'\" (click)=\"toggleExperienceFilter('good')\">\n                <ion-icon name=\"thumbs-up\"></ion-icon>\n                <ion-label>Good</ion-label>\n            </ion-chip>\n            <ion-chip [color]=\"experienceFilter === 'average' ? 'warning' : 'medium'\"\n                (click)=\"toggleExperienceFilter('average')\">\n                <ion-icon name=\"remove\"></ion-icon>\n                <ion-label>Average</ion-label>\n            </ion-chip>\n            <ion-chip [color]=\"experienceFilter === 'poor' ? 'danger' : 'medium'\" (click)=\"toggleExperienceFilter('poor')\">\n                <ion-icon name=\"thumbs-down\"></ion-icon>\n                <ion-label>Poor</ion-label>\n            </ion-chip>\n        </div>\n\n        <!-- Sort & Export Row -->\n        <div class=\"controls-row\">\n            <ion-select [(ngModel)]=\"sortBy\" placeholder=\"Sort by...\" interface=\"popover\">\n                <ion-select-option value=\"timestamp\">Date (Newest)</ion-select-option>\n                <ion-select-option value=\"timestamp-asc\">Date (Oldest)</ion-select-option>\n                <ion-select-option value=\"name\">Name (A-Z)</ion-select-option>\n                <ion-select-option value=\"rating\">Rating</ion-select-option>\n            </ion-select>\n\n            <div class=\"button-group\">\n                <ion-button fill=\"outline\" size=\"small\" (click)=\"doRefresh()\" [disabled]=\"loading\">\n                    <ion-icon name=\"refresh-outline\" slot=\"start\"></ion-icon>\n                    Refresh\n                </ion-button>\n                <ion-button fill=\"solid\" size=\"small\" (click)=\"exportToCSV()\"\n                    [disabled]=\"displayedSubmissions.length === 0\">\n                    <ion-icon name=\"download-outline\" slot=\"start\"></ion-icon>\n                    Export CSV\n                </ion-button>\n            </div>\n        </div>\n    </div>\n\n    <!-- Results Section -->\n    <div *ngIf=\"!loading && !errorMessage\" class=\"results-section\">\n        <div class=\"results-header\">\n            <p class=\"results-count\">\n                Showing {{ displayedSubmissions.length }} of {{ totalSubmissions }} submissions\n                <span *ngIf=\"hasActiveFilters()\" class=\"filter-indicator\">(filtered)</span>\n            </p>\n        </div>\n\n        <!-- Empty State -->\n        <div *ngIf=\"displayedSubmissions.length === 0\" class=\"empty-state\">\n            <ion-icon name=\"document-outline\" color=\"medium\"></ion-icon>\n            <h3>No digital feedback found</h3>\n            <p *ngIf=\"hasActiveFilters()\">Try adjusting your filters or search terms.</p>\n            <p *ngIf=\"!hasActiveFilters()\">Digital feedback submissions will appear here.</p>\n        </div>\n\n        <!-- Submissions List -->\n        <div *ngIf=\"displayedSubmissions.length > 0\" class=\"submissions-list\">\n            <ion-card *ngFor=\"let submission of paginatedSubmissions; trackBy: trackBySubmission\"\n                class=\"submission-card\" [class.expanded]=\"expandedCards.has(submission.id || submission.sessionId)\">\n\n                <!-- Card Header -->\n                <ion-card-header (click)=\"toggleCard(submission)\">\n                    <div class=\"card-header-content\">\n                        <div class=\"contact-info\">\n                            <h4>{{ submission.contact?.name || 'Anonymous' }}</h4>\n                            <p class=\"email\">{{ submission.contact?.email || 'No email' }}</p>\n                            <p class=\"phone\" *ngIf=\"submission.contact?.phone\">{{ submission.contact.phone }}</p>\n                        </div>\n                        <div class=\"card-meta\">\n                            <ion-chip class=\"rating-chip\"\n                                [color]=\"getRatingColor(submission.digitalFeedback?.overallExperience)\">\n                                {{ submission.digitalFeedback?.overallExperience || 'N/A' }}\n                            </ion-chip>\n                            <p class=\"timestamp\">{{ formatDate(submission.timestamp) }}</p>\n                            <ion-icon\n                                [name]=\"expandedCards.has(submission.id || submission.sessionId) ? 'chevron-up' : 'chevron-down'\"></ion-icon>\n                        </div>\n                    </div>\n                </ion-card-header>\n\n                <!-- Expanded Content -->\n                <ion-card-content *ngIf=\"expandedCards.has(submission.id || submission.sessionId)\">\n                    <!-- Digital Feedback Details -->\n                    <div class=\"feedback-section\">\n                        <h5>Digital Experience Feedback</h5>\n\n                        <div class=\"feedback-item\" *ngIf=\"submission.digitalFeedback?.websiteCrmImprovements\">\n                            <strong>Website/CRM Improvements:</strong>\n                            <p>{{ submission.digitalFeedback.websiteCrmImprovements }}</p>\n                        </div>\n\n                        <div class=\"feedback-item\" *ngIf=\"submission.digitalFeedback?.likesDislikesDigital\">\n                            <strong>Likes/Dislikes Digital:</strong>\n                            <p>{{ submission.digitalFeedback.likesDislikesDigital }}</p>\n                        </div>\n\n                        <div class=\"feedback-item\" *ngIf=\"submission.digitalFeedback?.priorityImprovements\">\n                            <strong>Priority Improvements:</strong>\n                            <p>{{ submission.digitalFeedback.priorityImprovements }}</p>\n                        </div>\n\n                        <div class=\"feedback-item\" *ngIf=\"submission.digitalFeedback?.additionalComments\">\n                            <strong>Additional Comments:</strong>\n                            <p>{{ submission.digitalFeedback.additionalComments }}</p>\n                        </div>\n                    </div>\n\n                    <!-- Technical Details -->\n                    <div class=\"technical-section\"\n                        *ngIf=\"submission.device || submission.network || submission.location\">\n                        <h5>Technical Information</h5>\n\n                        <div class=\"tech-grid\">\n                            <div class=\"tech-item\" *ngIf=\"submission.device\">\n                                <strong>Device:</strong>\n                                <p>{{ getDeviceInfo(submission.device) }}</p>\n                            </div>\n\n                            <div class=\"tech-item\" *ngIf=\"submission.network\">\n                                <strong>Network:</strong>\n                                <p>{{ getNetworkInfo(submission.network) }}</p>\n                            </div>\n\n                            <div class=\"tech-item\" *ngIf=\"submission.location\">\n                                <strong>Location:</strong>\n                                <p>{{ getLocationInfo(submission.location) }}</p>\n                            </div>\n\n                            <div class=\"tech-item\" *ngIf=\"submission.sessionId\">\n                                <strong>Session:</strong>\n                                <p>{{ submission.sessionId }}</p>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Metadata -->\n                    <div class=\"metadata-section\">\n                        <p class=\"meta-item\" *ngIf=\"submission.receivedAt\">\n                            <strong>Received:</strong> {{ formatDate(submission.receivedAt) }}\n                        </p>\n                        <p class=\"meta-item\" *ngIf=\"submission.appName\">\n                            <strong>App:</strong> {{ submission.appName }}\n                        </p>\n                    </div>\n                </ion-card-content>\n            </ion-card>\n        </div>\n\n        <!-- Pagination -->\n        <div *ngIf=\"totalPages > 1\" class=\"pagination-section\">\n            <div class=\"pagination-controls\">\n                <ion-button fill=\"clear\" [disabled]=\"currentPage === 1\" (click)=\"previousPage()\">\n                    <ion-icon name=\"chevron-back\"></ion-icon>\n                    Previous\n                </ion-button>\n\n                <div class=\"page-info\">\n                    <span>Page {{ currentPage }} of {{ totalPages }}</span>\n                    <ion-select [(ngModel)]=\"pageSize\" (ionChange)=\"onPageSizeChange()\">\n                        <ion-select-option value=\"10\">10 per page</ion-select-option>\n                        <ion-select-option value=\"25\">25 per page</ion-select-option>\n                        <ion-select-option value=\"50\">50 per page</ion-select-option>\n                    </ion-select>\n                </div>\n\n                <ion-button fill=\"clear\" [disabled]=\"currentPage === totalPages\" (click)=\"nextPage()\">\n                    Next\n                    <ion-icon name=\"chevron-forward\"></ion-icon>\n                </ion-button>\n            </div>\n        </div>\n    </div>\n\n    <!-- Pull to Refresh -->\n    <ion-refresher slot=\"fixed\" (ionRefresh)=\"onRefresh($event)\">\n        <ion-refresher-content pullingIcon=\"chevron-down-circle-outline\" pullingText=\"Pull to refresh\"\n            refreshingSpinner=\"circular\" refreshingText=\"Refreshing...\">\n        </ion-refresher-content>\n    </ion-refresher>\n\n</ion-content>","import { Injectable } from \"@angular/core\";\n\nexport interface DigitalFeedback {\n  websiteCrmImprovements: string;\n  likesDislikesDigital: string;\n  overallExperience: string;\n  priorityImprovements: string;\n  additionalComments: string;\n}\n\nexport interface ContactInfo {\n  name: string;\n  email: string;\n  phone: string;\n}\n\nexport interface DigitalFeedbackSubmission {\n  id?: string; // backend id\n  timestamp: string; // ISO string\n  sessionId: string;\n  digitalFeedback: DigitalFeedback;\n  contact: ContactInfo;\n  location?: {\n    coordinates?: { latitude: number; longitude: number };\n    timezone?: string;\n  };\n  device?: any;\n  network?: any;\n  receivedAt?: string;\n  appName?: string;\n}\n\n@Injectable({ providedIn: \"root\" })\nexport class DigitalFeedbackService {\n  private localKey = \"app_digital_feedback_submissions_v1\";\n  private submissions: DigitalFeedbackSubmission[] = [];\n\n  constructor() {\n    this.loadFromStorage();\n  }\n\n  private loadFromStorage() {\n    try {\n      const raw = localStorage.getItem(this.localKey);\n      if (raw) this.submissions = JSON.parse(raw);\n    } catch (e) {\n      console.warn(\"Failed to load digital feedback from storage\", e);\n    }\n  }\n\n  private persist() {\n    try {\n      localStorage.setItem(this.localKey, JSON.stringify(this.submissions));\n    } catch (e) {\n      console.warn(\"Failed to persist digital feedback to storage\", e);\n    }\n  }\n\n  getAll(): DigitalFeedbackSubmission[] {\n    return [...this.submissions];\n  }\n\n  // Clear local cache and force fresh fetch\n  clearCache() {\n    console.log(\"Clearing digital feedback cache\");\n    this.submissions = [];\n    localStorage.removeItem(this.localKey);\n  }\n\n  // Force refresh from server (clears cache first)\n  async forceRefresh(): Promise<DigitalFeedbackSubmission[]> {\n    this.clearCache();\n    const serverData = await this.fetchFromServer();\n    this.mergeRemote(serverData);\n    return this.getAll();\n  }\n\n  private getApiBase(): string {\n    // Always use production API for digital feedback\n    return \"https://loc-end.onrender.com\";\n  }\n\n  // Fetch list from backend (read-only)\n  async fetchFromServer(): Promise<DigitalFeedbackSubmission[]> {\n    const API_BASE = this.getApiBase();\n    console.log(\"Fetching from server:\", `${API_BASE}/api/digital-feedback`);\n\n    try {\n      const res = await fetch(`${API_BASE}/api/digital-feedback`, {\n        headers: {\n          Accept: \"application/json\",\n          \"Cache-Control\": \"no-cache, no-store, must-revalidate\",\n          Pragma: \"no-cache\",\n          Expires: \"0\",\n        },\n      });\n\n      if (!res.ok) throw new Error(`GET /api/digital-feedback ${res.status}`);\n\n      const data = await res.json();\n      console.log(\"Server response:\", {\n        count: data?.length,\n        sample: data?.[0],\n      });\n\n      if (!Array.isArray(data)) return [];\n\n      // Normalize minimal fields (defensive)\n      return data.map((d: any) => ({\n        id: d.id || d._id,\n        timestamp: d.timestamp || d.createdAt || new Date().toISOString(),\n        sessionId: d.sessionId || \"n/a\",\n        digitalFeedback: d.digitalFeedback || {\n          websiteCrmImprovements: d.websiteCrmImprovements || \"\",\n          likesDislikesDigital: d.likesDislikesDigital || \"\",\n          overallExperience: d.overallExperience || \"\",\n          priorityImprovements: d.priorityImprovements || \"\",\n          additionalComments: d.additionalComments || \"\",\n        },\n        contact: d.contact || {\n          name: d.name || \"\",\n          email: d.email || \"\",\n          phone: d.phone || \"\",\n        },\n        location: d.location,\n        device: d.device,\n        network: d.network,\n        receivedAt: d.receivedAt,\n        appName: d.appName,\n      }));\n    } catch (e) {\n      console.error(\"Failed to fetch digital feedback list:\", e);\n      throw e; // Re-throw to let caller handle the error\n    }\n  }\n\n  mergeRemote(list: DigitalFeedbackSubmission[]) {\n    console.log(\"Merging remote data:\", {\n      remoteCount: list.length,\n      localCount: this.submissions.length,\n    });\n\n    // Instead of merging, completely replace with server data\n    // This ensures deletions and updates from server are reflected\n    if (list.length >= 0) {\n      // Even if empty array, trust the server\n      this.submissions = [...list];\n      this.persist();\n      console.log(\n        \"Replaced local cache with server data:\",\n        this.submissions.length\n      );\n    }\n  }\n\n  // Retain submit method for future use\n  async submit(\n    feedback: Omit<DigitalFeedbackSubmission, \"id\">\n  ): Promise<DigitalFeedbackSubmission> {\n    const API_BASE = this.getApiBase();\n    const response = await fetch(`${API_BASE}/api/digital-feedback`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(feedback),\n    });\n    if (!response.ok) throw new Error(`HTTP ${response.status}`);\n    const data = await response.json();\n    const stored: DigitalFeedbackSubmission = {\n      ...feedback,\n      id: data.id || data._id,\n    };\n    this.submissions.unshift(stored);\n    this.persist();\n    return stored;\n  }\n}\n"],"names":["RouterModule","DigitalFeedbackPage","routes","path","component","DigitalFeedbackPageRoutingModule","forChild","imports","i1","exports","CommonModule","FormsModule","IonicModule","DigitalFeedbackPageModule","declarations","DigitalFeedbackService","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DigitalFeedbackPage_div_16_Template_ion_button_click_6_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","doRefresh","ɵɵadvance","ɵɵtextInterpolate","errorMessage","totalSubmissions","thisMonthCount","averageRating","uniqueEmailsCount","ɵɵtwoWayListener","DigitalFeedbackPage_div_18_Template_ion_searchbar_ngModelChange_1_listener","$event","_r3","ɵɵtwoWayBindingSet","search","DigitalFeedbackPage_div_18_Template_ion_searchbar_ionInput_1_listener","handleSearch","DigitalFeedbackPage_div_18_Template_ion_chip_click_3_listener","toggleExperienceFilter","DigitalFeedbackPage_div_18_Template_ion_chip_click_7_listener","DigitalFeedbackPage_div_18_Template_ion_chip_click_11_listener","DigitalFeedbackPage_div_18_Template_ion_chip_click_15_listener","DigitalFeedbackPage_div_18_Template_ion_select_ngModelChange_20_listener","sortBy","DigitalFeedbackPage_div_18_Template_ion_button_click_30_listener","DigitalFeedbackPage_div_18_Template_ion_button_click_33_listener","exportToCSV","ɵɵtwoWayProperty","ɵɵproperty","experienceFilter","loading","displayedSubmissions","length","ɵɵtemplate","DigitalFeedbackPage_div_19_div_5_p_4_Template","DigitalFeedbackPage_div_19_div_5_p_5_Template","hasActiveFilters","submission_r5","contact","phone","digitalFeedback","websiteCrmImprovements","likesDislikesDigital","priorityImprovements","additionalComments","getDeviceInfo","device","getNetworkInfo","network","getLocationInfo","location","sessionId","DigitalFeedbackPage_div_19_div_6_ion_card_1_ion_card_content_15_div_8_div_4_Template","DigitalFeedbackPage_div_19_div_6_ion_card_1_ion_card_content_15_div_8_div_5_Template","DigitalFeedbackPage_div_19_div_6_ion_card_1_ion_card_content_15_div_8_div_6_Template","DigitalFeedbackPage_div_19_div_6_ion_card_1_ion_card_content_15_div_8_div_7_Template","ɵɵtextInterpolate1","formatDate","receivedAt","appName","DigitalFeedbackPage_div_19_div_6_ion_card_1_ion_card_content_15_div_4_Template","DigitalFeedbackPage_div_19_div_6_ion_card_1_ion_card_content_15_div_5_Template","DigitalFeedbackPage_div_19_div_6_ion_card_1_ion_card_content_15_div_6_Template","DigitalFeedbackPage_div_19_div_6_ion_card_1_ion_card_content_15_div_7_Template","DigitalFeedbackPage_div_19_div_6_ion_card_1_ion_card_content_15_div_8_Template","DigitalFeedbackPage_div_19_div_6_ion_card_1_ion_card_content_15_p_10_Template","DigitalFeedbackPage_div_19_div_6_ion_card_1_ion_card_content_15_p_11_Template","DigitalFeedbackPage_div_19_div_6_ion_card_1_Template_ion_card_header_click_1_listener","_r4","$implicit","toggleCard","DigitalFeedbackPage_div_19_div_6_ion_card_1_p_8_Template","DigitalFeedbackPage_div_19_div_6_ion_card_1_ion_card_content_15_Template","ɵɵclassProp","expandedCards","has","id","name","email","getRatingColor","overallExperience","timestamp","DigitalFeedbackPage_div_19_div_6_ion_card_1_Template","paginatedSubmissions","trackBySubmission","DigitalFeedbackPage_div_19_div_7_Template_ion_button_click_2_listener","_r6","previousPage","DigitalFeedbackPage_div_19_div_7_Template_ion_select_ngModelChange_8_listener","pageSize","DigitalFeedbackPage_div_19_div_7_Template_ion_select_ionChange_8_listener","onPageSizeChange","DigitalFeedbackPage_div_19_div_7_Template_ion_button_click_15_listener","nextPage","currentPage","ɵɵtextInterpolate2","totalPages","DigitalFeedbackPage_div_19_span_4_Template","DigitalFeedbackPage_div_19_div_5_Template","DigitalFeedbackPage_div_19_div_6_Template","DigitalFeedbackPage_div_19_div_7_Template","constructor","digitalFeedbackService","submissions","sortColumn","sortDirection","timeFilter","startDateTime","endDateTime","status","Math","Set","ngOnInit","refresh","timer","setInterval","ngOnDestroy","clearInterval","showLoading","_this","_asyncToGenerator","remote","fetchFromServer","mergeRemote","getAll","totalRecords","filteredCount","filtered","error","cachedCount","Error","message","setTimeout","updateStatusForFilters","forceRefresh","_this2","console","onRefresh","event","_this3","target","complete","_this4","excellentCount","filter","f","_f$digitalFeedback","todayCount","today","Date","toDateString","hasSelectedFilter","trim","now","startOfMonth","getFullYear","getMonth","s","ratings","map","_s$digitalFeedback","r","ratingValues","values","toLowerCase","avg","reduce","a","b","toFixed","emails","_s$contact","size","paginated","index","submission","toString","rating","delete","add","parts","platform","push","userAgent","match","join","_network$geo","_network$geo2","ip","geo","country","city","_location$coordinates","_location$coordinates2","coordinates","latitude","longitude","timezone","detail","value","experience","onSearchChange","onDateRangeChange","startMs","getTime","endMs","temp","hasCustomRange","clearAllFilters","isDateRangeValid","filterInfo","start","toLocaleString","end","valid","replace","data","searchLower","d","_d$contact","_d$contact2","_d$digitalFeedback","_d$digitalFeedback2","_d$digitalFeedback3","_d$digitalFeedback4","_d$digitalFeedback5","includes","_d$digitalFeedback6","cutoffMap","cutoff","Infinity","sort","aVal","bVal","_a$contact","_b$contact","_a$digitalFeedback","_b$digitalFeedback","slice","ceil","setSort","column","changePage","page","getPageNumbers","pages","max","min","i","toLocaleDateString","formatTime","toLocaleTimeString","getInitials","split","n","toUpperCase","substring","getStatusColor","getStatusIcon","trackByFn","item","exportCSV","headers","rows","forEach","_r$contact","_r$contact2","_r$contact3","_r$digitalFeedback","_r$digitalFeedback2","_r$digitalFeedback3","_r$digitalFeedback4","_r$digitalFeedback5","_r$device","_r$network","_r$location","csv","c","blob","Blob","type","url","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","exportPrint","_document$getElementB","printContents","getElementById","outerHTML","w","window","open","write","close","print","ɵɵdirectiveInject","selectors","decls","vars","consts","template","DigitalFeedbackPage_Template","rf","ctx","DigitalFeedbackPage_Template_ion_button_click_8_listener","DigitalFeedbackPage_div_15_Template","DigitalFeedbackPage_div_16_Template","DigitalFeedbackPage_div_17_Template","DigitalFeedbackPage_div_18_Template","DigitalFeedbackPage_div_19_Template","DigitalFeedbackPage_Template_ion_refresher_ionRefresh_20_listener","localKey","loadFromStorage","raw","localStorage","getItem","JSON","parse","e","warn","persist","setItem","stringify","clearCache","log","removeItem","serverData","getApiBase","API_BASE","res","fetch","Accept","Pragma","Expires","ok","json","count","sample","Array","isArray","_id","createdAt","toISOString","list","remoteCount","localCount","submit","feedback","response","method","body","stored","unshift","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}