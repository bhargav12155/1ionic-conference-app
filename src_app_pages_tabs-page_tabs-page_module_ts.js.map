{"version":3,"file":"src_app_pages_tabs-page_tabs-page_module_ts.js","mappings":"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","sources":["./src/app/pages/activity-log/activity-log-routing.module.ts","./src/app/pages/activity-log/activity-log.module.ts","./src/app/pages/activity-log/activity-log.page.ts","./src/app/pages/activity-log/activity-log.page.html","./src/app/pages/tabs-page/tabs-page-routing.module.ts","./src/app/pages/tabs-page/tabs-page.module.ts","./src/app/pages/tabs-page/tabs-page.ts","./src/app/pages/tabs-page/tabs-page.html","./src/app/pages/users/users-routing.module.ts","./src/app/pages/users/users.module.ts","./src/app/pages/users/users.page.ts","./src/app/pages/users/users.page.html","./src/app/providers/geofence.service.ts","./node_modules/@capacitor/device/dist/esm/index.js","./node_modules/@capacitor/network/dist/esm/index.js"],"sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { ActivityLogPage } from \"./activity-log.page\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ActivityLogPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ActivityLogPageRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { IonicModule } from \"@ionic/angular\";\nimport { ActivityLogPage } from \"./activity-log.page\";\nimport { ActivityLogPageRoutingModule } from \"./activity-log-routing.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ActivityLogPageRoutingModule,\n  ],\n  declarations: [ActivityLogPage],\n})\nexport class ActivityLogModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n  GeofenceService,\n  GeofenceEvent,\n} from \"../../providers/geofence.service\";\n\n@Component({\n  selector: \"app-activity-log\",\n  templateUrl: \"./activity-log.page.html\",\n  styleUrls: [\"./activity-log.page.scss\"],\n})\nexport class ActivityLogPage implements OnInit {\n  // Add filtering properties\n  searchQuery: string = \"\";\n  filterType: string = \"all\";\n  // Helper to safely format numbers for display (prevents .toFixed errors)\n  getNumberField(event: any, field: string, digits: number = 2): string {\n    const value = event[field];\n    return typeof value === \"number\" ? value.toFixed(digits) : \"_\";\n  }\n  async fetchExternalEvents(): Promise<GeofenceEvent[]> {\n    try {\n      // Determine API base URL based on environment\n      const isLocal =\n        window.location.protocol === \"file:\" ||\n        window.location.hostname === \"localhost\" ||\n        window.location.hostname === \"127.0.0.1\";\n      const API_BASE = isLocal\n        ? \"http://localhost:3000\"\n        : \"https://loc-end.onrender.com\";\n\n      console.log(\"Fetching external events from:\", `${API_BASE}/api/location`);\n\n      const response = await fetch(`${API_BASE}/api/location`);\n      if (!response.ok)\n        throw new Error(`API request failed with status: ${response.status}`);\n      const data = await response.json();\n      // Sanitize and adapt API response to GeofenceEvent[]\n      if (!Array.isArray(data)) return [];\n      return data.map((event: any) => {\n        // Always return location as an object\n        let location = { latitude: null, longitude: null };\n        if (event.lat !== undefined && event.lng !== undefined) {\n          location = { latitude: event.lat, longitude: event.lng };\n        }\n\n        // Extract ip address from network object (not array)\n        let ipAddress = \"_\";\n        if (event.network && event.network.ip) {\n          ipAddress = event.network.ip;\n        }\n\n        // Extract device platform from device object (not array)\n        let deviceType = \"_\";\n        if (event.device && event.device.platform) {\n          deviceType = event.device.platform;\n        }\n\n        return {\n          timestamp:\n            event.timestamp ??\n            event.receivedAt ??\n            event.serverReceivedAt ??\n            null,\n          locationName:\n            event.locationName ?? event.location ?? event.name ?? \"_\",\n          userId: event.userId ?? \"_\",\n          phoneNumber: event.phoneNumber ?? event.phone ?? \"_\",\n          email: event.email ?? \"_\",\n          ipAddress,\n          deviceType,\n          type: event.type ?? \"_\",\n          entryTimestamp: event.entryTimestamp ?? null,\n          exitTimestamp: event.exitTimestamp ?? null,\n          userDeviceInfo: event.userDeviceInfo ?? \"_\",\n          location,\n          // Add accuracy field\n          accuracy: event.accuracy ?? null,\n        };\n      });\n    } catch (error) {\n      console.error(\"Error fetching external events:\", error);\n      return [];\n    }\n  }\n  // Helper to format event data for display\n  getDisplayField(event: any, field: string): string {\n    let value = event[field];\n\n    if (field === \"ipAddress\") {\n      // Check direct field first, then network object\n      if (event.ipAddress && event.ipAddress !== \"_\") {\n        value = event.ipAddress;\n      } else if (event.network && event.network.ip) {\n        value = event.network.ip;\n      }\n      if (value === undefined || value === null || value === \"\") return \"_\";\n      return value;\n    }\n\n    if (field === \"device\" || field === \"deviceType\") {\n      // Check direct field first, then device object\n      if (event.deviceType && event.deviceType !== \"_\") {\n        value = event.deviceType;\n      } else if (event.device && event.device.platform) {\n        value = event.device.platform;\n      }\n      if (value === undefined || value === null || value === \"\")\n        return \"Unknown\";\n      return value;\n    }\n\n    if (field === \"accuracy\") {\n      if (typeof value === \"number\") return value.toString();\n      if (event.accuracy !== undefined && event.accuracy !== null)\n        return event.accuracy.toString();\n      return \"_\";\n    }\n\n    if (field === \"userId\") {\n      if (event.userId && event.userId !== \"_\") return event.userId;\n      return \"_\";\n    }\n\n    if (value === undefined || value === null || value === \"\") return \"_\";\n\n    if (\n      field === \"timestamp\" ||\n      field === \"entryTimestamp\" ||\n      field === \"exitTimestamp\"\n    ) {\n      return value ? this.formatTimestamp(value) : \"_\";\n    }\n\n    if (field === \"location\") {\n      if (\n        value &&\n        typeof value === \"object\" &&\n        value.latitude !== null &&\n        value.longitude !== null\n      ) {\n        return `${Number(value.latitude).toFixed(4)}, ${Number(\n          value.longitude\n        ).toFixed(4)}`;\n      } else {\n        return \"_\";\n      }\n    }\n\n    return value;\n  }\n  isMobile(): boolean {\n    // Basic check for mobile devices\n    return /Mobi|Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n      navigator.userAgent\n    );\n  }\n  geofenceEvents: GeofenceEvent[] = [];\n\n  // Pagination and sorting\n  pageSize: number = 10;\n  currentPage: number = 1;\n  sortColumn: string = \"\";\n  sortDirection: \"asc\" | \"desc\" = \"asc\";\n\n  constructor(private geofenceService: GeofenceService) {}\n\n  ngOnInit() {\n    console.log(\"ActivityLogPage: ngOnInit called\");\n    this.loadEvents();\n    // Removed auto-refresh. Use manual refresh button instead.\n  }\n  // Manual refresh method for button\n  refreshEvents() {\n    this.loadEvents();\n  }\n\n  async loadEvents() {\n    console.log(\"ActivityLogPage: Loading events...\");\n    const localEvents = this.geofenceService.getGeofenceEvents();\n    const externalEvents = await this.fetchExternalEvents();\n    // Merge local and external events\n    const allEvents = [...localEvents, ...externalEvents];\n    // Remove duplicates by normalized timestamp (rounded to nearest minute), coordinates, IP address, and device type\n    const seen = new Set();\n    this.geofenceEvents = allEvents.filter((event) => {\n      // Round timestamp to nearest minute to catch duplicates that are seconds apart\n      const timestamp = event.timestamp || 0;\n      const roundedTimestamp = Math.floor(timestamp / 60000) * 60000; // Round to nearest minute\n      const ts = String(roundedTimestamp);\n\n      // Normalize coordinates to 4 decimals (enough for ~10m precision)\n      const lat =\n        event.location?.latitude !== undefined &&\n        event.location?.latitude !== null\n          ? Number(event.location.latitude).toFixed(4)\n          : \"_\";\n      const lng =\n        event.location?.longitude !== undefined &&\n        event.location?.longitude !== null\n          ? Number(event.location.longitude).toFixed(4)\n          : \"_\";\n\n      // Include IP address and device type in deduplication key\n      const ip = this.getDisplayField(event, \"ipAddress\");\n      const device = this.getDisplayField(event, \"device\");\n      const userId = this.getDisplayField(event, \"userId\");\n\n      // Create a comprehensive deduplication key\n      const key = `${ts}-${lat}-${lng}-${ip}-${device}-${userId}`;\n\n      if (seen.has(key)) return false;\n      seen.add(key);\n      return true;\n    });\n    console.log(\"ActivityLogPage: Loaded events:\", this.geofenceEvents.length);\n  }\n\n  formatTimestamp(timestamp: number): string {\n    const date = new Date(timestamp);\n    return date.toLocaleString();\n  }\n\n  formatDuration(duration: number): string {\n    if (!duration) return \"\";\n\n    const hours = Math.floor(duration / (1000 * 60 * 60));\n    const minutes = Math.floor((duration % (1000 * 60 * 60)) / (1000 * 60));\n    const seconds = Math.floor((duration % (1000 * 60)) / 1000);\n\n    if (hours > 0) {\n      return `${hours}h ${minutes}m ${seconds}s`;\n    } else if (minutes > 0) {\n      return `${minutes}m ${seconds}s`;\n    } else {\n      return `${seconds}s`;\n    }\n  }\n\n  getEventColor(type: string): string {\n    return type === \"enter\" ? \"success\" : \"warning\";\n  }\n\n  getEventIcon(type: string): string {\n    return type === \"enter\" ? \"enter\" : \"exit\";\n  }\n\n  getEntriesCount(): number {\n    return this.geofenceEvents.filter((event) => event.type === \"enter\").length;\n  }\n\n  getExitsCount(): number {\n    return this.geofenceEvents.filter((event) => event.type === \"exit\").length;\n  }\n\n  addSampleEntry() {\n    this.geofenceService.addMockEvent(\"enter\");\n    this.loadEvents();\n  }\n\n  addSampleExit() {\n    this.geofenceService.addMockEvent(\"exit\");\n    this.loadEvents();\n  }\n\n  clearEvents() {\n    this.geofenceService.clearEvents();\n    this.loadEvents();\n  }\n\n  // Add search and filter functionality\n  get filteredEvents(): GeofenceEvent[] {\n    let events = [...this.geofenceEvents];\n\n    // Apply search filter\n    if (this.searchQuery.trim()) {\n      const query = this.searchQuery.toLowerCase();\n      events = events.filter(\n        (event) =>\n          this.getDisplayField(event, \"userId\").toLowerCase().includes(query) ||\n          this.getDisplayField(event, \"ipAddress\")\n            .toLowerCase()\n            .includes(query) ||\n          this.getDisplayField(event, \"device\").toLowerCase().includes(query) ||\n          this.getDisplayField(event, \"type\").toLowerCase().includes(query)\n      );\n    }\n\n    // Apply type filter\n    if (this.filterType !== \"all\") {\n      events = events.filter((event) => event.type === this.filterType);\n    }\n\n    return events;\n  }\n\n  get paginatedEvents(): GeofenceEvent[] {\n    let events = [...this.filteredEvents];\n\n    // Apply sorting\n    if (this.sortColumn) {\n      events.sort((a, b) => {\n        let valA = this.getDisplayField(a, this.sortColumn);\n        let valB = this.getDisplayField(b, this.sortColumn);\n\n        // Handle numeric sorting for specific fields\n        if (this.sortColumn === \"timestamp\" || this.sortColumn === \"accuracy\") {\n          valA = a[this.sortColumn] || 0;\n          valB = b[this.sortColumn] || 0;\n        }\n\n        if (valA == null) return 1;\n        if (valB == null) return -1;\n        if (valA < valB) return this.sortDirection === \"asc\" ? -1 : 1;\n        if (valA > valB) return this.sortDirection === \"asc\" ? 1 : -1;\n        return 0;\n      });\n    }\n\n    const start = (this.currentPage - 1) * this.pageSize;\n    return events.slice(start, start + this.pageSize);\n  }\n\n  get totalPages(): number {\n    return Math.ceil(this.filteredEvents.length / this.pageSize);\n  }\n\n  get pageNumbers(): number[] {\n    const total = this.totalPages;\n    const current = this.currentPage;\n    const delta = 2; // Show 2 pages before/after current\n\n    let start = Math.max(1, current - delta);\n    let end = Math.min(total, current + delta);\n\n    // Adjust if we're near the beginning or end\n    if (current <= delta) {\n      end = Math.min(total, 2 * delta + 1);\n    }\n    if (current + delta >= total) {\n      start = Math.max(1, total - 2 * delta);\n    }\n\n    const pages = [];\n    for (let i = start; i <= end; i++) {\n      pages.push(i);\n    }\n    return pages;\n  }\n\n  onSearchChange(event: any) {\n    this.searchQuery = event.target.value;\n    this.currentPage = 1; // Reset to first page when searching\n  }\n\n  onFilterChange(event: any) {\n    this.filterType = event.target.value;\n    this.currentPage = 1; // Reset to first page when filtering\n  }\n\n  // Enhanced jump to page with validation\n  jumpToPage(page: number) {\n    const maxPage = this.totalPages;\n    if (page < 1) {\n      this.currentPage = 1;\n    } else if (page > maxPage) {\n      this.currentPage = maxPage;\n    } else {\n      this.currentPage = page;\n    }\n  }\n\n  onPageInputChange(event: any) {\n    const page = parseInt(event.target.value);\n    if (!isNaN(page)) {\n      this.jumpToPage(page);\n    }\n  }\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\" *ngIf=\"!isMobile()\">\n            <ion-menu-button></ion-menu-button>\n        </ion-buttons>\n        <ion-title>Activity Log</ion-title>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content>\n    <ion-card>\n        <ion-card-header>\n            <ion-card-title>Activity Log</ion-card-title>\n            <ion-card-subtitle>\n                Showing {{ paginatedEvents.length }} of {{ filteredEvents.length }} events\n                ({{ geofenceEvents.length }} total)\n            </ion-card-subtitle>\n        </ion-card-header>\n\n        <ion-card-content>\n            <!-- Controls Section -->\n            <div class=\"controls-section\">\n                <div class=\"search-filter-row\">\n                    <!-- Search Box -->\n                    <ion-searchbar [(ngModel)]=\"searchQuery\" (ionInput)=\"onSearchChange($event)\"\n                        placeholder=\"Search by User ID, IP, Device, Type...\" debounce=\"300\">\n                    </ion-searchbar>\n\n                    <!-- Filter Dropdown -->\n                    <ion-select [(ngModel)]=\"filterType\" (ionChange)=\"onFilterChange($event)\"\n                        placeholder=\"Filter by Type\" interface=\"popover\">\n                        <ion-select-option value=\"all\">All Types</ion-select-option>\n                        <ion-select-option value=\"enter\">Enter</ion-select-option>\n                        <ion-select-option value=\"exit\">Exit</ion-select-option>\n                    </ion-select>\n\n                    <!-- Refresh Button -->\n                    <ion-button (click)=\"refreshEvents()\" fill=\"outline\" color=\"primary\">\n                        <ion-icon name=\"refresh\" slot=\"start\"></ion-icon>\n                        Refresh\n                    </ion-button>\n                </div>\n\n                <!-- Page Size Selector -->\n                <div class=\"page-size-row\">\n                    <ion-label>Items per page:</ion-label>\n                    <ion-select [(ngModel)]=\"pageSize\" (ionChange)=\"currentPage = 1\" interface=\"popover\">\n                        <ion-select-option value=\"5\">5</ion-select-option>\n                        <ion-select-option value=\"10\">10</ion-select-option>\n                        <ion-select-option value=\"25\">25</ion-select-option>\n                        <ion-select-option value=\"50\">50</ion-select-option>\n                    </ion-select>\n                </div>\n            </div>\n\n            <!-- Table Section -->\n            <div class=\"table-container\" *ngIf=\"filteredEvents.length > 0; else noEvents\">\n                <table class=\"activity-table\">\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th (click)=\"setSort('type')\" class=\"sortable\">\n                                Type\n                                <ion-icon *ngIf=\"sortColumn === 'type'\"\n                                    [name]=\"sortDirection === 'asc' ? 'chevron-up' : 'chevron-down'\">\n                                </ion-icon>\n                            </th>\n                            <th (click)=\"setSort('timestamp')\" class=\"sortable\">\n                                Timestamp\n                                <ion-icon *ngIf=\"sortColumn === 'timestamp'\"\n                                    [name]=\"sortDirection === 'asc' ? 'chevron-up' : 'chevron-down'\">\n                                </ion-icon>\n                            </th>\n                            <th (click)=\"setSort('location')\" class=\"sortable\">\n                                Location\n                                <ion-icon *ngIf=\"sortColumn === 'location'\"\n                                    [name]=\"sortDirection === 'asc' ? 'chevron-up' : 'chevron-down'\">\n                                </ion-icon>\n                            </th>\n                            <th (click)=\"setSort('userId')\" class=\"sortable\">\n                                User ID/Name\n                                <ion-icon *ngIf=\"sortColumn === 'userId'\"\n                                    [name]=\"sortDirection === 'asc' ? 'chevron-up' : 'chevron-down'\">\n                                </ion-icon>\n                            </th>\n                            <th (click)=\"setSort('device')\" class=\"sortable\">\n                                Device\n                                <ion-icon *ngIf=\"sortColumn === 'device'\"\n                                    [name]=\"sortDirection === 'asc' ? 'chevron-up' : 'chevron-down'\">\n                                </ion-icon>\n                            </th>\n                            <th (click)=\"setSort('ipAddress')\" class=\"sortable\">\n                                IP Address\n                                <ion-icon *ngIf=\"sortColumn === 'ipAddress'\"\n                                    [name]=\"sortDirection === 'asc' ? 'chevron-up' : 'chevron-down'\">\n                                </ion-icon>\n                            </th>\n                            <th (click)=\"setSort('accuracy')\" class=\"sortable\">\n                                Accuracy\n                                <ion-icon *ngIf=\"sortColumn === 'accuracy'\"\n                                    [name]=\"sortDirection === 'asc' ? 'chevron-up' : 'chevron-down'\">\n                                </ion-icon>\n                            </th>\n                            <th>Duration</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let event of paginatedEvents; let i = index\" class=\"event-row\">\n                            <td class=\"row-number\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\n                            <td>\n                                <ion-chip [color]=\"getEventColor(event.type)\" class=\"type-chip\">\n                                    <ion-icon [name]=\"getEventIcon(event.type)\"></ion-icon>\n                                    <ion-label>{{ getDisplayField(event, 'type') | uppercase }}</ion-label>\n                                </ion-chip>\n                            </td>\n                            <td class=\"timestamp-cell\">{{ getDisplayField(event, 'timestamp') }}</td>\n                            <td class=\"location-cell\">\n                                <ng-container\n                                    *ngIf=\"event.location && event.location.latitude !== null && event.location.longitude !== null; else locationFallback\">\n                                    <code>{{ getNumberField(event.location, 'latitude', 4) }}, {{ getNumberField(event.location, 'longitude', 4) }}</code>\n                                </ng-container>\n                                <ng-template #locationFallback>\n                                    <span class=\"no-data\">_</span>\n                                </ng-template>\n                            </td>\n                            <td><code class=\"user-id\">{{ getDisplayField(event, 'userId') }}</code></td>\n                            <td><span class=\"device-info\">{{ getDisplayField(event, 'device') }}</span></td>\n                            <td><code class=\"ip-address\">{{ getDisplayField(event, 'ipAddress') }}</code></td>\n                            <td><span class=\"accuracy\">{{ getDisplayField(event, 'accuracy') }}</span></td>\n                            <td class=\"duration-cell\">\n                                <span *ngIf=\"event.duration && event.type === 'exit'\" class=\"duration\">\n                                    {{ formatDuration(event.duration) }}\n                                </span>\n                                <span *ngIf=\"!event.duration || event.type !== 'exit'\" class=\"no-data\">_</span>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n            <!-- Enhanced Pagination Controls -->\n            <div class=\"pagination-section\" *ngIf=\"totalPages > 1\">\n                <div class=\"pagination-info\">\n                    <span>\n                        Showing {{ (currentPage - 1) * pageSize + 1 }} -\n                        {{ Math.min(currentPage * pageSize, filteredEvents.length) }} of\n                        {{ filteredEvents.length }} entries\n                    </span>\n                </div>\n\n                <div class=\"pagination-controls\">\n                    <!-- First Page -->\n                    <ion-button (click)=\"jumpToPage(1)\" [disabled]=\"currentPage === 1\" fill=\"outline\" size=\"small\">\n                        <ion-icon name=\"chevron-back-outline\" slot=\"start\"></ion-icon>\n                        First\n                    </ion-button>\n\n                    <!-- Previous Page -->\n                    <ion-button (click)=\"prevPage()\" [disabled]=\"currentPage === 1\" fill=\"outline\" size=\"small\">\n                        <ion-icon name=\"chevron-back\" slot=\"icon-only\"></ion-icon>\n                    </ion-button>\n\n                    <!-- Page Numbers -->\n                    <div class=\"page-numbers\">\n                        <ion-button *ngFor=\"let page of pageNumbers\" (click)=\"jumpToPage(page)\"\n                            [fill]=\"currentPage === page ? 'solid' : 'outline'\"\n                            [color]=\"currentPage === page ? 'primary' : 'medium'\" size=\"small\" class=\"page-number\">\n                            {{ page }}\n                        </ion-button>\n                    </div>\n\n                    <!-- Next Page -->\n                    <ion-button (click)=\"nextPage()\" [disabled]=\"currentPage === totalPages\" fill=\"outline\"\n                        size=\"small\">\n                        <ion-icon name=\"chevron-forward\" slot=\"icon-only\"></ion-icon>\n                    </ion-button>\n\n                    <!-- Last Page -->\n                    <ion-button (click)=\"jumpToPage(totalPages)\" [disabled]=\"currentPage === totalPages\" fill=\"outline\"\n                        size=\"small\">\n                        Last\n                        <ion-icon name=\"chevron-forward-outline\" slot=\"end\"></ion-icon>\n                    </ion-button>\n                </div>\n\n                <!-- Jump to Page -->\n                <div class=\"jump-to-page\">\n                    <ion-label>Go to page:</ion-label>\n                    <ion-input type=\"number\" [value]=\"currentPage\" (ionInput)=\"onPageInputChange($event)\" min=\"1\"\n                        [max]=\"totalPages\" placeholder=\"Page\" class=\"page-input\">\n                    </ion-input>\n                    <span class=\"total-pages\">of {{ totalPages }}</span>\n                </div>\n            </div>\n\n            <!-- No Events Template -->\n            <ng-template #noEvents>\n                <div class=\"no-events\">\n                    <ion-icon name=\"location-outline\" class=\"no-events-icon\"></ion-icon>\n                    <h3>No Events Found</h3>\n                    <p>No geofence events match your current filters.</p>\n                    <ion-button (click)=\"refreshEvents()\" fill=\"outline\" color=\"primary\">\n                        <ion-icon name=\"refresh\" slot=\"start\"></ion-icon>\n                        Refresh Data\n                    </ion-button>\n                </div>\n            </ng-template>\n        </ion-card-content>\n    </ion-card>\n</ion-content>","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { TabsPage } from \"./tabs-page\";\n\nconst routes: Routes = [\n  {\n    path: \"tabs\",\n    component: TabsPage,\n    children: [\n      {\n        path: \"users\",\n        loadChildren: () =>\n          import(\"../users/users.module\").then((m) => m.UsersPageModule),\n      },\n      {\n        path: \"map\",\n        loadChildren: () =>\n          import(\"../map/map.module\").then((m) => m.MapPageModule),\n      },\n      {\n        path: \"activity-log\",\n        loadChildren: () =>\n          import(\"../activity-log/activity-log.module\").then(\n            (m) => m.ActivityLogModule\n          ),\n      },\n      {\n        path: \"\",\n        redirectTo: \"/app/tabs/map\",\n        pathMatch: \"full\",\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TabsPageRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { TabsPage } from \"./tabs-page\";\nimport { TabsPageRoutingModule } from \"./tabs-page-routing.module\";\n\nimport { ActivityLogModule } from \"../activity-log/activity-log.module\";\nimport { UsersPageModule } from \"../users/users.module\";\n\n@NgModule({\n  imports: [\n    ActivityLogModule,\n    UsersPageModule,\n    CommonModule,\n    IonicModule,\n    TabsPageRoutingModule,\n  ],\n  declarations: [TabsPage],\n})\nexport class TabsModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: 'tabs-page.html'\n})\nexport class TabsPage {}\n","<ion-tabs>\n  <ion-tab-bar slot=\"bottom\">\n    <ion-tab-button tab=\"users\">\n      <ion-icon name=\"people\"></ion-icon>\n      <ion-label>Users</ion-label>\n    </ion-tab-button>\n\n    <ion-tab-button tab=\"map\">\n      <ion-icon name=\"location\"></ion-icon>\n      <ion-label>Map</ion-label>\n    </ion-tab-button>\n\n    <ion-tab-button tab=\"activity-log\">\n      <ion-icon name=\"list\"></ion-icon>\n      <ion-label>Activity Log</ion-label>\n    </ion-tab-button>\n  </ion-tab-bar>\n</ion-tabs>","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { UsersPage } from \"./users.page\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: UsersPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UsersPageRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { UsersPageRoutingModule } from \"./users-routing.module\";\nimport { UsersPage } from \"./users.page\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, UsersPageRoutingModule],\n  declarations: [UsersPage],\n})\nexport class UsersPageModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { GeofenceService, UserInfo } from \"../../providers/geofence.service\";\n\n@Component({\n  selector: \"app-users\",\n  templateUrl: \"./users.page.html\",\n  styleUrls: [\"./users.page.scss\"],\n})\nexport class UsersPage implements OnInit {\n  users: UserInfo[] = [];\n\n  constructor(private geofenceService: GeofenceService) {}\n\n  ngOnInit() {\n    this.loadUsers();\n    setInterval(() => {\n      this.loadUsers();\n    }, 5000); // Refresh every 5 seconds\n  }\n\n  loadUsers() {\n    const currentUser = this.geofenceService.getCurrentUser();\n    const otherUsers = this.geofenceService.getUsers();\n    this.users = currentUser ? [currentUser, ...otherUsers] : otherUsers;\n  }\n\n  formatTimestamp(timestamp: number): string {\n    return new Date(timestamp).toLocaleString();\n  }\n\n  getStatusColor(status: string) {\n    switch (status) {\n      case \"inside\":\n        return \"success\";\n      case \"outside\":\n        return \"medium\";\n      case \"entering\":\n        return \"primary\";\n      case \"exiting\":\n        return \"warning\";\n      default:\n        return \"medium\";\n    }\n  }\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-menu-button></ion-menu-button>\n        </ion-buttons>\n        <ion-title>Users</ion-title>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content>\n    <ion-card>\n        <ion-card-header>\n            <ion-card-title>User List</ion-card-title>\n            <ion-card-subtitle>Users currently being tracked</ion-card-subtitle>\n        </ion-card-header>\n        <ion-card-content>\n            <ion-list *ngIf=\"users.length > 0; else noUsers\">\n                <ion-item *ngFor=\"let user of users\">\n                    <ion-avatar slot=\"start\">\n                        <ion-icon name=\"person-circle\" class=\"user-avatar\"></ion-icon>\n                    </ion-avatar>\n                    <ion-label>\n                        <h2>{{ user.id }}</h2>\n                        <p>Status: <ion-badge [color]=\"getStatusColor(user.geofenceStatus)\">{{ user.geofenceStatus\n                                }}</ion-badge></p>\n                        <p>Last Seen: {{ formatTimestamp(user.lastSeen) }}</p>\n                    </ion-label>\n                </ion-item>\n            </ion-list>\n            <ng-template #noUsers>\n                <ion-item>\n                    <ion-icon name=\"people-outline\" slot=\"start\"></ion-icon>\n                    <ion-label>No users to display.</ion-label>\n                </ion-item>\n            </ng-template>\n        </ion-card-content>\n    </ion-card>\n</ion-content>","import { Injectable } from \"@angular/core\";\nimport { Device } from \"@capacitor/device\";\nimport { Geolocation } from \"@capacitor/geolocation\";\nimport { Network } from \"@capacitor/network\";\n\nexport interface UserInfo {\n  id: string;\n  deviceInfo: any;\n  networkInfo: any;\n  location: {\n    latitude: number;\n    longitude: number;\n    accuracy: number;\n    timestamp: number;\n  };\n  geofenceStatus: \"inside\" | \"outside\" | \"entering\" | \"exiting\";\n  lastSeen: number;\n}\n\nexport interface GeofenceEvent {\n  userId: string;\n  userDeviceInfo: any;\n  type: \"enter\" | \"exit\";\n  timestamp: number;\n  location: {\n    latitude: number;\n    longitude: number;\n  };\n  duration?: number; // in milliseconds, for exit events\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class GeofenceService {\n  // Send all polygons to backend API\n  async sendPolygonsToBackend(\n    polygons: Array<{\n      name: string;\n      lat: number;\n      lng: number;\n      radius: number;\n      activeFrom: string;\n      activeTo: string;\n    }>\n  ): Promise<any[]> {\n    // Determine API base URL based on environment\n    const isLocal =\n      window.location.protocol === \"file:\" ||\n      window.location.hostname === \"localhost\" ||\n      window.location.hostname === \"127.0.0.1\";\n    const API_BASE = isLocal\n      ? \"http://localhost:3000\"\n      : \"https://loc-end.onrender.com\";\n\n    const results = [];\n    for (const geofenceData of polygons) {\n      try {\n        console.log(\"Sending geofence to:\", `${API_BASE}/api/geofence`);\n        console.log(\"Geofence data:\", geofenceData);\n\n        const response = await fetch(`${API_BASE}/api/geofence`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n          },\n          body: JSON.stringify(geofenceData),\n        });\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const result = await response.json();\n        console.log(\"Backend response:\", result);\n        results.push(result);\n      } catch (error) {\n        console.error(\"Error sending polygon to backend:\", error);\n        results.push({ error: error.message });\n      }\n    }\n    return results;\n  }\n  private geofenceCenter = { lat: 10.6918, lng: -61.2225 }; // Trinidad coordinates\n  private geofenceRadius = 1000; // 1km radius\n  private users: UserInfo[] = [];\n  private currentUser: UserInfo | null = null;\n  private geofenceEvents: GeofenceEvent[] = [];\n  private watchId: string | undefined;\n  private entryTime: number | null = null;\n\n  constructor() {\n    this.initializeCurrentUser();\n  }\n\n  async initializeCurrentUser() {\n    try {\n      const deviceInfo = await Device.getInfo();\n      const networkInfo = await Network.getStatus();\n      const position = await Geolocation.getCurrentPosition();\n\n      this.currentUser = {\n        id: this.generateUserId(),\n        deviceInfo,\n        networkInfo,\n        location: {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n          accuracy: position.coords.accuracy || 0,\n          timestamp: Date.now(),\n        },\n        geofenceStatus: this.isInsideGeofence(\n          position.coords.latitude,\n          position.coords.longitude\n        )\n          ? \"inside\"\n          : \"outside\",\n        lastSeen: Date.now(),\n      };\n\n      // Start watching position\n      this.startWatchingPosition();\n    } catch (error) {\n      console.error(\"Error initializing user:\", error);\n    }\n  }\n\n  private generateUserId(): string {\n    return \"user_\" + Math.random().toString(36).substr(2, 9) + \"_\" + Date.now();\n  }\n\n  private isInsideGeofence(lat: number, lng: number): boolean {\n    const distance = this.calculateDistance(\n      lat,\n      lng,\n      this.geofenceCenter.lat,\n      this.geofenceCenter.lng\n    );\n    return distance <= this.geofenceRadius;\n  }\n\n  private calculateDistance(\n    lat1: number,\n    lng1: number,\n    lat2: number,\n    lng2: number\n  ): number {\n    const R = 6371e3; // Earth radius in meters\n    const φ1 = (lat1 * Math.PI) / 180;\n    const φ2 = (lat2 * Math.PI) / 180;\n    const Δφ = ((lat2 - lat1) * Math.PI) / 180;\n    const Δλ = ((lng2 - lng1) * Math.PI) / 180;\n\n    const a =\n      Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\n      Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n    return R * c;\n  }\n\n  async startWatchingPosition() {\n    try {\n      this.watchId = await Geolocation.watchPosition({}, (position, err) => {\n        if (position && this.currentUser) {\n          const wasInside = this.currentUser.geofenceStatus === \"inside\";\n          const isNowInside = this.isInsideGeofence(\n            position.coords.latitude,\n            position.coords.longitude\n          );\n\n          // Update current user location\n          this.currentUser.location = {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude,\n            accuracy: position.coords.accuracy || 0,\n            timestamp: Date.now(),\n          };\n          this.currentUser.lastSeen = Date.now();\n\n          // Check for geofence transitions\n          if (!wasInside && isNowInside) {\n            // Entering geofence\n            this.currentUser.geofenceStatus = \"entering\";\n            this.entryTime = Date.now();\n            this.recordGeofenceEvent(\"enter\");\n            setTimeout(() => {\n              if (this.currentUser) this.currentUser.geofenceStatus = \"inside\";\n            }, 1000);\n          } else if (wasInside && !isNowInside) {\n            // Exiting geofence\n            this.currentUser.geofenceStatus = \"exiting\";\n            const duration = this.entryTime ? Date.now() - this.entryTime : 0;\n            this.recordGeofenceEvent(\"exit\", duration);\n            this.entryTime = null;\n            setTimeout(() => {\n              if (this.currentUser) this.currentUser.geofenceStatus = \"outside\";\n            }, 1000);\n          } else if (isNowInside) {\n            this.currentUser.geofenceStatus = \"inside\";\n          } else {\n            this.currentUser.geofenceStatus = \"outside\";\n          }\n        }\n\n        if (err) {\n          console.error(\"Position watch error:\", err);\n        }\n      });\n    } catch (error) {\n      console.error(\"Error starting position watch:\", error);\n    }\n  }\n\n  private recordGeofenceEvent(type: \"enter\" | \"exit\", duration?: number) {\n    if (!this.currentUser) return;\n\n    const event: GeofenceEvent = {\n      userId: this.currentUser.id,\n      userDeviceInfo: this.currentUser.deviceInfo,\n      type,\n      timestamp: Date.now(),\n      location: {\n        latitude: this.currentUser.location.latitude,\n        longitude: this.currentUser.location.longitude,\n      },\n      duration,\n    };\n\n    this.geofenceEvents.unshift(event); // Add to beginning\n\n    // Keep only last 50 events\n    if (this.geofenceEvents.length > 50) {\n      this.geofenceEvents = this.geofenceEvents.slice(0, 50);\n    }\n  }\n\n  getCurrentUser(): UserInfo | null {\n    return this.currentUser;\n  }\n\n  getUsers(): UserInfo[] {\n    // In a real app, this would come from a server\n    // For demo, we'll simulate other users\n    return this.users;\n  }\n\n  getUsersInGeofence(): UserInfo[] {\n    return this.users.filter((user) => user.geofenceStatus === \"inside\");\n  }\n\n  getGeofenceEvents(): GeofenceEvent[] {\n    return this.geofenceEvents;\n  }\n\n  getGeofenceCenter() {\n    return this.geofenceCenter;\n  }\n\n  getGeofenceRadius() {\n    return this.geofenceRadius;\n  }\n\n  async stopWatching() {\n    if (this.watchId) {\n      await Geolocation.clearWatch({ id: this.watchId });\n    }\n  }\n\n  // Simulate adding other users (in real app, this would be real-time data)\n  simulateOtherUsers() {\n    const mockUsers: UserInfo[] = [\n      {\n        id: \"user_mock_1\",\n        deviceInfo: {\n          model: \"iPhone 12\",\n          platform: \"ios\",\n          operatingSystem: \"ios\",\n          osVersion: \"15.0\",\n          manufacturer: \"Apple\",\n        },\n        networkInfo: {\n          connected: true,\n          connectionType: \"wifi\",\n        },\n        location: {\n          latitude: 10.692,\n          longitude: -61.222,\n          accuracy: 5,\n          timestamp: Date.now() - 30000,\n        },\n        geofenceStatus: \"inside\",\n        lastSeen: Date.now() - 30000,\n      },\n      {\n        id: \"user_mock_2\",\n        deviceInfo: {\n          model: \"Samsung Galaxy S21\",\n          platform: \"android\",\n          operatingSystem: \"android\",\n          osVersion: \"11\",\n          manufacturer: \"Samsung\",\n        },\n        networkInfo: {\n          connected: true,\n          connectionType: \"4g\",\n        },\n        location: {\n          latitude: 10.6915,\n          longitude: -61.223,\n          accuracy: 8,\n          timestamp: Date.now() - 60000,\n        },\n        geofenceStatus: \"inside\",\n        lastSeen: Date.now() - 60000,\n      },\n    ];\n\n    this.users = mockUsers;\n  }\n\n  // Methods for activity log testing\n  addMockEvent(type: \"enter\" | \"exit\") {\n    const mockEvent: GeofenceEvent = {\n      userId: this.currentUser?.id || \"mock_user_\" + Date.now(),\n      userDeviceInfo: this.currentUser?.deviceInfo || {\n        model: \"Mock Device\",\n        platform: \"web\",\n        operatingSystem: \"unknown\",\n        osVersion: \"1.0\",\n        manufacturer: \"Mock\",\n      },\n      type,\n      timestamp: Date.now(),\n      location: {\n        latitude: 10.6918 + (Math.random() - 0.5) * 0.001,\n        longitude: -61.2225 + (Math.random() - 0.5) * 0.001,\n      },\n      duration:\n        type === \"exit\"\n          ? Math.floor(Math.random() * 300000) + 60000\n          : undefined, // 1-5 minutes\n    };\n\n    this.geofenceEvents.unshift(mockEvent);\n\n    // Keep only last 50 events\n    if (this.geofenceEvents.length > 50) {\n      this.geofenceEvents = this.geofenceEvents.slice(0, 50);\n    }\n  }\n\n  clearEvents() {\n    this.geofenceEvents = [];\n  }\n\n  // Add some initial sample data for demonstration\n  addInitialSampleData() {\n    // if (this.geofenceEvents.length === 0) {\n    //   // Add some sample events from the past\n    //   const sampleEvents: GeofenceEvent[] = [\n    //     {\n    //       userId: \"sample_user_1\",\n    //       userDeviceInfo: {\n    //         model: \"iPhone 12\",\n    //         platform: \"ios\",\n    //         operatingSystem: \"ios\",\n    //         osVersion: \"15.0\",\n    //         manufacturer: \"Apple\",\n    //       },\n    //       type: \"enter\",\n    //       timestamp: Date.now() - 3600000, // 1 hour ago\n    //       location: { latitude: 10.6918, longitude: -61.2225 },\n    //     },\n    //     {\n    //       userId: \"sample_user_1\",\n    //       userDeviceInfo: {\n    //         model: \"iPhone 12\",\n    //         platform: \"ios\",\n    //         operatingSystem: \"ios\",\n    //         osVersion: \"15.0\",\n    //         manufacturer: \"Apple\",\n    //       },\n    //       type: \"exit\",\n    //       timestamp: Date.now() - 1800000, // 30 minutes ago\n    //       location: { latitude: 10.692, longitude: -61.2227 },\n    //       duration: 1800000, // 30 minutes\n    //     },\n    //     {\n    //       userId: \"sample_user_2\",\n    //       userDeviceInfo: {\n    //         model: \"Samsung Galaxy S21\",\n    //         platform: \"android\",\n    //         operatingSystem: \"android\",\n    //         osVersion: \"11\",\n    //         manufacturer: \"Samsung\",\n    //       },\n    //       type: \"enter\",\n    //       timestamp: Date.now() - 900000, // 15 minutes ago\n    //       location: { latitude: 10.6916, longitude: -61.2223 },\n    //     },\n    //   ];\n    //   this.geofenceEvents = sampleEvents;\n    // }\n  }\n}\n","import { registerPlugin } from '@capacitor/core';\nconst Device = registerPlugin('Device', {\n    web: () => import('./web').then(m => new m.DeviceWeb()),\n});\nexport * from './definitions';\nexport { Device };\n","import { registerPlugin } from '@capacitor/core';\nconst Network = registerPlugin('Network', {\n    web: () => import('./web').then(m => new m.NetworkWeb()),\n});\nexport * from './definitions';\nexport { Network };\n"],"names":["RouterModule","ActivityLogPage","routes","path","component","ActivityLogPageRoutingModule","forChild","imports","i1","exports","CommonModule","FormsModule","IonicModule","ActivityLogModule","declarations","GeofenceService","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵproperty","ctx_r2","sortDirection","ɵɵelementContainerStart","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate2","getNumberField","event_r4","location","ɵɵtextInterpolate1","formatDuration","duration","ɵɵtemplate","ActivityLogPage_div_38_tr_30_ng_container_12_Template","ActivityLogPage_div_38_tr_30_ng_template_13_Template","ɵɵtemplateRefExtractor","ActivityLogPage_div_38_tr_30_span_28_Template","ActivityLogPage_div_38_tr_30_span_29_Template","ɵɵtextInterpolate","currentPage","pageSize","i_r5","getEventColor","type","getEventIcon","ɵɵpipeBind1","getDisplayField","latitude","longitude","locationFallback_r6","ɵɵlistener","ActivityLogPage_div_38_Template_th_click_6_listener","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","setSort","ActivityLogPage_div_38_ion_icon_8_Template","ActivityLogPage_div_38_Template_th_click_9_listener","ActivityLogPage_div_38_ion_icon_11_Template","ActivityLogPage_div_38_Template_th_click_12_listener","ActivityLogPage_div_38_ion_icon_14_Template","ActivityLogPage_div_38_Template_th_click_15_listener","ActivityLogPage_div_38_ion_icon_17_Template","ActivityLogPage_div_38_Template_th_click_18_listener","ActivityLogPage_div_38_ion_icon_20_Template","ActivityLogPage_div_38_Template_th_click_21_listener","ActivityLogPage_div_38_ion_icon_23_Template","ActivityLogPage_div_38_Template_th_click_24_listener","ActivityLogPage_div_38_ion_icon_26_Template","ActivityLogPage_div_38_tr_30_Template","sortColumn","paginatedEvents","ActivityLogPage_div_39_ion_button_11_Template_ion_button_click_0_listener","page_r9","_r8","$implicit","jumpToPage","ActivityLogPage_div_39_Template_ion_button_click_5_listener","_r7","ActivityLogPage_div_39_Template_ion_button_click_8_listener","prevPage","ActivityLogPage_div_39_ion_button_11_Template","ActivityLogPage_div_39_Template_ion_button_click_12_listener","nextPage","ActivityLogPage_div_39_Template_ion_button_click_14_listener","totalPages","ActivityLogPage_div_39_Template_ion_input_ionInput_20_listener","$event","onPageInputChange","ɵɵtextInterpolate3","Math","min","filteredEvents","length","pageNumbers","ActivityLogPage_ng_template_40_Template_ion_button_click_6_listener","_r10","refreshEvents","event","field","digits","value","toFixed","fetchExternalEvents","_asyncToGenerator","isLocal","window","protocol","hostname","API_BASE","console","log","response","fetch","ok","Error","status","data","json","Array","isArray","map","_ref","_ref2","_event$timestamp","_ref3","_ref4","_event$locationName","_event$userId","_ref5","_event$phoneNumber","_event$email","_event$type","_event$entryTimestamp","_event$exitTimestamp","_event$userDeviceInfo","_event$accuracy","lat","undefined","lng","ipAddress","network","ip","deviceType","device","platform","timestamp","receivedAt","serverReceivedAt","locationName","name","userId","phoneNumber","phone","email","entryTimestamp","exitTimestamp","userDeviceInfo","accuracy","error","toString","formatTimestamp","Number","isMobile","test","navigator","userAgent","constructor","geofenceService","searchQuery","filterType","geofenceEvents","ngOnInit","loadEvents","_this","localEvents","getGeofenceEvents","externalEvents","allEvents","seen","Set","filter","_event$location","_event$location2","_event$location3","_event$location4","roundedTimestamp","floor","ts","String","key","has","add","date","Date","toLocaleString","hours","minutes","seconds","getEntriesCount","getExitsCount","addSampleEntry","addMockEvent","addSampleExit","clearEvents","events","trim","query","toLowerCase","includes","sort","a","b","valA","valB","start","slice","ceil","total","current","delta","max","end","pages","i","push","onSearchChange","target","onFilterChange","page","maxPage","parseInt","isNaN","ɵɵdirectiveInject","selectors","decls","vars","consts","template","ActivityLogPage_Template","rf","ctx","ActivityLogPage_ion_buttons_2_Template","ɵɵtwoWayListener","ActivityLogPage_Template_ion_searchbar_ngModelChange_15_listener","_r1","ɵɵtwoWayBindingSet","ActivityLogPage_Template_ion_searchbar_ionInput_15_listener","ActivityLogPage_Template_ion_select_ngModelChange_16_listener","ActivityLogPage_Template_ion_select_ionChange_16_listener","ActivityLogPage_Template_ion_button_click_23_listener","ActivityLogPage_Template_ion_select_ngModelChange_29_listener","ActivityLogPage_Template_ion_select_ionChange_29_listener","ActivityLogPage_div_38_Template","ActivityLogPage_div_39_Template","ActivityLogPage_ng_template_40_Template","ɵɵtwoWayProperty","noEvents_r11","TabsPage","children","loadChildren","then","m","UsersPageModule","MapPageModule","redirectTo","pathMatch","TabsPageRoutingModule","TabsModule","TabsPage_Template","UsersPage","UsersPageRoutingModule","user_r1","id","ctx_r1","getStatusColor","geofenceStatus","lastSeen","UsersPage_ion_list_14_ion_item_1_Template","users","loadUsers","setInterval","currentUser","getCurrentUser","otherUsers","getUsers","UsersPage_Template","UsersPage_ion_list_14_Template","UsersPage_ng_template_15_Template","noUsers_r3","Device","Geolocation","Network","sendPolygonsToBackend","polygons","results","geofenceData","method","headers","Accept","body","JSON","stringify","result","message","geofenceCenter","geofenceRadius","entryTime","initializeCurrentUser","deviceInfo","getInfo","networkInfo","getStatus","position","getCurrentPosition","generateUserId","coords","now","isInsideGeofence","startWatchingPosition","random","substr","distance","calculateDistance","lat1","lng1","lat2","lng2","R","φ1","PI","φ2","Δφ","Δλ","sin","cos","c","atan2","sqrt","_this2","watchId","watchPosition","err","wasInside","isNowInside","recordGeofenceEvent","setTimeout","unshift","getUsersInGeofence","user","getGeofenceCenter","getGeofenceRadius","stopWatching","_this3","clearWatch","simulateOtherUsers","mockUsers","model","operatingSystem","osVersion","manufacturer","connected","connectionType","_this$currentUser","_this$currentUser2","mockEvent","addInitialSampleData","factory","ɵfac","providedIn","registerPlugin","web","DeviceWeb","NetworkWeb"],"sourceRoot":"webpack:///","x_google_ignoreList":[13,14]}