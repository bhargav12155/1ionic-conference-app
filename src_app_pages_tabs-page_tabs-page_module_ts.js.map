{"version":3,"file":"src_app_pages_tabs-page_tabs-page_module_ts.js","mappings":"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","sources":["./src/app/pages/activity-log/activity-log-routing.module.ts","./src/app/pages/activity-log/activity-log.module.ts","./src/app/pages/activity-log/activity-log.page.ts","./src/app/pages/activity-log/activity-log.page.html","./src/app/pages/map/map-routing.module.ts","./src/app/pages/map/map.module.ts","./src/app/pages/map/map.ts","./src/app/pages/map/map.html","./src/app/pages/schedule-filter/schedule-filter.ts","./src/app/pages/schedule-filter/schedule-filter.html","./src/app/pages/schedule/schedule-routing.module.ts","./src/app/pages/schedule/schedule.module.ts","./src/app/pages/schedule/schedule.ts","./src/app/pages/schedule/schedule.html","./src/app/pages/session-detail/session-detail-routing.module.ts","./src/app/pages/session-detail/session-detail.module.ts","./src/app/pages/session-detail/session-detail.ts","./src/app/pages/session-detail/session-detail.html","./src/app/pages/speaker-detail/speaker-detail-routing.module.ts","./src/app/pages/speaker-detail/speaker-detail.module.ts","./src/app/pages/speaker-detail/speaker-detail.ts","./src/app/pages/speaker-detail/speaker-detail.html","./src/app/pages/speaker-list/speaker-list-routing.module.ts","./src/app/pages/speaker-list/speaker-list.module.ts","./src/app/pages/speaker-list/speaker-list.ts","./src/app/pages/speaker-list/speaker-list.html","./src/app/pages/tabs-page/tabs-page-routing.module.ts","./src/app/pages/tabs-page/tabs-page.module.ts","./src/app/pages/tabs-page/tabs-page.ts","./src/app/pages/tabs-page/tabs-page.html","./src/app/providers/conference-data.ts","./src/app/providers/geofence.service.ts","./node_modules/@capacitor/device/dist/esm/definitions.js","./node_modules/@capacitor/device/dist/esm/index.js","./node_modules/@capacitor/network/dist/esm/definitions.js","./node_modules/@capacitor/network/dist/esm/index.js","./node_modules/rxjs/dist/esm/internal/lastValueFrom.js","./src/app/pages/map/map-dark-style.js"],"sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { ActivityLogPage } from \"./activity-log.page\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ActivityLogPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ActivityLogPageRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { IonicModule } from \"@ionic/angular\";\nimport { ActivityLogPage } from \"./activity-log.page\";\nimport { ActivityLogPageRoutingModule } from \"./activity-log-routing.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ActivityLogPageRoutingModule,\n  ],\n  declarations: [ActivityLogPage],\n})\nexport class ActivityLogModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n  GeofenceService,\n  GeofenceEvent,\n} from \"../../providers/geofence.service\";\n\n@Component({\n  selector: \"app-activity-log\",\n  templateUrl: \"./activity-log.page.html\",\n  styleUrls: [\"./activity-log.page.scss\"],\n})\nexport class ActivityLogPage implements OnInit {\n  geofenceEvents: GeofenceEvent[] = [];\n\n  constructor(private geofenceService: GeofenceService) {}\n\n  ngOnInit() {\n    console.log(\"ActivityLogPage: ngOnInit called\");\n    this.loadEvents();\n\n    // Refresh events every 10 seconds\n    setInterval(() => {\n      this.loadEvents();\n    }, 10000);\n  }\n\n  loadEvents() {\n    console.log(\"ActivityLogPage: Loading events...\");\n    this.geofenceEvents = this.geofenceService.getGeofenceEvents();\n    console.log(\"ActivityLogPage: Loaded events:\", this.geofenceEvents.length);\n  }\n\n  formatTimestamp(timestamp: number): string {\n    const date = new Date(timestamp);\n    return date.toLocaleString();\n  }\n\n  formatDuration(duration: number): string {\n    if (!duration) return \"\";\n\n    const hours = Math.floor(duration / (1000 * 60 * 60));\n    const minutes = Math.floor((duration % (1000 * 60 * 60)) / (1000 * 60));\n    const seconds = Math.floor((duration % (1000 * 60)) / 1000);\n\n    if (hours > 0) {\n      return `${hours}h ${minutes}m ${seconds}s`;\n    } else if (minutes > 0) {\n      return `${minutes}m ${seconds}s`;\n    } else {\n      return `${seconds}s`;\n    }\n  }\n\n  getEventColor(type: string): string {\n    return type === \"enter\" ? \"success\" : \"warning\";\n  }\n\n  getEventIcon(type: string): string {\n    return type === \"enter\" ? \"enter\" : \"exit\";\n  }\n\n  getEntriesCount(): number {\n    return this.geofenceEvents.filter((event) => event.type === \"enter\").length;\n  }\n\n  getExitsCount(): number {\n    return this.geofenceEvents.filter((event) => event.type === \"exit\").length;\n  }\n\n  addSampleEntry() {\n    this.geofenceService.addMockEvent(\"enter\");\n    this.loadEvents();\n  }\n\n  addSampleExit() {\n    this.geofenceService.addMockEvent(\"exit\");\n    this.loadEvents();\n  }\n\n  clearEvents() {\n    this.geofenceService.clearEvents();\n    this.loadEvents();\n  }\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-menu-button></ion-menu-button>\n        </ion-buttons>\n        <ion-title>Activity Log</ion-title>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content>\n    <ion-card>\n        <ion-card-header>\n            <ion-card-title>Geofence Entry/Exit History</ion-card-title>\n            <ion-card-subtitle>Recent activity in Trinidad area</ion-card-subtitle>\n        </ion-card-header>\n        <ion-card-content>\n            <div class=\"ion-padding\">\n                <div class=\"table-container\" *ngIf=\"geofenceEvents.length > 0; else noEvents\">\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Type</th>\n                                <th>Timestamp</th>\n                                <th>Location</th>\n                                <th>User ID</th>\n                                <th>Device</th>\n                                <th>Duration</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let event of geofenceEvents\">\n                                <td>\n                                    <ion-chip [color]=\"getEventColor(event.type)\">\n                                        <ion-icon [name]=\"getEventIcon(event.type)\"></ion-icon>\n                                        <ion-label>{{ event.type.toUpperCase() }}</ion-label>\n                                    </ion-chip>\n                                </td>\n                                <td>{{ formatTimestamp(event.timestamp) }}</td>\n                                <td>{{ event.location.latitude.toFixed(4) }}, {{ event.location.longitude.toFixed(4) }}\n                                </td>\n                                <td>\n                                    <code>{{ event.userId }}</code>\n                                </td>\n                                <td>\n                                    <span *ngIf=\"event.userDeviceInfo\">{{ event.userDeviceInfo.model ||\n                                        event.userDeviceInfo.platform || 'Unknown' }}</span>\n                                </td>\n                                <td>\n                                    <span *ngIf=\"event.duration && event.type === 'exit'\">{{\n                                        formatDuration(event.duration) }}</span>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n            <ng-template #noEvents>\n                <ion-item>\n                    <ion-icon name=\"time\" slot=\"start\"></ion-icon>\n                    <ion-label>\n                        <h3>No activity recorded yet</h3>\n                        <p>Enter and exit the Trinidad geofence area to see activity logs</p>\n                    </ion-label>\n                </ion-item>\n            </ng-template>\n        </ion-card-content>\n    </ion-card>\n\n    <!-- Statistics Card -->\n    <ion-card *ngIf=\"geofenceEvents.length > 0\">\n        <ion-card-header>\n            <ion-card-title>Statistics</ion-card-title>\n        </ion-card-header>\n        <ion-card-content>\n            <ion-grid>\n                <ion-row>\n                    <ion-col size=\"6\">\n                        <ion-item lines=\"none\">\n                            <ion-icon name=\"enter\" color=\"success\" slot=\"start\"></ion-icon>\n                            <ion-label>\n                                <h3>{{ getEntriesCount() }}</h3>\n                                <p>Entries</p>\n                            </ion-label>\n                        </ion-item>\n                    </ion-col>\n                    <ion-col size=\"6\">\n                        <ion-item lines=\"none\">\n                            <ion-icon name=\"exit\" color=\"warning\" slot=\"start\"></ion-icon>\n                            <ion-label>\n                                <h3>{{ getExitsCount() }}</h3>\n                                <p>Exits</p>\n                            </ion-label>\n                        </ion-item>\n                    </ion-col>\n                </ion-row>\n            </ion-grid>\n        </ion-card-content>\n    </ion-card>\n\n    <!-- Action Card for Testing -->\n    <ion-card>\n        <ion-card-header>\n            <ion-card-title>Quick Actions</ion-card-title>\n        </ion-card-header>\n        <ion-card-content>\n            <ion-button expand=\"block\" fill=\"outline\" color=\"success\" (click)=\"addSampleEntry()\">\n                <ion-icon name=\"enter\" slot=\"start\"></ion-icon>\n                Add Sample Entry Event\n            </ion-button>\n            <ion-button expand=\"block\" fill=\"outline\" color=\"warning\" (click)=\"addSampleExit()\">\n                <ion-icon name=\"exit\" slot=\"start\"></ion-icon>\n                Add Sample Exit Event\n            </ion-button>\n            <ion-button expand=\"block\" fill=\"clear\" color=\"danger\" (click)=\"clearEvents()\">\n                <ion-icon name=\"trash\" slot=\"start\"></ion-icon>\n                Clear All Events\n            </ion-button>\n        </ion-card-content>\n    </ion-card>\n</ion-content>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MapPage } from './map';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MapPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MapPageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\n\nimport { MapPage } from './map';\nimport { MapPageRoutingModule } from './map-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    MapPageRoutingModule\n  ],\n  declarations: [\n    MapPage,\n  ]\n})\nexport class MapModule { }\n","import {\n  Component,\n  ElementRef,\n  Inject,\n  ViewChild,\n  AfterViewInit,\n} from \"@angular/core\";\nimport { ConferenceData } from \"../../providers/conference-data\";\nimport { Platform } from \"@ionic/angular\";\nimport { DOCUMENT } from \"@angular/common\";\n\nimport { darkStyle } from \"./map-dark-style\";\n\n@Component({\n  selector: \"page-map\",\n  templateUrl: \"map.html\",\n  styleUrls: [\"./map.scss\"],\n})\nexport class MapPage implements AfterViewInit {\n  @ViewChild(\"mapCanvas\", { static: true }) mapElement: ElementRef;\n\n  constructor(\n    @Inject(DOCUMENT) private doc: Document,\n    public confData: ConferenceData,\n    public platform: Platform\n  ) {}\n\n  async ngAfterViewInit() {\n    const appEl = this.doc.querySelector(\"ion-app\");\n    let isDark = false;\n    let style = [];\n    if (appEl.classList.contains(\"ion-palette-dark\")) {\n      style = darkStyle;\n    }\n    let apiKey = \"AIzaSyABw7DX0sg8fmhPt9H6JdlIGO-GikNgWhI\";\n\n    const googleMaps = await getGoogleMaps(apiKey);\n\n    let map;\n\n    this.confData.getMap().subscribe((mapData: any) => {\n      const mapEle = this.mapElement.nativeElement;\n      console.log(mapData);\n      const centerCoords = { lat: 19.075984, lng: 72.877656 };\n\n      map = new googleMaps.Map(mapEle, {\n        center: centerCoords,\n        zoom: 16,\n        styles: style,\n      });\n\n      mapData.forEach((markerData: any) => {\n        const infoWindow = new googleMaps.InfoWindow({\n          content: `<h5>${markerData.name}</h5>`,\n        });\n\n        const marker = new googleMaps.Marker({\n          position: markerData,\n          map,\n          title: markerData.name,\n        });\n\n        marker.addListener(\"click\", () => {\n          infoWindow.open(map, marker);\n        });\n      });\n\n      googleMaps.event.addListenerOnce(map, \"idle\", () => {\n        mapEle.classList.add(\"show-map\");\n      });\n    });\n\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.attributeName === \"class\") {\n          const el = mutation.target as HTMLElement;\n          isDark = el.classList.contains(\"ion-palette-dark\");\n          if (map && isDark) {\n            map.setOptions({ styles: darkStyle });\n          } else if (map) {\n            map.setOptions({ styles: [] });\n          }\n        }\n      });\n    });\n    observer.observe(appEl, {\n      attributes: true,\n    });\n  }\n}\n\nfunction getGoogleMaps(apiKey: string): Promise<any> {\n  const win = window as any;\n  const googleModule = win.google;\n  if (googleModule && googleModule.maps) {\n    return Promise.resolve(googleModule.maps);\n  }\n\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&v=3.31`;\n    script.async = true;\n    script.defer = true;\n    document.body.appendChild(script);\n    script.onload = () => {\n      const googleModule2 = win.google;\n      if (googleModule2 && googleModule2.maps) {\n        resolve(googleModule2.maps);\n      } else {\n        reject(\"google maps not available\");\n      }\n    };\n  });\n}\n","<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>Map</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <div #mapCanvas class=\"map-canvas\"></div>\n</ion-content>","import { Component } from '@angular/core';\nimport { Config, ModalController, NavParams } from '@ionic/angular';\n\nimport { ConferenceData } from '../../providers/conference-data';\n\n\n@Component({\n  selector: 'page-schedule-filter',\n  templateUrl: 'schedule-filter.html',\n  styleUrls: ['./schedule-filter.scss'],\n})\nexport class ScheduleFilterPage {\n  ios: boolean;\n\n  tracks: {name: string, icon: string, isChecked: boolean}[] = [];\n\n  constructor(\n    public confData: ConferenceData,\n    private config: Config,\n    public modalCtrl: ModalController,\n    public navParams: NavParams\n  ) { }\n\n  ionViewWillEnter() {\n    this.ios = this.config.get('mode') === `ios`;\n\n    // passed in array of track names that should be excluded (unchecked)\n    const excludedTrackNames = this.navParams.get('excludedTracks');\n\n    this.confData.getTracks().subscribe((tracks: any[]) => {\n      tracks.forEach(track => {\n        this.tracks.push({\n          name: track.name,\n          icon: track.icon,\n          isChecked: (excludedTrackNames.indexOf(track.name) === -1)\n        });\n      });\n    });\n  }\n\n  selectAll(check: boolean) {\n    // set all to checked or unchecked\n    this.tracks.forEach(track => {\n      track.isChecked = check;\n    });\n  }\n\n  applyFilters() {\n    // Pass back a new array of track names to exclude\n    const excludedTrackNames = this.tracks.filter(c => !c.isChecked).map(c => c.name);\n    this.dismiss(excludedTrackNames);\n  }\n\n  dismiss(data?: any) {\n    // using the injected ModalController this page\n    // can \"dismiss\" itself and pass back data\n    this.modalCtrl.dismiss(data);\n  }\n}\n","<ion-header translucent=\"true\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-button *ngIf=\"ios\" (click)=\"dismiss()\">Cancel</ion-button>\n      <ion-button *ngIf=\"!ios\" (click)=\"selectAll(false)\">Reset</ion-button>\n    </ion-buttons>\n\n    <ion-title>\n      Filter Sessions\n    </ion-title>\n\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"applyFilters()\" strong>Done</ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-list [lines]=\"ios ? 'inset' : 'full'\">\n    <ion-list-header>Tracks</ion-list-header>\n\n    <ion-item *ngFor=\"let track of tracks\" [attr.track]=\"track.name | lowercase\">\n      <ion-icon *ngIf=\"ios\" slot=\"start\" [name]=\"track.icon\" color=\"medium\"></ion-icon>\n\n      <!-- TODO(FW-3891): remove aria-label once bug is resolved -->\n      <ion-checkbox [(ngModel)]=\"track.isChecked\" [attr.aria-label]=\"track.name\">\n        {{track.name}}\n      </ion-checkbox>\n    </ion-item>\n  </ion-list>\n\n</ion-content>\n\n<ion-footer translucent=\"true\" *ngIf=\"ios\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-button (click)=\"selectAll(false)\">Deselect All</ion-button>\n    </ion-buttons>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"selectAll(true)\">Select All</ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-footer>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SchedulePage } from './schedule';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SchedulePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SchedulePageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { SchedulePage } from './schedule';\nimport { ScheduleFilterPage } from '../schedule-filter/schedule-filter';\nimport { SchedulePageRoutingModule } from './schedule-routing.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SchedulePageRoutingModule\n    ],\n    declarations: [\n        SchedulePage,\n        ScheduleFilterPage\n    ]\n})\nexport class ScheduleModule { }\n","import {\n  Component,\n  ViewChild,\n  OnInit,\n  NgZone,\n  ElementRef,\n  AfterViewInit,\n  Inject,\n} from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport {\n  AlertController,\n  IonList,\n  IonRouterOutlet,\n  LoadingController,\n  ModalController,\n  ToastController,\n  Config,\n} from \"@ionic/angular\";\nimport { lastValueFrom } from \"rxjs\";\nimport { Loader } from \"@googlemaps/js-api-loader\";\n\nimport { Device } from \"@capacitor/device\";\nimport { darkStyle } from \"../../pages/map/map-dark-style\";\nimport { Geolocation } from \"@capacitor/geolocation\";\n\nimport { ScheduleFilterPage } from \"../schedule-filter/schedule-filter\";\nimport { ConferenceData } from \"../../providers/conference-data\";\nimport { UserData } from \"../../providers/user-data\";\nimport { GeofenceService } from \"../../providers/geofence.service\";\nimport { DOCUMENT } from \"@angular/common\";\nimport { DeviceDetectorService } from \"ngx-device-detector\";\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { Platform } from \"@ionic/angular\";\n\n@Component({\n  selector: \"page-schedule\",\n  templateUrl: \"schedule.html\",\n  styleUrls: [\"./schedule.scss\"],\n})\nexport class SchedulePage implements OnInit, AfterViewInit {\n  // Gets a reference to the list element\n  @ViewChild(\"scheduleList\", { static: true }) scheduleList: IonList;\n  @ViewChild(\"mapPlotting\", { static: false }) mapElement: ElementRef;\n\n  ios: boolean;\n  dayIndex = 0;\n  queryText = \"\";\n  segment = \"all\";\n  excludeTracks: any = [];\n  shownSessions: any = [];\n  groups: any = [];\n  confDate: string;\n  showSearchbar: boolean;\n  wait: Promise<string>;\n  deviceInfo: import(\"ngx-device-detector\").DeviceInfo;\n  ipAddress: string;\n  polygons: any = [];\n  deviceInfo1: any;\n  polygonsForMapPlotting: any = [];\n  marker: any;\n  wasInPolygon: boolean;\n  enterSound: HTMLAudioElement;\n  exitSound: HTMLAudioElement;\n\n  constructor(\n    @Inject(DOCUMENT) private doc: Document,\n    public alertCtrl: AlertController,\n    public confData: ConferenceData,\n    public loadingCtrl: LoadingController,\n    public modalCtrl: ModalController,\n    public router: Router,\n    public routerOutlet: IonRouterOutlet,\n    public toastCtrl: ToastController,\n    public user: UserData,\n    public config: Config,\n    public ngZone: NgZone,\n    private deviceService: DeviceDetectorService,\n    private http: HttpClient,\n    private platform: Platform,\n    private geofenceService: GeofenceService\n  ) {\n    this.wasInPolygon = false; // Initialize audio objects with correct path\n    this.enterSound = new Audio(\"/assets/sounds/chime.mp3\");\n    this.exitSound = new Audio(\"/assets/sounds/chime.mp3\");\n  }\n\n  ngOnInit() {\n    this.platform.ready().then(() => {\n      this.updateSchedule();\n      this.deviceInfo = this.deviceService.getDeviceInfo();\n      this.getIpAddress();\n      this.ios = this.config.get(\"mode\") === \"ios\";\n    });\n  }\n  updateSchedule() {\n    // Close any open sliding items when the schedule updates\n    if (this.scheduleList) {\n      this.scheduleList.closeSlidingItems();\n    }\n\n    this.confData\n      .getTimeline(\n        this.dayIndex,\n        this.queryText,\n        this.excludeTracks,\n        this.segment\n      )\n      .subscribe((data: any) => {\n        this.shownSessions = data.shownSessions;\n        this.groups = data.groups;\n      });\n  }\n\n  async presentFilter() {\n    const modal = await this.modalCtrl.create({\n      component: ScheduleFilterPage,\n      presentingElement: this.routerOutlet.nativeEl,\n      componentProps: { excludedTracks: this.excludeTracks },\n    });\n    await modal.present();\n\n    const { data } = await modal.onWillDismiss();\n    if (data) {\n      this.excludeTracks = data;\n      this.updateSchedule();\n    }\n  }\n\n  async addFavorite(slidingItem: HTMLIonItemSlidingElement, sessionData: any) {\n    if (this.user.hasFavorite(sessionData.name)) {\n      // Prompt to remove favorite\n      this.removeFavorite(slidingItem, sessionData, \"Favorite already added\");\n    } else {\n      // Add as a favorite\n      this.user.addFavorite(sessionData.name);\n\n      // Close the open item\n      slidingItem.close();\n\n      // Create a toast\n      // this.currentToast = await this.toastCtrl.create({\n      //   header: `${sessionData.name} was successfully added as a favorite.`,\n      //   duration: 3000,\n      //   buttons: [\n      //     {\n      //       text: \"Close\",\n      //       role: \"cancel\",\n      //     },\n      //   ],\n      // });\n\n      // // Present the toast at the bottom of the page\n      // await toast.present();\n    }\n  }\n\n  async getIpAddress(): Promise<void> {\n    try {\n      // Fetch IP address\n      const data = await lastValueFrom(\n        this.http.get<{ ip: string }>(\"https://api.ipify.org?format=json\")\n      );\n      this.ipAddress = data.ip;\n\n      // Get device info\n      this.deviceInfo1 = await Device.getInfo();\n      console.log(\"Device Info:\", this.deviceInfo1);\n    } catch (error) {\n      console.error(\"Error fetching IP address or device info:\", error);\n    }\n  }\n  isNavExpanded: boolean = false;\n\n  toggleNav() {\n    this.isNavExpanded = !this.isNavExpanded;\n  }\n\n  toggleGroup(group) {\n    group.collapsed = !group.collapsed;\n  }\n\n  isMobile(): boolean {\n    return this.deviceService.isMobile();\n  }\n\n  isTablet(): boolean {\n    return this.deviceService.isTablet();\n  }\n\n  isDesktop(): boolean {\n    return this.deviceService.isDesktop();\n  }\n  async removeFavorite(\n    slidingItem: HTMLIonItemSlidingElement,\n    sessionData: any,\n    title: string\n  ) {\n    const alert = await this.alertCtrl.create({\n      header: title,\n      message: \"Would you like to remove this session from your favorites?\",\n      buttons: [\n        {\n          text: \"Cancel\",\n          handler: () => {\n            // they clicked the cancel button, do not remove the session\n            // close the sliding item and hide the option buttons\n            slidingItem.close();\n          },\n        },\n        {\n          text: \"Remove\",\n          handler: () => {\n            // they want to remove this session from their favorites\n            this.user.removeFavorite(sessionData.name);\n            this.updateSchedule();\n\n            // close the sliding item and hide the option buttons\n            slidingItem.close();\n          },\n        },\n      ],\n    });\n    // now present the alert on top of all other content\n    await alert.present();\n  }\n\n  watchPosition(googleMaps, map) {\n    console.log(\"watchposition function\");\n\n    this.wait = Geolocation.watchPosition(\n      {\n        timeout: 20000, // Increase timeout duration to 20 seconds\n        maximumAge: 0,\n        enableHighAccuracy: true,\n      },\n      async (position, err) => {\n        console.log(\"position :\", position);\n        console.log(\"err in watch postion:\", err);\n        // Show toast for position\n        if (position) {\n          this.showToast(\n            `Position: ${position.coords.latitude}, ${position.coords.longitude}`\n          );\n        }\n\n        // Show toast for error\n        if (err) {\n          this.showToast(`Error: ${err.message}`);\n          if (err.code === 3) {\n            console.error(\"Timeout expired while trying to get the position.\");\n            // Optionally, handle timeout (e.g., use fallback)\n          }\n          return;\n        }\n\n        if (err) {\n          if (err.code === 3) {\n            console.error(\"Timeout expired while trying to get the position.\");\n            // Optionally, handle timeout (e.g., use fallback)\n          }\n          return;\n        }\n\n        this.ngZone.run(async () => {\n          const currentPosition = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          };\n          if (this.polygonsForMapPlotting.length > 0) {\n            try {\n              const isInAnyPolygon = await this.isWithinPolygon(\n                currentPosition\n              );\n\n              await this.handlePolygonCheck(isInAnyPolygon);\n              const address = await this.getAddressFromCoordinates(\n                position.coords.latitude,\n                position.coords.longitude\n              );\n              console.log(`Waits and gets the reverse address =: ${address}`);\n            } catch (error) {\n              console.error(\"Error:\", error);\n            }\n          }\n          // Plot the new point on the map\n          map.setCenter(currentPosition);\n          this.addMarker(googleMaps, currentPosition, map);\n        });\n      }\n    );\n  }\n\n  apiKey = \"AIzaSyABw7DX0sg8fmhPt9H6JdlIGO-GikNgWhI\";\n\n  async getAddressFromCoordinates(lat: number, lng: number): Promise<string> {\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${this.apiKey}`;\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`Network response was not ok: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.results && data.results.length > 0) {\n        return data.results[0].formatted_address;\n      } else {\n        throw new Error(\"No results found\");\n      }\n    } catch (error) {\n      if (\n        error instanceof TypeError &&\n        error.message.includes(\"Failed to fetch\")\n      ) {\n        return \"No internet connection\";\n      }\n      return `Error: ${error.message || error}`;\n    }\n  }\n\n  // async getCurrentLocation() {\n  //   try {\n  //     const position = await getPositionWithRetry();\n  //     console.log(\n  //       `Latitude: ${position.coords.latitude}, Longitude: ${position.coords.longitude}`\n  //     );\n  //     const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${position.coords.latitude},${position.coords.longitude}&key=${this.apiKey}`;\n  //     this.plotMap(position.coords);\n  //     const mockPosition = {\n  //       coords: {\n  //         latitude: position.coords ? position.coords.latitude : 19.075984,\n  //         longitude: position.coords ? position.coords.longitude : 72.877656,\n  //       },\n  //     };\n  //     console.log(\n  //       \"this is mocked position when trying to call location :\",\n  //       mockPosition\n  //     );\n\n  //     try {\n  //       const response = await fetch(url);\n  //       const data = await response.json();\n  //       if (data.results.length > 0) {\n  //         const address = data.results[0].formatted_address;\n  //         console.log(`Address in gettin current locatiomn : ${address}`);\n  //       } else {\n  //         console.log(\"No results found\");\n  //       }\n  //     } catch (error) {\n  //       console.error(\"Error:\", error);\n  //     }\n  //   } catch (error) {\n  //     console.error(\"Failed to get position:\", error);\n  //   }\n  // }\n  getCoordsFromLocation(\n    location: string\n  ): { latitude: number; longitude: number } | null {\n    // Sample mapping for locations. Replace with actual coordinates or a service.\n    const locationCoords = {\n      \"Dining Hall\": { latitude: 38.89511, longitude: -77.03637 }, // Washington, D.C.\n      \"Hall 2\": { latitude: 32.36681, longitude: -86.30057 }, // Montgomery, AL\n      \"Executive Ballroom\": { latitude: 58.30193, longitude: -134.41974 }, // Juneau, AK\n      \"Hall 3\": { latitude: 33.44838, longitude: -112.07404 }, // Phoenix, AZ\n      \"Hall 1\": { latitude: 34.74648, longitude: -92.28959 }, // Little Rock, AR\n      \"Grand Ballroom A\": { latitude: 38.57669, longitude: -121.49342 }, // Sacramento, CA\n    };\n    return locationCoords[location] || null;\n  }\n  async updateMap(session: any) {\n    const coords = this.getCoordsFromLocation(session.location);\n    if (coords) {\n      // await this.plotMap(coords);\n    } else {\n      console.error(\"Coordinates for location not found.\");\n    }\n  }\n  // async plotMap(coords?) {\n  //   const appEl = this.doc.querySelector(\"ion-app\");\n  //   let isDark = false;\n  //   let style = [];\n  //   if (appEl.classList.contains(\"ion-palette-dark\")) {\n  //     style = darkStyle;\n  //   }\n\n  //   const googleMaps = await getGoogleMaps(this.apiKey);\n\n  //   let map;\n  //   const centerCoords = coords\n  //     ? { lat: coords.latitude, lng: coords.longitude }\n  //     : { lat: 19.075984, lng: 72.877656 };\n\n  //   const mapEle = this.mapElement.nativeElement;\n\n  //   map = new googleMaps.Map(mapEle, {\n  //     center: centerCoords,\n  //     zoom: 16,\n  //     styles: style,\n  //   });\n\n  //   const infoWindow = new googleMaps.InfoWindow({\n  //     content: `<h5>test test</h5>`,\n  //   });\n\n  //   const marker = new googleMaps.Marker({\n  //     position: centerCoords,\n  //     map,\n  //     title: \"markerData.name\",\n  //   });\n\n  //   marker.addListener(\"click\", () => {\n  //     infoWindow.open(map, marker);\n  //   });\n\n  //   googleMaps.event.addListenerOnce(map, \"idle\", () => {\n  //     mapEle.classList.add(\"show-map\");\n  //   });\n\n  //   const observer = new MutationObserver((mutations) => {\n  //     mutations.forEach((mutation) => {\n  //       if (mutation.attributeName === \"class\") {\n  //         const el = mutation.target as HTMLElement;\n  //         isDark = el.classList.contains(\"ion-palette-dark\");\n  //         if (map && isDark) {\n  //           map.setOptions({ styles: darkStyle });\n  //         } else if (map) {\n  //           map.setOptions({ styles: [] });\n  //         }\n  //       }\n  //     });\n  //   });\n\n  //   observer.observe(appEl, {\n  //     attributes: true,\n  //   });\n  // }\n\n  async ngAfterViewInit() {\n    // this.plotMap();\n    this.initPolygonMap();\n  }\n\n  async openSocial(network: string, fab: HTMLIonFabElement) {\n    const loading = await this.loadingCtrl.create({\n      message: `Posting to ${network}`,\n      duration: Math.random() * 1000 + 500,\n    });\n    await loading.present();\n    await loading.onWillDismiss();\n    fab.close();\n  }\n  map;\n\n  async initPolygonMap() {\n    const googleMaps = await this.initializeGoogleMaps();\n    const mockPosition = await this.getMockPosition();\n    this.map = this.createMap(googleMaps, mockPosition);\n    this.addMarker(googleMaps, mockPosition, this.map);\n    this.setupClickListener(googleMaps);\n    this.watchPosition(googleMaps, this.map);\n  }\n\n  async initializeGoogleMaps() {\n    const appEl = this.doc.querySelector(\"ion-app\");\n    let style = appEl.classList.contains(\"ion-palette-dark\") ? darkStyle : [];\n    return await getGoogleMaps(this.apiKey);\n  }\n\n  async getMockPosition() {\n    const position = await getPositionWithRetry();\n    return {\n      coords: {\n        latitude: position.coords ? position.coords.latitude : 19.075984,\n        longitude: position.coords ? position.coords.longitude : 72.877656,\n      },\n    };\n  }\n\n  createMap(googleMaps, mockPosition) {\n    const mapEle = this.mapElement.nativeElement;\n    const centerCoords = {\n      lat: mockPosition.coords.latitude,\n      lng: mockPosition.coords.longitude,\n    };\n\n    return new googleMaps.Map(mapEle, {\n      center: centerCoords,\n      zoom: 19,\n      mapId: \"DEMO_MAP_ID\", // Map ID is required for advanced markers.\n    });\n  }\n  addMarker(googleMaps, currentPosition, map) {\n    // Remove previous marker if it exists\n    if (this.marker) {\n      this.marker.setMap(null); // Remove marker from the map\n    }\n\n    // Create new marker\n    this.marker = new googleMaps.Marker({\n      position: {\n        lat: currentPosition.lat,\n        lng: currentPosition.lng,\n      },\n      draggable: true,\n      map: map,\n      title: \"markerData.name\",\n      content: \"content\",\n    });\n\n    const infoWindow = new googleMaps.InfoWindow({\n      content: `<h5>location</h5>`,\n    });\n\n    this.marker.addListener(\"click\", () => {\n      infoWindow.open(map, this.marker);\n    });\n\n    googleMaps.event.addListener(this.marker, \"dragend\", () => {\n      this.updatePosition(this.marker);\n    });\n  }\n\n  async updatePosition(marker) {\n    // console.log(\"Position has changed\");\n    // console.log(marker.getPosition().toJSON()); // Converts LatLng to a JSON object\n\n    const currentPosition = {\n      lat: marker.getPosition().toJSON().lat,\n      lng: marker.getPosition().toJSON().lng,\n    };\n\n    const address = await this.getAddressFromCoordinates(\n      currentPosition.lat,\n      currentPosition.lng\n    );\n    console.log(`Waits and gets the reverse address =: ${address}`);\n\n    if (this.polygonsForMapPlotting.length > 0) {\n      try {\n        const isInAnyPolygon = await this.isWithinPolygon(currentPosition);\n\n        await this.handlePolygonCheck(isInAnyPolygon);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    }\n  }\n\n  async setupClickListener(googleMaps) {\n    let gotPolygonCoords = [];\n    let lastClickTime = 0;\n    let clickTimeout: any;\n\n    googleMaps.event.addListener(this.map, \"click\", async (event) => {\n      const currentTime = new Date().getTime();\n      const timeDifference = currentTime - lastClickTime;\n\n      console.log(\"below are lats and lings after clicking\");\n      console.log(event.latLng.lat());\n      console.log(event.latLng.lng());\n\n      if (timeDifference > 2000 && gotPolygonCoords.length > 0) {\n        gotPolygonCoords = [];\n      }\n\n      gotPolygonCoords.push({\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng(),\n      });\n\n      console.log(\"gotPolygonCoords:\", gotPolygonCoords);\n\n      if (clickTimeout) {\n        clearTimeout(clickTimeout);\n      }\n\n      clickTimeout = setTimeout(async () => {\n        if (gotPolygonCoords.length > 2) {\n          await this.handlePolygonCreation(googleMaps, gotPolygonCoords);\n          gotPolygonCoords = [];\n          // this.polygonsForMapPlotting.push(gotPolygonCoords);\n        } else {\n          console.log(\"more points needed to create an area\");\n          this.showToast(\"More points needed to create an area\");\n        }\n      }, 2000);\n\n      lastClickTime = currentTime;\n    });\n  }\n  clearMap() {\n    if (this.marker) {\n      this.marker.setMap(null);\n      this.marker = null;\n    }\n    this.polygonsForMapPlotting.forEach((polygon) => {\n      polygon.setMap(null);\n    });\n    this.polygonsForMapPlotting = [];\n  }\n\n  async showToast(message: string) {\n    const toast = await this.toastCtrl.create({\n      message: message,\n      duration: 2000,\n      position: \"top\",\n    });\n    toast.present();\n  }\n\n  async handlePolygonCreation(googleMaps, coords) {\n    console.log(\"Creating polygon with coordinates:\", coords);\n    console.log(\"Creating polygon with coordinates:\", coords);\n\n    const polygon = new googleMaps.Polygon({\n      paths: coords,\n      strokeColor: \"#FF0000\",\n      strokeOpacity: 0.8,\n      strokeWeight: 2,\n      fillColor: \"green\",\n      fillOpacity: 0.35,\n      content: this.polygons.length - 1,\n    });\n\n    polygon.setMap(this.map);\n    this.polygonsForMapPlotting.push(polygon); // Store the created polygon\n    this.polygons.push({ coords }); // Store the created polygon with area name\n\n    const mockPosition = await this.getMockPosition(); // Use the updated mockPosition\n    const isInPolygon = await this.isWithinPolygon(mockPosition);\n    await this.handlePolygonCheck(isInPolygon);\n  }\n  private currentToast: HTMLIonToastElement | null = null;\n\n  async handlePolygonCheck(isInPolygon) {\n    console.log(\"I am in handle polygon check:\", isInPolygon);\n\n    if (this.currentToast) {\n      await this.currentToast.dismiss();\n      this.currentToast = null;\n    }\n\n    if (isInPolygon) {\n      console.log(\"someone is in the area, Do something\");\n\n      // Record the geofence entry event\n      this.geofenceService.addMockEvent(\"enter\");\n      console.log(\"Recorded ENTER event in GeofenceService\");\n\n      this.enterSound\n        .play()\n        .catch((error) => console.error(\"Error playing enter sound:\", error));\n\n      // Create a toast for being within the polygon\n      this.currentToast = await this.toastCtrl.create({\n        header: \"someone is in the area. Do something.\",\n        duration: 3000,\n        buttons: [\n          {\n            text: \"Close\",\n            role: \"cancel\",\n          },\n        ],\n      });\n\n      // Present the toast at the bottom of the page\n      await this.currentToast.present();\n\n      // Update the state to indicate that the user is in the polygon\n      this.wasInPolygon = true;\n    } else {\n      if (this.wasInPolygon) {\n        console.log(\"someone left your area\");\n\n        // Record the geofence exit event\n        this.geofenceService.addMockEvent(\"exit\");\n        console.log(\"Recorded EXIT event in GeofenceService\");\n\n        // Create a toast for being outside the polygon\n        this.currentToast = await this.toastCtrl.create({\n          header: \"someone left your area\",\n          duration: 3000,\n          buttons: [\n            {\n              text: \"Close\",\n              role: \"cancel\",\n            },\n          ],\n        });\n\n        // Present the toast at the bottom of the page\n        await this.currentToast.present();\n\n        // Update the state to indicate that the user is no longer in the polygon\n        this.wasInPolygon = false;\n      }\n    }\n  }\n\n  async isWithinPolygon(position) {\n    console.log(\"Checking polygon bounds\");\n    console.log(\"position:\", position);\n\n    // Ensure Google Maps API is loaded\n    const googleMaps = await getGoogleMaps(this.apiKey);\n\n    // Create a LatLng object from the position coordinates\n    const latLng = new googleMaps.LatLng(position.lat, position.lng);\n\n    console.log(\"this.polygonsForMapPlotting :\", this.polygonsForMapPlotting);\n    if (this.polygonsForMapPlotting.length > 0) {\n      // Check if the position is within any of the polygons\n      for (const polygon of this.polygonsForMapPlotting) {\n        if (googleMaps.geometry.poly.containsLocation(latLng, polygon)) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n  async promptForAreaName() {\n    const alert = await this.alertCtrl.create({\n      header: \"Name the Area\",\n      inputs: [\n        {\n          name: \"areaName\",\n          type: \"text\",\n          placeholder: \"Enter area name\",\n        },\n      ],\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n        },\n        {\n          text: \"OK\",\n          handler: (data) => {\n            return data.areaName;\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n    const result = await alert.onDidDismiss();\n    return result.data.values.areaName;\n  }\n\n  handleAction() {\n    console.log(\"handling here\");\n  }\n  // Function to check if the position is within the bounds\n  isWithinBounds(position) {\n    // Define the coordinates of the rectangle\n    const bounds = {\n      north: 40.7128, // Upper latitude\n      south: 40.706, // Lower latitude\n      east: -74.0059, // Right longitude\n      west: -74.013, // Left longitude\n    };\n\n    const { latitude, longitude } = position.coords;\n    return (\n      latitude <= bounds.north &&\n      latitude >= bounds.south &&\n      longitude <= bounds.east &&\n      longitude >= bounds.west\n    );\n  }\n  getCoordinatesByclicking() {}\n}\n\nfunction getGoogleMaps(apiKey: string): Promise<any> {\n  const win = window as any;\n  const googleModule = win.google;\n  if (googleModule && googleModule.maps) {\n    return Promise.resolve(googleModule.maps);\n  }\n\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=geometry&v=3.31`;\n    script.async = true;\n    script.defer = true;\n    document.body.appendChild(script);\n    script.onload = () => {\n      const googleModule2 = win.google;\n      if (googleModule2 && googleModule2.maps) {\n        resolve(googleModule2.maps);\n      } else {\n        reject(\"google maps not available\");\n      }\n    };\n  });\n}\n\nasync function getPositionWithRetry(retries = 3) {\n  for (let i = 0; i < retries; i++) {\n    try {\n      const position = await Geolocation.getCurrentPosition({\n        timeout: 5000, // 5 seconds\n        enableHighAccuracy: true,\n      });\n      return position;\n    } catch (error) {\n      if (i === retries - 1) throw error;\n    }\n  }\n}\n","<ion-header translucent=\"true\">\n    <ion-toolbar>\n        <ion-buttons *ngIf=\"!showSearchbar\" slot=\"start\">\n            <ion-menu-button></ion-menu-button>\n        </ion-buttons>\n        <ion-segment *ngIf=\"ios\" [(ngModel)]=\"segment\" (ionChange)=\"updateSchedule()\">\n            <ion-segment-button value=\"all\"> All </ion-segment-button>\n            <ion-segment-button value=\"favorites\"> Favorites </ion-segment-button>\n        </ion-segment>\n        <ion-title *ngIf=\"!ios && !showSearchbar\">Users</ion-title>\n        <ion-searchbar *ngIf=\"showSearchbar\" showCancelButton=\"always\" [(ngModel)]=\"queryText\"\n            (ionInput)=\"updateSchedule()\" (ionCancel)=\"showSearchbar = false\" placeholder=\"Search\"></ion-searchbar>\n        <ion-buttons slot=\"end\">\n            <ion-button *ngIf=\"!ios && !showSearchbar\" (click)=\"showSearchbar = true\">\n                <ion-icon slot=\"icon-only\" name=\"search\"></ion-icon>\n            </ion-button>\n            <ion-button *ngIf=\"!showSearchbar\" (click)=\"presentFilter()\">\n                <span *ngIf=\"ios\">Filter</span>\n                <span *ngIf=\"!ios\">\n                    <ion-icon slot=\"icon-only\" name=\"options\"></ion-icon>\n                </span>\n            </ion-button>\n        </ion-buttons>\n    </ion-toolbar>\n    <ion-toolbar *ngIf=\"!ios\">\n        <ion-segment [(ngModel)]=\"segment\" (ionChange)=\"updateSchedule()\">\n            <ion-segment-button value=\"all\"> All </ion-segment-button>\n            <ion-segment-button value=\"favorites\"> Favorites </ion-segment-button>\n        </ion-segment>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content fullscreen=\"true\">\n    <ion-header collapse=\"condense\">\n        <ion-toolbar>\n            <ion-title size=\"large\">Users</ion-title>\n        </ion-toolbar>\n        <ion-toolbar>\n            <ion-searchbar [(ngModel)]=\"queryText\" (ionInput)=\"updateSchedule()\" placeholder=\"Search\"></ion-searchbar>\n        </ion-toolbar>\n    </ion-header>\n    <div class=\"col-2\">\n        <ion-list #scheduleList [hidden]=\"shownSessions === 0\" [ngClass]=\"{ 'collapsed': !isNavExpanded }\"\n            class=\"side-nav\">\n            <h1 (click)=\"toggleNav()\" style=\"cursor: pointer;\">Device Details</h1>\n\n            <div *ngIf=\"isNavExpanded\">\n                <ul *ngIf=\"ipAddress; else noIpAddress\">\n                    <li><strong>IP Address:</strong> {{ ipAddress }}</li>\n                </ul>\n                <ng-template #noIpAddress>\n                    <p>No IP address available.</p>\n                </ng-template>\n\n                <ul *ngIf=\"deviceInfo; else noDeviceInfo\">\n                    <li><strong>Device:</strong> {{ deviceInfo.device || 'Unknown' }}</li>\n                    <li><strong>Operating System:</strong> {{ deviceInfo.os || 'Unknown' }}</li>\n                    <li><strong>OS Version:</strong> {{ deviceInfo.os_version || 'Unknown' }}</li>\n                    <li><strong>Browser:</strong> {{ deviceInfo.browser || 'Unknown' }}</li>\n                    <li><strong>Browser Version:</strong> {{ deviceInfo.browser_version || 'Unknown' }}</li>\n                    <li><strong>Is Mobile:</strong> {{ isMobile() }}</li>\n                    <li><strong>Is Tablet:</strong> {{ isTablet() }}</li>\n                    <li><strong>Is Desktop:</strong> {{ isDesktop() }}</li>\n                </ul>\n                <ng-template #noDeviceInfo>\n                    <p>No device information available.</p>\n                </ng-template>\n\n                <ul *ngIf=\"deviceInfo1; else noDeviceInfo1\">\n                    <li><strong>Model:</strong> {{ deviceInfo1.model || 'Unknown' }}</li>\n                    <li><strong>Platform:</strong> {{ deviceInfo1.platform || 'Unknown' }}</li>\n                    <li><strong>OS Version:</strong> {{ deviceInfo1.osVersion || 'Unknown' }}</li>\n                    <li><strong>UUID:</strong> {{ deviceInfo1.uuid || 'Unknown' }}</li>\n                    <li><strong>Manufacturer:</strong> {{ deviceInfo1.manufacturer || 'Unknown' }}</li>\n                    <li><strong>Is Virtual:</strong> {{ deviceInfo1.isVirtual ? 'Yes' : 'No' }}</li>\n                </ul>\n                <ng-template #noDeviceInfo1>\n                    <p>No additional device information available.</p>\n                </ng-template>\n            </div>\n\n            <div *ngFor=\"let group of groups\">\n                <ion-item-divider sticky (click)=\"toggleGroup(group)\">\n                    <ion-label> {{group.time}} </ion-label>\n                </ion-item-divider>\n\n                <div [ngClass]=\"{ 'collapsed': group.collapsed }\">\n                    <ion-item-sliding *ngFor=\"let session of group.sessions\" #slidingItem\n                        [attr.track]=\"session.tracks[0] | lowercase\" [hidden]=\"session.hide\">\n                        <ion-item>\n                            <ion-label (click)=\"updateMap(session)\">\n                                <h3>{{session.name}}</h3>\n                                <p>\n                                    {{session.timeStart}} — {{session.timeEnd}}\n                                </p>\n                            </ion-label>\n                        </ion-item>\n                        <ion-item-options>\n                            <ion-item-option color=\"favorite\" (click)=\"addFavorite(slidingItem, session)\"\n                                *ngIf=\"segment === 'all'\">\n                                Favorite\n                            </ion-item-option>\n                            <ion-item-option color=\"danger\"\n                                (click)=\"removeFavorite(slidingItem, session, 'Remove Favorite')\"\n                                *ngIf=\"segment === 'favorites'\">\n                                Remove\n                            </ion-item-option>\n                        </ion-item-options>\n                    </ion-item-sliding>\n                </div>\n            </div>\n        </ion-list>\n\n\n        <div class=\"map-container\" [ngClass]=\"{ 'map-container-full': isNavExpanded }\">\n            <div #mapPlotting id=\"map-poly\" class=\"map-canvas\"></div>\n            <div class=\"polygons\">\n                <ion-button (click)=\"toggleNav()\" class=\"toggle-button\" style=\"cursor: pointer;\">\n                    {{ isNavExpanded ? 'Collapse' : 'Expand' }}\n                </ion-button>\n                <ion-button (click)=\"clearMap()\">Clear Map</ion-button>\n\n                <div *ngIf=\"isNavExpanded\">\n                    <div *ngFor=\"let polygon of polygons; let i = index\">\n                        <div>Area {{ i + 1 }}:</div>\n                        <div *ngFor=\"let coord of polygon\">\n                            Latitude: {{ coord.lat | number: '1.2-2' }}, Longitude: {{ coord.lng | number: '1.2-2' }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n\n\n        <!-- <button (click)=\"handleAction()\">start new location</button> -->\n\n    </div>\n\n\n    <ion-list-header [hidden]=\"shownSessions > 0\">\n        No Sessions Found\n    </ion-list-header>\n\n    <ion-fab slot=\"fixed\" vertical=\"bottom\" horizontal=\"end\" #fab>\n        <ion-fab-button>\n            <ion-icon name=\"share-social\"></ion-icon>\n        </ion-fab-button>\n        <ion-fab-list side=\"top\">\n            <ion-fab-button color=\"vimeo\" (click)=\"openSocial('Vimeo', fab)\">\n                <ion-icon name=\"logo-vimeo\"></ion-icon>\n            </ion-fab-button>\n            <ion-fab-button color=\"instagram\" (click)=\"openSocial('Instagram', fab)\">\n                <ion-icon name=\"logo-instagram\"></ion-icon>\n            </ion-fab-button>\n            <ion-fab-button color=\"twitter\" (click)=\"openSocial('Twitter', fab)\">\n                <ion-icon name=\"logo-twitter\"></ion-icon>\n            </ion-fab-button>\n            <ion-fab-button color=\"facebook\" (click)=\"openSocial('Facebook', fab)\">\n                <ion-icon name=\"logo-facebook\"></ion-icon>\n            </ion-fab-button>\n        </ion-fab-list>\n    </ion-fab>\n</ion-content>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SessionDetailPage } from './session-detail';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SessionDetailPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SessionDetailPageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SessionDetailPage } from './session-detail';\nimport { SessionDetailPageRoutingModule } from './session-detail-routing.module';\nimport { IonicModule } from '@ionic/angular';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    SessionDetailPageRoutingModule\n  ],\n  declarations: [\n    SessionDetailPage,\n  ]\n})\nexport class SessionDetailModule { }\n","import { Component } from '@angular/core';\n\nimport { ConferenceData } from '../../providers/conference-data';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserData } from '../../providers/user-data';\n\n@Component({\n  selector: 'page-session-detail',\n  styleUrls: ['./session-detail.scss'],\n  templateUrl: 'session-detail.html'\n})\nexport class SessionDetailPage {\n  session: any;\n  isFavorite = false;\n  defaultHref = '';\n\n  constructor(\n    private dataProvider: ConferenceData,\n    private userProvider: UserData,\n    private route: ActivatedRoute\n  ) { }\n\n  ionViewWillEnter() {\n    this.dataProvider.load().subscribe((data: any) => {\n      if (data && data.schedule && data.schedule[0] && data.schedule[0].groups) {\n        const sessionId = this.route.snapshot.paramMap.get('sessionId');\n        for (const group of data.schedule[0].groups) {\n          if (group && group.sessions) {\n            for (const session of group.sessions) {\n              if (session && session.id === sessionId) {\n                this.session = session;\n\n                this.isFavorite = this.userProvider.hasFavorite(\n                  this.session.name\n                );\n\n                break;\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n\n  ionViewDidEnter() {\n    this.defaultHref = `/app/tabs/schedule`;\n  }\n\n  sessionClick(item: string) {\n    console.log('Clicked', item);\n  }\n\n  toggleFavorite() {\n    if (this.userProvider.hasFavorite(this.session.name)) {\n      this.userProvider.removeFavorite(this.session.name);\n      this.isFavorite = false;\n    } else {\n      this.userProvider.addFavorite(this.session.name);\n      this.isFavorite = true;\n    }\n  }\n\n  shareSession() {\n    console.log('Clicked share session');\n  }\n}\n","<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button [defaultHref]=\"defaultHref\"></ion-back-button>\n    </ion-buttons>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"toggleFavorite()\">\n        <ion-icon *ngIf=\"!isFavorite\" slot=\"icon-only\" name=\"star-outline\"></ion-icon>\n        <ion-icon *ngIf=\"isFavorite\" slot=\"icon-only\" name=\"star\"></ion-icon>\n      </ion-button>\n      <ion-button (click)=\"shareSession()\">\n        <ion-icon slot=\"icon-only\" name=\"share\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <div *ngIf=\"session\" class=\"ion-padding\">\n    <h1>{{session.name}}</h1>\n    <span *ngFor=\"let track of session?.tracks\" [class]=\"'session-track-'+track.toLowerCase()\">{{track}}</span>\n    <p>{{session.description}}</p>\n    <ion-text color=\"medium\">\n      {{session.timeStart}} &ndash; {{session.timeEnd}}\n      <br /> {{session.location}}\n    </ion-text>\n  </div>\n\n  <ion-list>\n    <ion-item (click)=\"sessionClick('watch')\" button>\n      <ion-label color=\"primary\">Watch</ion-label>\n    </ion-item>\n    <ion-item (click)=\"sessionClick('add to calendar')\" button>\n      <ion-label color=\"primary\">Add to Calendar</ion-label>\n    </ion-item>\n    <ion-item (click)=\"sessionClick('mark as unwatched')\" button>\n      <ion-label color=\"primary\">Mark as Unwatched</ion-label>\n    </ion-item>\n    <ion-item (click)=\"sessionClick('download video')\" button>\n      <ion-label color=\"primary\">Download Video</ion-label>\n      <ion-icon slot=\"end\" color=\"primary\" size=\"small\" name=\"cloud-download\"></ion-icon>\n    </ion-item>\n    <ion-item (click)=\"sessionClick('leave feedback')\" button>\n      <ion-label color=\"primary\">Leave Feedback</ion-label>\n    </ion-item>\n  </ion-list>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SpeakerDetailPage } from './speaker-detail';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SpeakerDetailPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SpeakerDetailPageRoutingModule { }\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { SpeakerDetailPage } from \"./speaker-detail\";\nimport { SpeakerDetailPageRoutingModule } from \"./speaker-detail-routing.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SpeakerDetailPageRoutingModule,\n  ],\n  declarations: [SpeakerDetailPage],\n  exports: [SpeakerDetailPage],\n})\nexport class SpeakerDetailModule {}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ConferenceData } from \"../../providers/conference-data\";\nimport { ActionSheetController } from \"@ionic/angular\";\nimport { InAppBrowser } from \"@awesome-cordova-plugins/in-app-browser/ngx\";\n\n@Component({\n  selector: \"page-speaker-detail\",\n  templateUrl: \"speaker-detail.html\",\n  styleUrls: [\"./speaker-detail.scss\"],\n})\nexport class SpeakerDetailPage {\n  speaker: any;\n\n  constructor(\n    private dataProvider: ConferenceData,\n    private route: ActivatedRoute,\n    public actionSheetCtrl: ActionSheetController,\n    public confData: ConferenceData,\n    public inAppBrowser: InAppBrowser\n  ) {}\n\n  ionViewWillEnter() {\n    this.dataProvider.load().subscribe((data: any) => {\n      const speakerId = this.route.snapshot.paramMap.get(\"speakerId\");\n      if (data && data.speakers) {\n        for (const speaker of data.speakers) {\n          if (speaker && speaker.id === speakerId) {\n            this.speaker = speaker;\n            break;\n          }\n        }\n      }\n    });\n  }\n\n  openExternalUrl(url: string) {\n    this.inAppBrowser.create(url, \"_blank\");\n  }\n\n  async openSpeakerShare(speaker: any) {\n    const actionSheet = await this.actionSheetCtrl.create({\n      header: \"Share \" + speaker.name,\n      buttons: [\n        {\n          text: \"Copy Link\",\n          handler: () => {\n            console.log(\n              \"Copy link clicked on https://twitter.com/\" + speaker.twitter\n            );\n            if (\n              (window as any).cordova &&\n              (window as any).cordova.plugins.clipboard\n            ) {\n              (window as any).cordova.plugins.clipboard.copy(\n                \"https://twitter.com/\" + speaker.twitter\n              );\n            }\n          },\n        },\n        {\n          text: \"Share via ...\",\n        },\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n        },\n      ],\n    });\n\n    await actionSheet.present();\n  }\n\n  async openContact(speaker: any) {\n    const mode = \"ios\"; // this.config.get('mode');\n\n    const actionSheet = await this.actionSheetCtrl.create({\n      header: \"Contact \" + speaker.name,\n      buttons: [\n        {\n          text: `Email ( ${speaker.email} )`,\n          icon: mode !== \"ios\" ? \"mail\" : null,\n          handler: () => {\n            window.open(\"mailto:\" + speaker.email);\n          },\n        },\n        {\n          text: `Call ( ${speaker.phone} )`,\n          icon: mode !== \"ios\" ? \"call\" : null,\n          handler: () => {\n            window.open(\"tel:\" + speaker.phone);\n          },\n        },\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n        },\n      ],\n    });\n\n    await actionSheet.present();\n  }\n}\n","<ion-content class=\"speaker-detail\">\n  <ion-header class=\"ion-no-border\">\n    <ion-toolbar>\n      <ion-buttons slot=\"start\">\n        <ion-back-button defaultHref=\"/app/tabs/speakers\"></ion-back-button>\n      </ion-buttons>\n      <ion-buttons *ngIf=\"speaker\" slot=\"end\">\n        <ion-button (click)=\"openContact(speaker)\">\n          <ion-icon slot=\"icon-only\" ios=\"call-outline\" md=\"call-sharp\"></ion-icon>\n        </ion-button>\n        <ion-button (click)=\"openSpeakerShare(speaker)\">\n          <ion-icon slot=\"icon-only\" ios=\"share-outline\" md=\"share-sharp\"></ion-icon>\n        </ion-button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-header>\n\n  <div class=\"speaker-background\">\n    <img [src]=\"speaker?.profilePic\" [alt]=\"speaker?.name\">\n    <h2>{{speaker?.name}}</h2>\n  </div>\n\n  <div class=\"ion-padding speaker-detail\">\n    <p>{{speaker?.about}} Say hello on social media!</p>\n\n    <hr>\n\n    <ion-chip color=\"twitter\" button (click)=\"openExternalUrl('https://twitter.com/' + speaker.twitter)\">\n      <ion-icon name=\"logo-twitter\"></ion-icon>\n      <ion-label>Twitter</ion-label>\n    </ion-chip>\n\n    <ion-chip color=\"dark\" button (click)=\"openExternalUrl('https://github.com/ionic-team/ionic')\">\n      <ion-icon name=\"logo-github\"></ion-icon>\n      <ion-label>GitHub</ion-label>\n    </ion-chip>\n\n    <ion-chip color=\"instagram\" button (click)=\"openExternalUrl('https://instagram.com/ionicframework')\">\n      <ion-icon name=\"logo-instagram\"></ion-icon>\n      <ion-label>Instagram</ion-label>\n    </ion-chip>\n  </div>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SpeakerListPage } from './speaker-list';\nconst routes: Routes = [\n  {\n    path: '',\n    component: SpeakerListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SpeakerListPageRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { SpeakerListPage } from \"./speaker-list\";\nimport { SpeakerListPageRoutingModule } from \"./speaker-list-routing.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SpeakerListPageRoutingModule,\n  ],\n  declarations: [SpeakerListPage],\n  exports: [SpeakerListPage],\n})\nexport class SpeakerListModule {}\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\nimport { ConferenceData } from \"../../providers/conference-data\";\nimport { GeofenceService, UserInfo } from \"../../providers/geofence.service\";\n\n@Component({\n  selector: \"page-speaker-list\",\n  templateUrl: \"speaker-list.html\",\n  styleUrls: [\"./speaker-list.scss\"],\n})\nexport class SpeakerListPage implements OnInit {\n  currentUser: UserInfo | null = null;\n  usersInGeofence: UserInfo[] = [];\n  allUsers: UserInfo[] = [];\n\n  constructor(\n    public confData: ConferenceData,\n    private geofenceService: GeofenceService\n  ) {}\n\n  async ngOnInit() {\n    // Initialize geofence service\n    await this.geofenceService.initializeCurrentUser();\n    this.geofenceService.simulateOtherUsers();\n\n    // Update data every 5 seconds\n    setInterval(() => {\n      this.updateUserData();\n    }, 5000);\n\n    this.updateUserData();\n  }\n\n  updateUserData() {\n    this.currentUser = this.geofenceService.getCurrentUser();\n    this.usersInGeofence = this.geofenceService.getUsersInGeofence();\n    this.allUsers = this.geofenceService.getUsers();\n  }\n\n  getStatusColor(status: string): string {\n    switch (status) {\n      case \"inside\":\n        return \"success\";\n      case \"entering\":\n        return \"warning\";\n      case \"exiting\":\n        return \"warning\";\n      case \"outside\":\n        return \"medium\";\n      default:\n        return \"medium\";\n    }\n  }\n\n  getStatusText(status: string): string {\n    switch (status) {\n      case \"inside\":\n        return \"Inside Geofence\";\n      case \"entering\":\n        return \"Entering...\";\n      case \"exiting\":\n        return \"Exiting...\";\n      case \"outside\":\n        return \"Outside Geofence\";\n      default:\n        return \"Unknown\";\n    }\n  }\n\n  formatTimestamp(timestamp: number): string {\n    const date = new Date(timestamp);\n    return date.toLocaleString();\n  }\n\n  async ionViewWillLeave() {\n    await this.geofenceService.stopWatching();\n  }\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-menu-button></ion-menu-button>\n        </ion-buttons>\n        <ion-title>Geofence Users</ion-title>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content>\n    <!-- Current User Info -->\n    <ion-card *ngIf=\"currentUser\">\n        <ion-card-header>\n            <ion-card-title>Your Status</ion-card-title>\n        </ion-card-header>\n        <ion-card-content>\n            <ion-chip [color]=\"getStatusColor(currentUser.geofenceStatus)\">\n                <ion-icon name=\"location\"></ion-icon>\n                <ion-label>{{ getStatusText(currentUser.geofenceStatus) }}</ion-label>\n            </ion-chip>\n\n            <ion-item lines=\"none\">\n                <ion-icon name=\"navigate\" slot=\"start\"></ion-icon>\n                <ion-label>\n                    <h3>Location</h3>\n                    <p>{{ currentUser.location.latitude.toFixed(6) }}, {{ currentUser.location.longitude.toFixed(6) }}\n                    </p>\n                    <p>Accuracy: {{ currentUser.location.accuracy }}m</p>\n                </ion-label>\n            </ion-item>\n\n            <ion-item lines=\"none\">\n                <ion-icon name=\"phone-portrait\" slot=\"start\"></ion-icon>\n                <ion-label>\n                    <h3>Device</h3>\n                    <p>{{ currentUser.deviceInfo.model }} ({{ currentUser.deviceInfo.platform }})</p>\n                    <p>{{ currentUser.deviceInfo.operatingSystem }} {{ currentUser.deviceInfo.osVersion }}</p>\n                </ion-label>\n            </ion-item>\n\n            <ion-item lines=\"none\">\n                <ion-icon name=\"wifi\" slot=\"start\"></ion-icon>\n                <ion-label>\n                    <h3>Network</h3>\n                    <p>{{ currentUser.networkInfo.connectionType || 'Unknown' }}</p>\n                    <p>Connected: {{ currentUser.networkInfo.connected ? 'Yes' : 'No' }}</p>\n                </ion-label>\n            </ion-item>\n        </ion-card-content>\n    </ion-card>\n\n    <!-- Users in Geofence -->\n    <ion-card>\n        <ion-card-header>\n            <ion-card-title>Users in Trinidad Area ({{ usersInGeofence.length }})</ion-card-title>\n        </ion-card-header>\n        <ion-card-content>\n            <ion-list *ngIf=\"usersInGeofence.length > 0; else noUsers\">\n                <ion-item *ngFor=\"let user of usersInGeofence\">\n                    <ion-avatar slot=\"start\">\n                        <ion-icon name=\"person-circle\" size=\"large\"></ion-icon>\n                    </ion-avatar>\n                    <ion-label>\n                        <h2>{{ user.deviceInfo.model }}</h2>\n                        <p>{{ user.deviceInfo.platform }} - {{ user.deviceInfo.operatingSystem }} {{\n                            user.deviceInfo.osVersion }}</p>\n                        <p>Last seen: {{ formatTimestamp(user.lastSeen) }}</p>\n                        <p>Location: {{ user.location.latitude.toFixed(4) }}, {{ user.location.longitude.toFixed(4) }}\n                        </p>\n                    </ion-label>\n                    <ion-chip [color]=\"getStatusColor(user.geofenceStatus)\" slot=\"end\">\n                        <ion-label>{{ getStatusText(user.geofenceStatus) }}</ion-label>\n                    </ion-chip>\n                </ion-item>\n            </ion-list>\n\n            <ng-template #noUsers>\n                <ion-item>\n                    <ion-icon name=\"people\" slot=\"start\"></ion-icon>\n                    <ion-label>\n                        <h3>No other users in the geofence area</h3>\n                        <p>You're the only one here right now</p>\n                    </ion-label>\n                </ion-item>\n            </ng-template>\n        </ion-card-content>\n    </ion-card>\n\n    <!-- All Users -->\n    <ion-card>\n        <ion-card-header>\n            <ion-card-title>All Active Users ({{ allUsers.length }})</ion-card-title>\n        </ion-card-header>\n        <ion-card-content>\n            <ion-list *ngIf=\"allUsers.length > 0; else noActiveUsers\">\n                <ion-item *ngFor=\"let user of allUsers\">\n                    <ion-avatar slot=\"start\">\n                        <ion-icon name=\"person-circle\" size=\"large\"></ion-icon>\n                    </ion-avatar>\n                    <ion-label>\n                        <h2>{{ user.deviceInfo.model }}</h2>\n                        <p>{{ user.deviceInfo.manufacturer }} - {{ user.deviceInfo.platform }}</p>\n                        <p>{{ user.deviceInfo.operatingSystem }} {{ user.deviceInfo.osVersion }}</p>\n                        <p>Network: {{ user.networkInfo.connectionType || 'Unknown' }}</p>\n                        <p>Last seen: {{ formatTimestamp(user.lastSeen) }}</p>\n                    </ion-label>\n                    <ion-chip [color]=\"getStatusColor(user.geofenceStatus)\" slot=\"end\">\n                        <ion-label>{{ getStatusText(user.geofenceStatus) }}</ion-label>\n                    </ion-chip>\n                </ion-item>\n            </ion-list>\n\n            <ng-template #noActiveUsers>\n                <ion-item>\n                    <ion-icon name=\"people\" slot=\"start\"></ion-icon>\n                    <ion-label>\n                        <h3>No active users found</h3>\n                        <p>Waiting for other users to join...</p>\n                    </ion-label>\n                </ion-item>\n            </ng-template>\n        </ion-card-content>\n    </ion-card>\n</ion-content>","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { TabsPage } from \"./tabs-page\";\nimport { SchedulePage } from \"../schedule/schedule\";\n\nconst routes: Routes = [\n  {\n    path: \"tabs\",\n    component: TabsPage,\n    children: [\n      {\n        path: \"schedule\",\n        children: [\n          {\n            path: \"\",\n            component: SchedulePage,\n          },\n          {\n            path: \"session/:sessionId\",\n            loadChildren: () =>\n              import(\"../session-detail/session-detail.module\").then(\n                (m) => m.SessionDetailModule\n              ),\n          },\n        ],\n      },\n      {\n        path: \"speakers\",\n        children: [\n          {\n            path: \"\",\n            loadChildren: () =>\n              import(\"../speaker-list/speaker-list.module\").then(\n                (m) => m.SpeakerListModule\n              ),\n          },\n          {\n            path: \"session/:sessionId\",\n            loadChildren: () =>\n              import(\"../session-detail/session-detail.module\").then(\n                (m) => m.SessionDetailModule\n              ),\n          },\n          {\n            path: \"speaker-details/:speakerId\",\n            loadChildren: () =>\n              import(\"../speaker-detail/speaker-detail.module\").then(\n                (m) => m.SpeakerDetailModule\n              ),\n          },\n        ],\n      },\n      {\n        path: \"map\",\n        children: [\n          {\n            path: \"\",\n            loadChildren: () =>\n              import(\"../map/map.module\").then((m) => m.MapModule),\n          },\n        ],\n      },\n      {\n        path: \"activity\",\n        children: [\n          {\n            path: \"\",\n            loadChildren: () =>\n              import(\"../activity-log/activity-log.module\").then(\n                (m) => m.ActivityLogModule\n              ),\n          },\n        ],\n      },\n      {\n        path: \"\",\n        redirectTo: \"/app/tabs/schedule\",\n        pathMatch: \"full\",\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TabsPageRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { TabsPage } from \"./tabs-page\";\nimport { TabsPageRoutingModule } from \"./tabs-page-routing.module\";\n\nimport { ActivityLogModule } from \"../activity-log/activity-log.module\";\nimport { MapModule } from \"../map/map.module\";\nimport { ScheduleModule } from \"../schedule/schedule.module\";\nimport { SessionDetailModule } from \"../session-detail/session-detail.module\";\nimport { SpeakerDetailModule } from \"../speaker-detail/speaker-detail.module\";\nimport { SpeakerListModule } from \"../speaker-list/speaker-list.module\";\n\n@NgModule({\n  imports: [\n    ActivityLogModule,\n    CommonModule,\n    IonicModule,\n    MapModule,\n    ScheduleModule,\n    SessionDetailModule,\n    SpeakerDetailModule,\n    SpeakerListModule,\n    TabsPageRoutingModule,\n  ],\n  declarations: [TabsPage],\n})\nexport class TabsModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: 'tabs-page.html'\n})\nexport class TabsPage {}\n","<ion-tabs>\n\n  <ion-tab-bar slot=\"bottom\">\n    <ion-tab-button tab=\"schedule\">\n      <ion-icon name=\"people\"></ion-icon>\n      <ion-label>Users</ion-label>\n    </ion-tab-button>\n\n    <ion-tab-button tab=\"map\">\n      <ion-icon name=\"location\"></ion-icon>\n      <ion-label>Map</ion-label>\n    </ion-tab-button>\n\n    <ion-tab-button tab=\"activity\">\n      <ion-icon name=\"time\"></ion-icon>\n      <ion-label>Activity</ion-label>\n    </ion-tab-button>\n  </ion-tab-bar>\n\n</ion-tabs>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { UserData } from './user-data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConferenceData {\n  data: any;\n\n  constructor(public http: HttpClient, public user: UserData) {}\n\n  load(): any {\n    if (this.data) {\n      return of(this.data);\n    } else {\n      return this.http\n        .get('assets/data/data.json')\n        .pipe(map(this.processData, this));\n    }\n  }\n\n  processData(data: any) {\n    // just some good 'ol JS fun with objects and arrays\n    // build up the data by linking speakers to sessions\n    this.data = data;\n\n    // loop through each day in the schedule\n    this.data.schedule.forEach((day: any) => {\n      // loop through each timeline group in the day\n      day.groups.forEach((group: any) => {\n        // loop through each session in the timeline group\n        group.sessions.forEach((session: any) => {\n          session.speakers = [];\n          if (session.speakerNames) {\n            session.speakerNames.forEach((speakerName: any) => {\n              const speaker = this.data.speakers.find(\n                (s: any) => s.name === speakerName\n              );\n              if (speaker) {\n                session.speakers.push(speaker);\n                speaker.sessions = speaker.sessions || [];\n                speaker.sessions.push(session);\n              }\n            });\n          }\n        });\n      });\n    });\n\n    return this.data;\n  }\n\n  getTimeline(\n    dayIndex: number,\n    queryText = '',\n    excludeTracks: any[] = [],\n    segment = 'all'\n  ) {\n    return this.load().pipe(\n      map((data: any) => {\n        const day = data.schedule[dayIndex];\n        day.shownSessions = 0;\n\n        queryText = queryText.toLowerCase().replace(/,|\\.|-/g, ' ');\n        const queryWords = queryText.split(' ').filter(w => !!w.trim().length);\n\n        day.groups.forEach((group: any) => {\n          group.hide = true;\n\n          group.sessions.forEach((session: any) => {\n            // check if this session should show or not\n            this.filterSession(session, queryWords, excludeTracks, segment);\n\n            if (!session.hide) {\n              // if this session is not hidden then this group should show\n              group.hide = false;\n              day.shownSessions++;\n            }\n          });\n        });\n\n        return day;\n      })\n    );\n  }\n\n  filterSession(\n    session: any,\n    queryWords: string[],\n    excludeTracks: any[],\n    segment: string\n  ) {\n    let matchesQueryText = false;\n    if (queryWords.length) {\n      // of any query word is in the session name than it passes the query test\n      queryWords.forEach((queryWord: string) => {\n        if (session.name.toLowerCase().indexOf(queryWord) > -1) {\n          matchesQueryText = true;\n        }\n      });\n    } else {\n      // if there are no query words then this session passes the query test\n      matchesQueryText = true;\n    }\n\n    // if any of the sessions tracks are not in the\n    // exclude tracks then this session passes the track test\n    let matchesTracks = false;\n    session.tracks.forEach((trackName: string) => {\n      if (excludeTracks.indexOf(trackName) === -1) {\n        matchesTracks = true;\n      }\n    });\n\n    // if the segment is 'favorites', but session is not a user favorite\n    // then this session does not pass the segment test\n    let matchesSegment = false;\n    if (segment === 'favorites') {\n      if (this.user.hasFavorite(session.name)) {\n        matchesSegment = true;\n      }\n    } else {\n      matchesSegment = true;\n    }\n\n    // all tests must be true if it should not be hidden\n    session.hide = !(matchesQueryText && matchesTracks && matchesSegment);\n  }\n\n  getSpeakers() {\n    return this.load().pipe(\n      map((data: any) => {\n        return data.speakers.sort((a: any, b: any) => {\n          const aName = a.name.split(' ').pop();\n          const bName = b.name.split(' ').pop();\n          return aName.localeCompare(bName);\n        });\n      })\n    );\n  }\n\n  getTracks() {\n    return this.load().pipe(\n      map((data: any) => {\n        return data.tracks.sort();\n      })\n    );\n  }\n\n  getMap() {\n    return this.load().pipe(\n      map((data: any) => {\n        return data.map;\n      })\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Device } from \"@capacitor/device\";\nimport { Geolocation } from \"@capacitor/geolocation\";\nimport { Network } from \"@capacitor/network\";\n\nexport interface UserInfo {\n  id: string;\n  deviceInfo: any;\n  networkInfo: any;\n  location: {\n    latitude: number;\n    longitude: number;\n    accuracy: number;\n    timestamp: number;\n  };\n  geofenceStatus: \"inside\" | \"outside\" | \"entering\" | \"exiting\";\n  lastSeen: number;\n}\n\nexport interface GeofenceEvent {\n  userId: string;\n  userDeviceInfo: any;\n  type: \"enter\" | \"exit\";\n  timestamp: number;\n  location: {\n    latitude: number;\n    longitude: number;\n  };\n  duration?: number; // in milliseconds, for exit events\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class GeofenceService {\n  private geofenceCenter = { lat: 10.6918, lng: -61.2225 }; // Trinidad coordinates\n  private geofenceRadius = 1000; // 1km radius\n  private users: UserInfo[] = [];\n  private currentUser: UserInfo | null = null;\n  private geofenceEvents: GeofenceEvent[] = [];\n  private watchId: string | undefined;\n  private entryTime: number | null = null;\n\n  constructor() {\n    this.initializeCurrentUser();\n  }\n\n  async initializeCurrentUser() {\n    try {\n      const deviceInfo = await Device.getInfo();\n      const networkInfo = await Network.getStatus();\n      const position = await Geolocation.getCurrentPosition();\n\n      this.currentUser = {\n        id: this.generateUserId(),\n        deviceInfo,\n        networkInfo,\n        location: {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n          accuracy: position.coords.accuracy || 0,\n          timestamp: Date.now(),\n        },\n        geofenceStatus: this.isInsideGeofence(\n          position.coords.latitude,\n          position.coords.longitude\n        )\n          ? \"inside\"\n          : \"outside\",\n        lastSeen: Date.now(),\n      };\n\n      // Start watching position\n      this.startWatchingPosition();\n    } catch (error) {\n      console.error(\"Error initializing user:\", error);\n    }\n  }\n\n  private generateUserId(): string {\n    return \"user_\" + Math.random().toString(36).substr(2, 9) + \"_\" + Date.now();\n  }\n\n  private isInsideGeofence(lat: number, lng: number): boolean {\n    const distance = this.calculateDistance(\n      lat,\n      lng,\n      this.geofenceCenter.lat,\n      this.geofenceCenter.lng\n    );\n    return distance <= this.geofenceRadius;\n  }\n\n  private calculateDistance(\n    lat1: number,\n    lng1: number,\n    lat2: number,\n    lng2: number\n  ): number {\n    const R = 6371e3; // Earth radius in meters\n    const φ1 = (lat1 * Math.PI) / 180;\n    const φ2 = (lat2 * Math.PI) / 180;\n    const Δφ = ((lat2 - lat1) * Math.PI) / 180;\n    const Δλ = ((lng2 - lng1) * Math.PI) / 180;\n\n    const a =\n      Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\n      Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n    return R * c;\n  }\n\n  async startWatchingPosition() {\n    try {\n      this.watchId = await Geolocation.watchPosition({}, (position, err) => {\n        if (position && this.currentUser) {\n          const wasInside = this.currentUser.geofenceStatus === \"inside\";\n          const isNowInside = this.isInsideGeofence(\n            position.coords.latitude,\n            position.coords.longitude\n          );\n\n          // Update current user location\n          this.currentUser.location = {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude,\n            accuracy: position.coords.accuracy || 0,\n            timestamp: Date.now(),\n          };\n          this.currentUser.lastSeen = Date.now();\n\n          // Check for geofence transitions\n          if (!wasInside && isNowInside) {\n            // Entering geofence\n            this.currentUser.geofenceStatus = \"entering\";\n            this.entryTime = Date.now();\n            this.recordGeofenceEvent(\"enter\");\n            setTimeout(() => {\n              if (this.currentUser) this.currentUser.geofenceStatus = \"inside\";\n            }, 1000);\n          } else if (wasInside && !isNowInside) {\n            // Exiting geofence\n            this.currentUser.geofenceStatus = \"exiting\";\n            const duration = this.entryTime ? Date.now() - this.entryTime : 0;\n            this.recordGeofenceEvent(\"exit\", duration);\n            this.entryTime = null;\n            setTimeout(() => {\n              if (this.currentUser) this.currentUser.geofenceStatus = \"outside\";\n            }, 1000);\n          } else if (isNowInside) {\n            this.currentUser.geofenceStatus = \"inside\";\n          } else {\n            this.currentUser.geofenceStatus = \"outside\";\n          }\n        }\n\n        if (err) {\n          console.error(\"Position watch error:\", err);\n        }\n      });\n    } catch (error) {\n      console.error(\"Error starting position watch:\", error);\n    }\n  }\n\n  private recordGeofenceEvent(type: \"enter\" | \"exit\", duration?: number) {\n    if (!this.currentUser) return;\n\n    const event: GeofenceEvent = {\n      userId: this.currentUser.id,\n      userDeviceInfo: this.currentUser.deviceInfo,\n      type,\n      timestamp: Date.now(),\n      location: {\n        latitude: this.currentUser.location.latitude,\n        longitude: this.currentUser.location.longitude,\n      },\n      duration,\n    };\n\n    this.geofenceEvents.unshift(event); // Add to beginning\n\n    // Keep only last 50 events\n    if (this.geofenceEvents.length > 50) {\n      this.geofenceEvents = this.geofenceEvents.slice(0, 50);\n    }\n  }\n\n  getCurrentUser(): UserInfo | null {\n    return this.currentUser;\n  }\n\n  getUsers(): UserInfo[] {\n    // In a real app, this would come from a server\n    // For demo, we'll simulate other users\n    return this.users;\n  }\n\n  getUsersInGeofence(): UserInfo[] {\n    return this.users.filter((user) => user.geofenceStatus === \"inside\");\n  }\n\n  getGeofenceEvents(): GeofenceEvent[] {\n    return this.geofenceEvents;\n  }\n\n  getGeofenceCenter() {\n    return this.geofenceCenter;\n  }\n\n  getGeofenceRadius() {\n    return this.geofenceRadius;\n  }\n\n  async stopWatching() {\n    if (this.watchId) {\n      await Geolocation.clearWatch({ id: this.watchId });\n    }\n  }\n\n  // Simulate adding other users (in real app, this would be real-time data)\n  simulateOtherUsers() {\n    const mockUsers: UserInfo[] = [\n      {\n        id: \"user_mock_1\",\n        deviceInfo: {\n          model: \"iPhone 12\",\n          platform: \"ios\",\n          operatingSystem: \"ios\",\n          osVersion: \"15.0\",\n          manufacturer: \"Apple\",\n        },\n        networkInfo: {\n          connected: true,\n          connectionType: \"wifi\",\n        },\n        location: {\n          latitude: 10.692,\n          longitude: -61.222,\n          accuracy: 5,\n          timestamp: Date.now() - 30000,\n        },\n        geofenceStatus: \"inside\",\n        lastSeen: Date.now() - 30000,\n      },\n      {\n        id: \"user_mock_2\",\n        deviceInfo: {\n          model: \"Samsung Galaxy S21\",\n          platform: \"android\",\n          operatingSystem: \"android\",\n          osVersion: \"11\",\n          manufacturer: \"Samsung\",\n        },\n        networkInfo: {\n          connected: true,\n          connectionType: \"4g\",\n        },\n        location: {\n          latitude: 10.6915,\n          longitude: -61.223,\n          accuracy: 8,\n          timestamp: Date.now() - 60000,\n        },\n        geofenceStatus: \"inside\",\n        lastSeen: Date.now() - 60000,\n      },\n    ];\n\n    this.users = mockUsers;\n  }\n\n  // Methods for activity log testing\n  addMockEvent(type: \"enter\" | \"exit\") {\n    const mockEvent: GeofenceEvent = {\n      userId: this.currentUser?.id || \"mock_user_\" + Date.now(),\n      userDeviceInfo: this.currentUser?.deviceInfo || {\n        model: \"Mock Device\",\n        platform: \"web\",\n        operatingSystem: \"unknown\",\n        osVersion: \"1.0\",\n        manufacturer: \"Mock\",\n      },\n      type,\n      timestamp: Date.now(),\n      location: {\n        latitude: 10.6918 + (Math.random() - 0.5) * 0.001,\n        longitude: -61.2225 + (Math.random() - 0.5) * 0.001,\n      },\n      duration:\n        type === \"exit\"\n          ? Math.floor(Math.random() * 300000) + 60000\n          : undefined, // 1-5 minutes\n    };\n\n    this.geofenceEvents.unshift(mockEvent);\n\n    // Keep only last 50 events\n    if (this.geofenceEvents.length > 50) {\n      this.geofenceEvents = this.geofenceEvents.slice(0, 50);\n    }\n  }\n\n  clearEvents() {\n    this.geofenceEvents = [];\n  }\n\n  // Add some initial sample data for demonstration\n  addInitialSampleData() {\n    // if (this.geofenceEvents.length === 0) {\n    //   // Add some sample events from the past\n    //   const sampleEvents: GeofenceEvent[] = [\n    //     {\n    //       userId: \"sample_user_1\",\n    //       userDeviceInfo: {\n    //         model: \"iPhone 12\",\n    //         platform: \"ios\",\n    //         operatingSystem: \"ios\",\n    //         osVersion: \"15.0\",\n    //         manufacturer: \"Apple\",\n    //       },\n    //       type: \"enter\",\n    //       timestamp: Date.now() - 3600000, // 1 hour ago\n    //       location: { latitude: 10.6918, longitude: -61.2225 },\n    //     },\n    //     {\n    //       userId: \"sample_user_1\",\n    //       userDeviceInfo: {\n    //         model: \"iPhone 12\",\n    //         platform: \"ios\",\n    //         operatingSystem: \"ios\",\n    //         osVersion: \"15.0\",\n    //         manufacturer: \"Apple\",\n    //       },\n    //       type: \"exit\",\n    //       timestamp: Date.now() - 1800000, // 30 minutes ago\n    //       location: { latitude: 10.692, longitude: -61.2227 },\n    //       duration: 1800000, // 30 minutes\n    //     },\n    //     {\n    //       userId: \"sample_user_2\",\n    //       userDeviceInfo: {\n    //         model: \"Samsung Galaxy S21\",\n    //         platform: \"android\",\n    //         operatingSystem: \"android\",\n    //         osVersion: \"11\",\n    //         manufacturer: \"Samsung\",\n    //       },\n    //       type: \"enter\",\n    //       timestamp: Date.now() - 900000, // 15 minutes ago\n    //       location: { latitude: 10.6916, longitude: -61.2223 },\n    //     },\n    //   ];\n    //   this.geofenceEvents = sampleEvents;\n    // }\n  }\n}\n","export {};\n","import { registerPlugin } from '@capacitor/core';\nconst Device = registerPlugin('Device', {\n    web: () => import('./web').then(m => new m.DeviceWeb()),\n});\nexport * from './definitions';\nexport { Device };\n","export {};\n","import { registerPlugin } from '@capacitor/core';\nconst Network = registerPlugin('Network', {\n    web: () => import('./web').then(m => new m.NetworkWeb()),\n});\nexport * from './definitions';\nexport { Network };\n","import { EmptyError } from './util/EmptyError';\nexport function lastValueFrom(source, config) {\n    const hasConfig = typeof config === 'object';\n    return new Promise((resolve, reject) => {\n        let _hasValue = false;\n        let _value;\n        source.subscribe({\n            next: (value) => {\n                _value = value;\n                _hasValue = true;\n            },\n            error: reject,\n            complete: () => {\n                if (_hasValue) {\n                    resolve(_value);\n                }\n                else if (hasConfig) {\n                    resolve(config.defaultValue);\n                }\n                else {\n                    reject(new EmptyError());\n                }\n            },\n        });\n    });\n}\n","export const darkStyle = [\n  {\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#242f3e\"\n      }\n    ]\n  },\n  {\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#746855\"\n      }\n    ]\n  },\n  {\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": [\n      {\n        \"color\": \"#242f3e\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"administrative.locality\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#d59563\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"poi\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#d59563\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"poi.park\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#263c3f\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"poi.park\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#6b9a76\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#38414e\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": [\n      {\n        \"color\": \"#212a37\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#9ca5b3\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.highway\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#746855\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.highway\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": [\n      {\n        \"color\": \"#1f2835\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.highway\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#f3d19c\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"transit\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#2f3948\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"transit.station\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#d59563\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"water\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#17263c\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"water\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#515c6d\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"water\",\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": [\n      {\n        \"color\": \"#17263c\"\n      }\n    ]\n  }\n]"],"names":["RouterModule","ActivityLogPage","routes","path","component","ActivityLogPageRoutingModule","forChild","imports","i1","exports","CommonModule","FormsModule","IonicModule","ActivityLogModule","declarations","GeofenceService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","event_r2","userDeviceInfo","model","platform","ctx_r2","formatDuration","duration","ɵɵelement","ɵɵtemplate","ActivityLogPage_div_15_tr_17_span_14_Template","ActivityLogPage_div_15_tr_17_span_16_Template","ɵɵproperty","getEventColor","type","getEventIcon","toUpperCase","formatTimestamp","timestamp","ɵɵtextInterpolate2","location","latitude","toFixed","longitude","userId","ActivityLogPage_div_15_tr_17_Template","geofenceEvents","getEntriesCount","getExitsCount","constructor","geofenceService","ngOnInit","console","log","loadEvents","setInterval","getGeofenceEvents","length","date","Date","toLocaleString","hours","Math","floor","minutes","seconds","filter","event","addSampleEntry","addMockEvent","addSampleExit","clearEvents","ɵɵdirectiveInject","selectors","decls","vars","consts","template","ActivityLogPage_Template","rf","ctx","ActivityLogPage_div_15_Template","ActivityLogPage_ng_template_16_Template","ɵɵtemplateRefExtractor","ActivityLogPage_ion_card_18_Template","ɵɵlistener","ActivityLogPage_Template_ion_button_click_24_listener","ɵɵrestoreView","_r1","ɵɵresetView","ActivityLogPage_Template_ion_button_click_27_listener","ActivityLogPage_Template_ion_button_click_30_listener","noEvents_r4","MapPage","MapPageRoutingModule","MapModule","ElementRef","ConferenceData","Platform","DOCUMENT","darkStyle","doc","confData","ngAfterViewInit","_this","_asyncToGenerator","appEl","querySelector","isDark","style","classList","contains","apiKey","googleMaps","getGoogleMaps","map","getMap","subscribe","mapData","mapEle","mapElement","nativeElement","centerCoords","lat","lng","Map","center","zoom","styles","forEach","markerData","infoWindow","InfoWindow","content","name","marker","Marker","position","title","addListener","open","addListenerOnce","add","observer","MutationObserver","mutations","mutation","attributeName","el","target","setOptions","observe","attributes","i2","viewQuery","MapPage_Query","win","window","googleModule","google","maps","Promise","resolve","reject","script","document","createElement","src","async","defer","body","appendChild","onload","googleModule2","Config","ModalController","NavParams","ScheduleFilterPage_ion_button_3_Template_ion_button_click_0_listener","ctx_r1","ɵɵnextContext","dismiss","ScheduleFilterPage_ion_button_4_Template_ion_button_click_0_listener","_r3","selectAll","track_r5","icon","ScheduleFilterPage_ion_item_14_ion_icon_2_Template","ɵɵtwoWayListener","ScheduleFilterPage_ion_item_14_Template_ion_checkbox_ngModelChange_3_listener","$event","_r4","$implicit","ɵɵtwoWayBindingSet","isChecked","ios","ɵɵtwoWayProperty","ɵɵtextInterpolate1","ScheduleFilterPage_ion_footer_15_Template_ion_button_click_3_listener","_r6","ScheduleFilterPage_ion_footer_15_Template_ion_button_click_6_listener","ScheduleFilterPage","config","modalCtrl","navParams","tracks","ionViewWillEnter","get","excludedTrackNames","getTracks","track","push","indexOf","check","applyFilters","c","data","ScheduleFilterPage_Template","ScheduleFilterPage_ion_button_3_Template","ScheduleFilterPage_ion_button_4_Template","ScheduleFilterPage_Template_ion_button_click_8_listener","ScheduleFilterPage_ion_item_14_Template","ScheduleFilterPage_ion_footer_15_Template","SchedulePage","SchedulePageRoutingModule","ScheduleModule","NgZone","Router","AlertController","IonList","IonRouterOutlet","LoadingController","ToastController","lastValueFrom","Device","Geolocation","UserData","DeviceDetectorService","HttpClient","SchedulePage_ion_segment_3_Template_ion_segment_ngModelChange_0_listener","_r2","segment","SchedulePage_ion_segment_3_Template_ion_segment_ionChange_0_listener","updateSchedule","SchedulePage_ion_searchbar_5_Template_ion_searchbar_ngModelChange_0_listener","queryText","SchedulePage_ion_searchbar_5_Template_ion_searchbar_ionInput_0_listener","SchedulePage_ion_searchbar_5_Template_ion_searchbar_ionCancel_0_listener","showSearchbar","SchedulePage_ion_button_7_Template_ion_button_click_0_listener","_r5","SchedulePage_ion_button_8_Template_ion_button_click_0_listener","presentFilter","SchedulePage_ion_button_8_span_1_Template","SchedulePage_ion_button_8_span_2_Template","SchedulePage_ion_toolbar_9_Template_ion_segment_ngModelChange_1_listener","_r7","SchedulePage_ion_toolbar_9_Template_ion_segment_ionChange_1_listener","ipAddress","deviceInfo","device","os","os_version","browser","browser_version","isMobile","isTablet","isDesktop","deviceInfo1","osVersion","uuid","manufacturer","isVirtual","SchedulePage_div_22_ul_1_Template","SchedulePage_div_22_ng_template_2_Template","SchedulePage_div_22_ul_4_Template","SchedulePage_div_22_ng_template_5_Template","SchedulePage_div_22_ul_7_Template","SchedulePage_div_22_ng_template_8_Template","noIpAddress_r8","noDeviceInfo_r9","noDeviceInfo1_r10","SchedulePage_div_23_ion_item_sliding_5_ion_item_option_10_Template_ion_item_option_click_0_listener","_r15","session_r14","slidingItem_r16","ɵɵreference","addFavorite","SchedulePage_div_23_ion_item_sliding_5_ion_item_option_11_Template_ion_item_option_click_0_listener","_r17","removeFavorite","SchedulePage_div_23_ion_item_sliding_5_Template_ion_label_click_4_listener","_r13","updateMap","SchedulePage_div_23_ion_item_sliding_5_ion_item_option_10_Template","SchedulePage_div_23_ion_item_sliding_5_ion_item_option_11_Template","hide","timeStart","timeEnd","SchedulePage_div_23_Template_ion_item_divider_click_1_listener","group_r12","_r11","toggleGroup","SchedulePage_div_23_ion_item_sliding_5_Template","time","ɵɵpureFunction1","_c2","collapsed","sessions","ɵɵpipeBind2","coord_r18","SchedulePage_div_32_div_1_div_3_Template","i_r20","polygon_r19","SchedulePage_div_32_div_1_Template","polygons","alertCtrl","loadingCtrl","router","routerOutlet","toastCtrl","user","ngZone","deviceService","http","dayIndex","excludeTracks","shownSessions","groups","polygonsForMapPlotting","isNavExpanded","currentToast","wasInPolygon","enterSound","Audio","exitSound","ready","then","getDeviceInfo","getIpAddress","scheduleList","closeSlidingItems","getTimeline","modal","create","presentingElement","nativeEl","componentProps","excludedTracks","present","onWillDismiss","slidingItem","sessionData","_this2","hasFavorite","close","_this3","ip","getInfo","error","toggleNav","group","_this4","alert","header","message","buttons","text","handler","watchPosition","_this5","wait","timeout","maximumAge","enableHighAccuracy","_ref","err","showToast","coords","code","run","currentPosition","isInAnyPolygon","isWithinPolygon","handlePolygonCheck","address","getAddressFromCoordinates","setCenter","addMarker","_x","_x2","apply","arguments","_this6","url","response","fetch","ok","Error","status","json","results","formatted_address","TypeError","includes","getCoordsFromLocation","locationCoords","session","_this7","_this8","initPolygonMap","openSocial","network","fab","_this9","loading","random","_this10","initializeGoogleMaps","mockPosition","getMockPosition","createMap","setupClickListener","_this11","getPositionWithRetry","mapId","setMap","draggable","updatePosition","_this12","getPosition","toJSON","_this13","gotPolygonCoords","lastClickTime","clickTimeout","_ref3","currentTime","getTime","timeDifference","latLng","clearTimeout","setTimeout","handlePolygonCreation","_x3","clearMap","polygon","_this14","toast","_this15","Polygon","paths","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","isInPolygon","_this16","play","catch","role","_this17","LatLng","geometry","poly","containsLocation","promptForAreaName","_this18","inputs","placeholder","areaName","result","onDidDismiss","values","handleAction","isWithinBounds","bounds","north","south","east","west","getCoordinatesByclicking","i3","i4","i5","i6","i7","SchedulePage_Query","SchedulePage_ion_buttons_2_Template","SchedulePage_ion_segment_3_Template","SchedulePage_ion_title_4_Template","SchedulePage_ion_searchbar_5_Template","SchedulePage_ion_button_7_Template","SchedulePage_ion_button_8_Template","SchedulePage_ion_toolbar_9_Template","SchedulePage_Template_ion_searchbar_ngModelChange_16_listener","SchedulePage_Template_ion_searchbar_ionInput_16_listener","SchedulePage_Template_h1_click_20_listener","SchedulePage_div_22_Template","SchedulePage_div_23_Template","SchedulePage_Template_ion_button_click_28_listener","SchedulePage_Template_ion_button_click_30_listener","SchedulePage_div_32_Template","SchedulePage_Template_ion_fab_button_click_40_listener","fab_r21","SchedulePage_Template_ion_fab_button_click_42_listener","SchedulePage_Template_ion_fab_button_click_44_listener","SchedulePage_Template_ion_fab_button_click_46_listener","_c3","_getPositionWithRetry","retries","i","getCurrentPosition","SessionDetailPage","SessionDetailPageRoutingModule","SessionDetailModule","ActivatedRoute","ɵɵclassMap","track_r1","toLowerCase","SessionDetailPage_div_11_span_3_Template","description","dataProvider","userProvider","route","isFavorite","defaultHref","load","schedule","sessionId","snapshot","paramMap","id","ionViewDidEnter","sessionClick","item","toggleFavorite","shareSession","SessionDetailPage_Template","SessionDetailPage_Template_ion_button_click_5_listener","SessionDetailPage_ion_icon_6_Template","SessionDetailPage_ion_icon_7_Template","SessionDetailPage_Template_ion_button_click_8_listener","SessionDetailPage_div_11_Template","SessionDetailPage_Template_ion_item_click_13_listener","SessionDetailPage_Template_ion_item_click_16_listener","SessionDetailPage_Template_ion_item_click_19_listener","SessionDetailPage_Template_ion_item_click_22_listener","SessionDetailPage_Template_ion_item_click_26_listener","SpeakerDetailPage","SpeakerDetailPageRoutingModule","SpeakerDetailModule","ActionSheetController","InAppBrowser","SpeakerDetailPage_ion_buttons_5_Template_ion_button_click_1_listener","openContact","speaker","SpeakerDetailPage_ion_buttons_5_Template_ion_button_click_3_listener","openSpeakerShare","actionSheetCtrl","inAppBrowser","speakerId","speakers","openExternalUrl","actionSheet","twitter","cordova","plugins","clipboard","copy","mode","email","phone","SpeakerDetailPage_Template","SpeakerDetailPage_ion_buttons_5_Template","SpeakerDetailPage_Template_ion_chip_click_14_listener","SpeakerDetailPage_Template_ion_chip_click_18_listener","SpeakerDetailPage_Template_ion_chip_click_22_listener","profilePic","ɵɵsanitizeUrl","about","SpeakerListPage","SpeakerListPageRoutingModule","SpeakerListModule","ctx_r0","getStatusColor","currentUser","geofenceStatus","getStatusText","accuracy","operatingSystem","networkInfo","connectionType","connected","user_r2","ɵɵtextInterpolate3","lastSeen","SpeakerListPage_ion_list_13_ion_item_1_Template","usersInGeofence","user_r3","SpeakerListPage_ion_list_21_ion_item_1_Template","allUsers","initializeCurrentUser","simulateOtherUsers","updateUserData","getCurrentUser","getUsersInGeofence","getUsers","ionViewWillLeave","stopWatching","SpeakerListPage_Template","SpeakerListPage_ion_card_7_Template","SpeakerListPage_ion_list_13_Template","SpeakerListPage_ng_template_14_Template","SpeakerListPage_ion_list_21_Template","SpeakerListPage_ng_template_22_Template","noUsers_r4","noActiveUsers_r5","TabsPage","children","loadChildren","m","redirectTo","pathMatch","TabsPageRoutingModule","TabsModule","TabsPage_Template","of","pipe","processData","day","speakerNames","speakerName","find","s","replace","queryWords","split","w","trim","filterSession","matchesQueryText","queryWord","matchesTracks","trackName","matchesSegment","getSpeakers","sort","a","b","aName","pop","bName","localeCompare","ɵɵinject","factory","ɵfac","providedIn","Network","geofenceCenter","geofenceRadius","users","entryTime","getStatus","generateUserId","now","isInsideGeofence","startWatchingPosition","toString","substr","distance","calculateDistance","lat1","lng1","lat2","lng2","R","φ1","PI","φ2","Δφ","Δλ","sin","cos","atan2","sqrt","watchId","wasInside","isNowInside","recordGeofenceEvent","unshift","slice","getGeofenceCenter","getGeofenceRadius","clearWatch","mockUsers","_this$currentUser","_this$currentUser2","mockEvent","undefined","addInitialSampleData","registerPlugin","web","DeviceWeb","NetworkWeb","EmptyError","source","hasConfig","_hasValue","_value","next","value","complete","defaultValue"],"sourceRoot":"webpack:///","x_google_ignoreList":[32,33,34,35,36]}