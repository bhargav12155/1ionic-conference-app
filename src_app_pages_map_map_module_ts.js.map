{"version":3,"file":"src_app_pages_map_map_module_ts.js","mappings":"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","sources":["./src/app/pages/map/map-routing.module.ts","./src/app/pages/map/map.module.ts","./src/app/pages/map/map.page.ts","./src/app/pages/map/map.page.html"],"sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { MapPage } from \"./map.page\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: MapPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MapPageRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { MapPageRoutingModule } from \"./map-routing.module\";\nimport { MapPage } from \"./map.page\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, MapPageRoutingModule],\n  declarations: [MapPage],\n})\nexport class MapPageModule {}\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  AfterViewInit,\n  NgZone,\n} from \"@angular/core\";\nimport { ToastController } from \"@ionic/angular\";\nimport { GeofenceService } from \"../../providers/geofence.service\";\n\ndeclare const google: any;\n\n@Component({\n  selector: \"app-map\",\n  templateUrl: \"./map.page.html\",\n  styleUrls: [\"./map.page.scss\"],\n})\nexport class MapPage implements OnInit, AfterViewInit {\n  @ViewChild(\"mapPlotting\", { static: false }) mapElement: ElementRef;\n\n  map: any;\n  marker: any;\n  polygons: any[] = [];\n  currentPolygon: any = null;\n  allPolygonsData: any[][] = [];\n  currentPolygonPoints: any[] = [];\n  isInsidePolygon: boolean = false;\n  statusText: string =\n    \"Click 'Draw Polygon' to start drawing a custom geofence\";\n  wasInPolygon: boolean = false;\n  isDrawing: boolean = false;\n  drawingManagerEnabled: boolean = false;\n  drawingManager: any;\n  tempMarkers: any[] = [];\n  polygonCount: number = 0;\n  apiKey = \"AIzaSyABw7DX0sg8fmhPt9H6JdlIGO-GikNgWhI\";\n  enterSound: HTMLAudioElement;\n  exitSound: HTMLAudioElement;\n\n  constructor(\n    private toastCtrl: ToastController,\n    private geofenceService: GeofenceService,\n    private ngZone: NgZone\n  ) {\n    this.enterSound = new Audio(\"/assets/sounds/chime.mp3\");\n    this.exitSound = new Audio(\"/assets/sounds/chime.mp3\");\n  }\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {\n    this.loadGoogleMaps();\n  }\n\n  loadGoogleMaps() {\n    if (typeof google !== \"undefined\") {\n      this.initializeMap();\n    } else {\n      const script = document.createElement(\"script\");\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${this.apiKey}&libraries=geometry,drawing`;\n      script.async = true;\n      script.defer = true;\n      script.onload = () => {\n        this.initializeMap();\n      };\n      document.head.appendChild(script);\n    }\n  }\n\n  initializeMap() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const userLatLng = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          };\n          this.createMapAt(userLatLng, 20);\n        },\n        (error) => {\n          console.error(\"Error getting user location:\", error);\n          this.handleLocationError(error);\n          const fallbackLatLng = { lat: 10.6918, lng: -61.2225 };\n          this.createMapAt(fallbackLatLng, 12);\n        },\n        { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 } // Add these options\n      );\n    } else {\n      console.warn(\"Geolocation is not supported by this browser.\");\n      const fallbackLatLng = { lat: 10.6918, lng: -61.2225 };\n      this.createMapAt(fallbackLatLng, 12);\n    }\n  }\n  private handleLocationError(error: any) {\n    switch (error.code) {\n      case error.PERMISSION_DENIED:\n        this.toastCtrl\n          .create({\n            message: \"User denied the request for Geolocation.\",\n            duration: 3000,\n          })\n          .then((toast) => toast.present());\n        break;\n      case error.POSITION_UNAVAILABLE:\n        this.toastCtrl\n          .create({\n            message: \"Location information is unavailable.\",\n            duration: 3000,\n          })\n          .then((toast) => toast.present());\n        break;\n      case error.TIMEOUT:\n        this.toastCtrl\n          .create({\n            message: \"The request to get user location timed out.\",\n            duration: 3000,\n          })\n          .then((toast) => toast.present());\n        break;\n      case error.UNKNOWN_ERROR:\n        this.toastCtrl\n          .create({\n            message: \"An unknown error occurred.\",\n            duration: 3000,\n          })\n          .then((toast) => toast.present());\n        break;\n    }\n  }\n  createMapAt(centerLatLng: { lat: number; lng: number }, zoomLevel: number) {\n    const mapOptions = {\n      center: centerLatLng,\n      zoom: zoomLevel, // Use the passed zoomLevel\n      mapTypeId: google.maps.MapTypeId.ROADMAP,\n    };\n\n    this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions);\n\n    // Create draggable marker at center\n    this.marker = new google.maps.Marker({\n      position: centerLatLng,\n      map: this.map,\n      draggable: true,\n      title: \"Drag me to simulate movement!\",\n    });\n\n    // Listen to marker drag events\n    this.marker.addListener(\"dragend\", () => {\n      this.checkPolygonStatus();\n    });\n\n    // Enable polygon drawing\n    this.enablePolygonDrawing(); // Assuming you have this method defined\n\n    // Initial status check\n    this.checkPolygonStatus(); // Assuming you have this method defined\n  }\n\n  enablePolygonDrawing() {\n    // Remove the old click listener for automatic polygon creation\n    // We'll now use manual drawing methods\n    this.statusText = \"Click 'Draw Polygon' to start drawing a custom geofence\";\n  }\n\n  startDrawing() {\n    // Don't clear existing polygons - allow multiple polygons\n    this.ngZone.run(() => {\n      this.isDrawing = true;\n      this.currentPolygonPoints = [];\n      this.statusText = \"Click on the map to add points to your polygon\";\n    });\n\n    // Add click listener for polygon drawing\n    this.map.addListener(\"click\", this.onMapClick.bind(this));\n  }\n\n  onMapClick(event: any) {\n    if (!this.isDrawing) return;\n\n    const latLng = event.latLng;\n    this.currentPolygonPoints.push({\n      lat: latLng.lat(),\n      lng: latLng.lng(),\n    });\n\n    // Add a temporary marker to show the point\n    const colors = [\n      \"#FF0000\",\n      \"#00FF00\",\n      \"#0000FF\",\n      \"#FFFF00\",\n      \"#FF00FF\",\n      \"#00FFFF\",\n    ];\n    const color = colors[this.polygonCount % colors.length];\n\n    const tempMarker = new google.maps.Marker({\n      position: latLng,\n      map: this.map,\n      icon: {\n        path: google.maps.SymbolPath.CIRCLE,\n        scale: 6,\n        fillColor: color,\n        fillOpacity: 1,\n        strokeWeight: 2,\n        strokeColor: \"#FFFFFF\",\n      },\n    });\n    this.tempMarkers.push(tempMarker);\n\n    this.ngZone.run(() => {\n      this.statusText = `Points added: ${this.currentPolygonPoints.length}. Click 'Finish' when done (minimum 3 points)`;\n    });\n  }\n\n  finishDrawing() {\n    if (!this.isDrawing || this.currentPolygonPoints.length < 3) {\n      return;\n    }\n\n    this.ngZone.run(() => {\n      this.isDrawing = false;\n    });\n\n    google.maps.event.clearListeners(this.map, \"click\");\n\n    // Clear temporary markers\n    this.tempMarkers.forEach((marker) => marker.setMap(null));\n    this.tempMarkers = [];\n\n    // Create the polygon with different colors for each polygon\n    const colors = [\n      \"#FF0000\",\n      \"#00FF00\",\n      \"#0000FF\",\n      \"#FFFF00\",\n      \"#FF00FF\",\n      \"#00FFFF\",\n    ];\n    const color = colors[this.polygonCount % colors.length];\n\n    const polygonData = [...this.currentPolygonPoints];\n    this.currentPolygon = new google.maps.Polygon({\n      paths: polygonData,\n      strokeColor: color,\n      strokeOpacity: 0.8,\n      strokeWeight: 2,\n      fillColor: color,\n      fillOpacity: 0.35,\n      editable: true,\n    });\n\n    this.currentPolygon.setMap(this.map);\n\n    // Store the polygon and its data\n    this.polygons.push(this.currentPolygon);\n    this.allPolygonsData.push(polygonData);\n    this.polygonCount++;\n\n    this.ngZone.run(() => {\n      this.statusText = `Polygon ${this.polygonCount} created! Total polygons: ${this.polygons.length}. Drag marker to test geofences.`;\n    });\n\n    this.checkPolygonStatus();\n\n    // Add listener for polygon editing\n    this.currentPolygon.addListener(\"set_at\", () => {\n      this.updatePolygonPoints();\n    });\n\n    this.currentPolygon.addListener(\"insert_at\", () => {\n      this.updatePolygonPoints();\n    });\n\n    // Reset current polygon points\n    this.currentPolygonPoints = [];\n  }\n\n  updatePolygonPoints() {\n    // Update polygon data when edited\n    this.polygons.forEach((polygon, index) => {\n      const path = polygon.getPath();\n      this.allPolygonsData[index] = [];\n      path.forEach((latLng: any) => {\n        this.allPolygonsData[index].push({\n          lat: latLng.lat(),\n          lng: latLng.lng(),\n        });\n      });\n    });\n    this.checkPolygonStatus();\n  }\n\n  enableDrawingManager() {\n    // Always allow enabling drawing tools, even after clearing\n    if (this.drawingManager) {\n      this.drawingManager.setMap(null);\n      this.drawingManager = null;\n      this.drawingManagerEnabled = false;\n    }\n\n    this.drawingManager = new google.maps.drawing.DrawingManager({\n      drawingMode: google.maps.drawing.OverlayType.POLYGON,\n      drawingControl: true,\n      drawingControlOptions: {\n        position: google.maps.ControlPosition.TOP_CENTER,\n        drawingModes: [\n          google.maps.drawing.OverlayType.POLYGON,\n          google.maps.drawing.OverlayType.CIRCLE,\n          google.maps.drawing.OverlayType.RECTANGLE,\n        ],\n      },\n      polygonOptions: {\n        strokeColor: \"#FF0000\",\n        strokeOpacity: 0.8,\n        strokeWeight: 2,\n        fillColor: \"#FF0000\",\n        fillOpacity: 0.35,\n        editable: true,\n      },\n    });\n\n    this.drawingManager.setMap(this.map);\n    this.drawingManagerEnabled = true;\n\n    google.maps.event.addListener(\n      this.drawingManager,\n      \"overlaycomplete\",\n      (event: any) => {\n        // Don't clear existing polygons - add to the collection\n        const colors = [\n          \"#FF0000\",\n          \"#00FF00\",\n          \"#0000FF\",\n          \"#FFFF00\",\n          \"#FF00FF\",\n          \"#00FFFF\",\n        ];\n        const color = colors[this.polygonCount % colors.length];\n\n        // Update the new polygon's appearance\n        event.overlay.setOptions({\n          strokeColor: color,\n          fillColor: color,\n          editable: true,\n        });\n\n        this.polygons.push(event.overlay);\n        const path = event.overlay.getPath();\n        const polygonData: any[] = [];\n\n        path.forEach((latLng: any) => {\n          polygonData.push({\n            lat: latLng.lat(),\n            lng: latLng.lng(),\n          });\n        });\n\n        this.allPolygonsData.push(polygonData);\n        this.polygonCount++;\n\n        this.ngZone.run(() => {\n          this.statusText = `Polygon ${this.polygonCount} created with drawing tools! Total: ${this.polygons.length}`;\n        });\n\n        this.checkPolygonStatus();\n\n        // Add listeners for editing\n        event.overlay.addListener(\"set_at\", () => {\n          this.updatePolygonPoints();\n        });\n\n        event.overlay.addListener(\"insert_at\", () => {\n          this.updatePolygonPoints();\n        });\n      }\n    );\n  }\n\n  clearPolygon() {\n    // Clear the last polygon only\n    if (this.polygons.length > 0) {\n      const lastPolygon = this.polygons.pop();\n      lastPolygon?.setMap(null);\n      this.allPolygonsData.pop();\n      this.polygonCount = Math.max(0, this.polygonCount - 1);\n    }\n\n    // Clear temporary markers\n    this.tempMarkers.forEach((marker) => marker.setMap(null));\n    this.tempMarkers = [];\n\n    // Stop drawing mode if active\n    if (this.isDrawing) {\n      this.isDrawing = false;\n      google.maps.event.clearListeners(this.map, \"click\");\n      this.currentPolygonPoints = [];\n    }\n\n    this.ngZone.run(() => {\n      if (this.polygons.length === 0) {\n        this.statusText =\n          \"Click 'Draw Polygon' to start drawing a custom geofence\";\n        this.isInsidePolygon = false;\n      } else {\n        this.statusText = `${this.polygons.length} polygon(s) remaining. Drag marker to test geofences.`;\n        this.checkPolygonStatus();\n      }\n    });\n  }\n\n  clearAllPolygons() {\n    // Clear all polygons\n    this.polygons.forEach((polygon) => polygon.setMap(null));\n    this.polygons = [];\n    this.allPolygonsData = [];\n    this.polygonCount = 0;\n\n    // Clear temporary markers\n    this.tempMarkers.forEach((marker) => marker.setMap(null));\n    this.tempMarkers = [];\n\n    // Stop drawing mode if active\n    if (this.isDrawing) {\n      this.isDrawing = false;\n      google.maps.event.clearListeners(this.map, \"click\");\n      this.currentPolygonPoints = [];\n    }\n\n    // Clear drawing manager if enabled\n    if (this.drawingManager) {\n      this.drawingManager.setMap(null);\n      this.drawingManager = null;\n    }\n    this.drawingManagerEnabled = false;\n\n    this.ngZone.run(() => {\n      this.statusText =\n        \"All polygons cleared. Click 'Draw Polygon' to start drawing.\";\n      this.isInsidePolygon = false;\n    });\n  }\n\n  checkPolygonStatus() {\n    if (this.polygons.length === 0 || !this.marker) {\n      return;\n    }\n\n    const markerPosition = this.marker.getPosition();\n    let isInsideAny = false;\n    let polygonIndex = -1;\n\n    // Check if marker is inside any polygon\n    for (let i = 0; i < this.polygons.length; i++) {\n      const isInside = google.maps.geometry.poly.containsLocation(\n        markerPosition,\n        this.polygons[i]\n      );\n      if (isInside) {\n        isInsideAny = true;\n        polygonIndex = i + 1;\n        break;\n      }\n    }\n\n    this.isInsidePolygon = isInsideAny;\n\n    this.ngZone.run(() => {\n      if (isInsideAny) {\n        this.statusText = `Inside Geofence ${polygonIndex}`;\n      } else {\n        this.statusText = `Outside all geofences (${this.polygons.length} total)`;\n      }\n    });\n\n    // Handle geofence transitions\n    if (!this.wasInPolygon && isInsideAny) {\n      // Entering geofence\n      this.wasInPolygon = true;\n      this.handleGeofenceEntry(polygonIndex);\n    } else if (this.wasInPolygon && !isInsideAny) {\n      // Exiting geofence\n      this.wasInPolygon = false;\n      this.handleGeofenceExit();\n    }\n  }\n\n  async handleGeofenceEntry(polygonIndex?: number) {\n    const polygonText = polygonIndex ? ` ${polygonIndex}` : \"\";\n    console.log(`Entered geofence area${polygonText}`);\n\n    // Play sound\n    this.enterSound\n      .play()\n      .catch((error) => console.error(\"Error playing enter sound:\", error));\n\n    // Record event in GeofenceService\n    this.geofenceService.addMockEvent(\"enter\");\n\n    // Show toast notification\n    const toast = await this.toastCtrl.create({\n      header: \"Geofence Entry\",\n      message: `You have entered geofence${polygonText}!`,\n      duration: 3000,\n      color: \"success\",\n      position: \"top\",\n    });\n    await toast.present();\n  }\n\n  async handleGeofenceExit() {\n    console.log(\"Exited geofence area\");\n\n    // Play sound\n    this.exitSound\n      .play()\n      .catch((error) => console.error(\"Error playing exit sound:\", error));\n\n    // Record event in GeofenceService\n    this.geofenceService.addMockEvent(\"exit\");\n\n    // Show toast notification\n    const toast = await this.toastCtrl.create({\n      header: \"Geofence Exit\",\n      message: \"You have left the geofence area!\",\n      duration: 3000,\n      color: \"warning\",\n      position: \"top\",\n    });\n    await toast.present();\n  }\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-menu-button></ion-menu-button>\n        </ion-buttons>\n        <ion-title>Interactive Map</ion-title>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content>\n    <div #mapPlotting id=\"mapPlotting\" style=\"height: 70vh; width: 100%;\"></div>\n\n    <ion-card>\n        <ion-card-header>\n            <ion-card-title>Drawing Tools</ion-card-title>\n        </ion-card-header>\n        <ion-card-content>\n            <ion-row>\n                <ion-col size=\"6\">\n                    <ion-button expand=\"block\" fill=\"solid\" color=\"primary\" (click)=\"startDrawing()\"\n                        [disabled]=\"isDrawing\">\n                        <ion-icon name=\"create\" slot=\"start\"></ion-icon>\n                        {{ isDrawing ? 'Drawing...' : 'Draw Polygon' }}\n                    </ion-button>\n                </ion-col>\n                <ion-col size=\"6\">\n                    <ion-button expand=\"block\" fill=\"outline\" color=\"secondary\" (click)=\"finishDrawing()\"\n                        [disabled]=\"!isDrawing || currentPolygonPoints.length < 3\">\n                        <ion-icon name=\"checkmark\" slot=\"start\"></ion-icon>\n                        Finish\n                    </ion-button>\n                </ion-col>\n            </ion-row>\n            <ion-row>\n                <ion-col size=\"6\">\n                    <ion-button expand=\"block\" fill=\"outline\" color=\"warning\" (click)=\"clearPolygon()\"\n                        [disabled]=\"polygons.length === 0\">\n                        <ion-icon name=\"trash\" slot=\"start\"></ion-icon>\n                        Clear Last\n                    </ion-button>\n                </ion-col>\n                <ion-col size=\"6\">\n                    <ion-button expand=\"block\" fill=\"outline\" color=\"danger\" (click)=\"clearAllPolygons()\"\n                        [disabled]=\"polygons.length === 0\">\n                        <ion-icon name=\"trash\" slot=\"start\"></ion-icon>\n                        Clear All\n                    </ion-button>\n                </ion-col>\n            </ion-row>\n            <ion-row>\n                <ion-col size=\"12\">\n                    <ion-button expand=\"block\" fill=\"outline\" color=\"tertiary\" (click)=\"enableDrawingManager()\"\n                        [disabled]=\"drawingManagerEnabled\">\n                        <ion-icon name=\"shapes\" slot=\"start\"></ion-icon>\n                        Google Drawing Tools\n                    </ion-button>\n                </ion-col>\n            </ion-row>\n            <ion-item>\n                <ion-label>\n                    <h3>Status:</h3>\n                    <p [ngClass]=\"{'inside-geofence': isInsidePolygon, 'outside-geofence': !isInsidePolygon}\">\n                        {{ statusText }}\n                    </p>\n                </ion-label>\n            </ion-item>\n            <ion-item *ngIf=\"isDrawing && currentPolygonPoints.length > 0\">\n                <ion-label>\n                    <h3>Points: {{ currentPolygonPoints.length }}</h3>\n                    <p>Click on map to add points, then click \"Finish\" when done</p>\n                </ion-label>\n            </ion-item>\n            <ion-item *ngIf=\"polygons.length > 0\">\n                <ion-label>\n                    <h3>Total Polygons: {{ polygons.length }}</h3>\n                    <p>Multiple geofences created - different colors for each</p>\n                </ion-label>\n            </ion-item>\n        </ion-card-content>\n    </ion-card>\n</ion-content>"],"names":["RouterModule","MapPage","routes","path","component","MapPageRoutingModule","forChild","imports","i1","exports","CommonModule","FormsModule","IonicModule","MapPageModule","declarations","ElementRef","NgZone","ToastController","GeofenceService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","currentPolygonPoints","length","polygons","constructor","toastCtrl","geofenceService","ngZone","currentPolygon","allPolygonsData","isInsidePolygon","statusText","wasInPolygon","isDrawing","drawingManagerEnabled","tempMarkers","polygonCount","apiKey","enterSound","Audio","exitSound","ngOnInit","ngAfterViewInit","loadGoogleMaps","google","initializeMap","script","document","createElement","src","async","defer","onload","head","appendChild","navigator","geolocation","getCurrentPosition","position","userLatLng","lat","coords","latitude","lng","longitude","createMapAt","error","console","handleLocationError","fallbackLatLng","enableHighAccuracy","timeout","maximumAge","warn","code","PERMISSION_DENIED","create","message","duration","then","toast","present","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","centerLatLng","zoomLevel","mapOptions","center","zoom","mapTypeId","maps","MapTypeId","ROADMAP","map","Map","mapElement","nativeElement","marker","Marker","draggable","title","addListener","checkPolygonStatus","enablePolygonDrawing","startDrawing","run","onMapClick","bind","event","latLng","push","colors","color","tempMarker","icon","SymbolPath","CIRCLE","scale","fillColor","fillOpacity","strokeWeight","strokeColor","finishDrawing","clearListeners","forEach","setMap","polygonData","Polygon","paths","strokeOpacity","editable","updatePolygonPoints","polygon","index","getPath","enableDrawingManager","drawingManager","drawing","DrawingManager","drawingMode","OverlayType","POLYGON","drawingControl","drawingControlOptions","ControlPosition","TOP_CENTER","drawingModes","RECTANGLE","polygonOptions","overlay","setOptions","clearPolygon","lastPolygon","pop","Math","max","clearAllPolygons","markerPosition","getPosition","isInsideAny","polygonIndex","i","isInside","geometry","poly","containsLocation","handleGeofenceEntry","handleGeofenceExit","_this","_asyncToGenerator","polygonText","log","play","catch","addMockEvent","header","_this2","ɵɵdirectiveInject","i2","selectors","viewQuery","MapPage_Query","rf","ctx","ɵɵelement","ɵɵlistener","MapPage_Template_ion_button_click_16_listener","ɵɵrestoreView","_r1","ɵɵresetView","MapPage_Template_ion_button_click_20_listener","MapPage_Template_ion_button_click_25_listener","MapPage_Template_ion_button_click_29_listener","MapPage_Template_ion_button_click_34_listener","ɵɵtemplate","MapPage_ion_item_43_Template","MapPage_ion_item_44_Template","ɵɵproperty","ɵɵpureFunction2","_c1"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}